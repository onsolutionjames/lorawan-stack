// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/lorawan.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/TheThingsIndustries/protoc-gen-go-json/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	go_thethings_network_lorawan_stack_v3_pkg_types "go.thethings.network/lorawan-stack/v3/pkg/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MType int32

const (
	MType_JOIN_REQUEST     MType = 0
	MType_JOIN_ACCEPT      MType = 1
	MType_UNCONFIRMED_UP   MType = 2
	MType_UNCONFIRMED_DOWN MType = 3
	MType_CONFIRMED_UP     MType = 4
	MType_CONFIRMED_DOWN   MType = 5
	MType_REJOIN_REQUEST   MType = 6
	MType_PROPRIETARY      MType = 7
)

var MType_name = map[int32]string{
	0: "JOIN_REQUEST",
	1: "JOIN_ACCEPT",
	2: "UNCONFIRMED_UP",
	3: "UNCONFIRMED_DOWN",
	4: "CONFIRMED_UP",
	5: "CONFIRMED_DOWN",
	6: "REJOIN_REQUEST",
	7: "PROPRIETARY",
}

var MType_value = map[string]int32{
	"JOIN_REQUEST":     0,
	"JOIN_ACCEPT":      1,
	"UNCONFIRMED_UP":   2,
	"UNCONFIRMED_DOWN": 3,
	"CONFIRMED_UP":     4,
	"CONFIRMED_DOWN":   5,
	"REJOIN_REQUEST":   6,
	"PROPRIETARY":      7,
}

func (x MType) String() string {
	return proto.EnumName(MType_name, int32(x))
}

func (MType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{0}
}

type Major int32

const (
	Major_LORAWAN_R1 Major = 0
)

var Major_name = map[int32]string{
	0: "LORAWAN_R1",
}

var Major_value = map[string]int32{
	"LORAWAN_R1": 0,
}

func (x Major) String() string {
	return proto.EnumName(Major_name, int32(x))
}

func (Major) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{1}
}

type MACVersion int32

const (
	MACVersion_MAC_UNKNOWN MACVersion = 0
	MACVersion_MAC_V1_0    MACVersion = 1
	MACVersion_MAC_V1_0_1  MACVersion = 2
	MACVersion_MAC_V1_0_2  MACVersion = 3
	MACVersion_MAC_V1_1    MACVersion = 4
	MACVersion_MAC_V1_0_3  MACVersion = 5
	MACVersion_MAC_V1_0_4  MACVersion = 6
)

var MACVersion_name = map[int32]string{
	0: "MAC_UNKNOWN",
	1: "MAC_V1_0",
	2: "MAC_V1_0_1",
	3: "MAC_V1_0_2",
	4: "MAC_V1_1",
	5: "MAC_V1_0_3",
	6: "MAC_V1_0_4",
}

var MACVersion_value = map[string]int32{
	"MAC_UNKNOWN": 0,
	"MAC_V1_0":    1,
	"MAC_V1_0_1":  2,
	"MAC_V1_0_2":  3,
	"MAC_V1_1":    4,
	"MAC_V1_0_3":  5,
	"MAC_V1_0_4":  6,
}

func (x MACVersion) String() string {
	return proto.EnumName(MACVersion_name, int32(x))
}

func (MACVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{2}
}

type PHYVersion int32

const (
	PHYVersion_PHY_UNKNOWN        PHYVersion = 0
	PHYVersion_PHY_V1_0           PHYVersion = 1
	PHYVersion_TS001_V1_0         PHYVersion = 1
	PHYVersion_PHY_V1_0_1         PHYVersion = 2
	PHYVersion_TS001_V1_0_1       PHYVersion = 2
	PHYVersion_PHY_V1_0_2_REV_A   PHYVersion = 3
	PHYVersion_RP001_V1_0_2       PHYVersion = 3
	PHYVersion_PHY_V1_0_2_REV_B   PHYVersion = 4
	PHYVersion_RP001_V1_0_2_REV_B PHYVersion = 4
	PHYVersion_PHY_V1_1_REV_A     PHYVersion = 5
	PHYVersion_RP001_V1_1_REV_A   PHYVersion = 5
	PHYVersion_PHY_V1_1_REV_B     PHYVersion = 6
	PHYVersion_RP001_V1_1_REV_B   PHYVersion = 6
	PHYVersion_PHY_V1_0_3_REV_A   PHYVersion = 7
	PHYVersion_RP001_V1_0_3_REV_A PHYVersion = 7
	PHYVersion_RP002_V1_0_0       PHYVersion = 8
	PHYVersion_RP002_V1_0_1       PHYVersion = 9
	PHYVersion_RP002_V1_0_2       PHYVersion = 10
	PHYVersion_RP002_V1_0_3       PHYVersion = 11
)

var PHYVersion_name = map[int32]string{
	0: "PHY_UNKNOWN",
	1: "PHY_V1_0",
	// Duplicate value: 1: "TS001_V1_0",
	2: "PHY_V1_0_1",
	// Duplicate value: 2: "TS001_V1_0_1",
	3: "PHY_V1_0_2_REV_A",
	// Duplicate value: 3: "RP001_V1_0_2",
	4: "PHY_V1_0_2_REV_B",
	// Duplicate value: 4: "RP001_V1_0_2_REV_B",
	5: "PHY_V1_1_REV_A",
	// Duplicate value: 5: "RP001_V1_1_REV_A",
	6: "PHY_V1_1_REV_B",
	// Duplicate value: 6: "RP001_V1_1_REV_B",
	7: "PHY_V1_0_3_REV_A",
	// Duplicate value: 7: "RP001_V1_0_3_REV_A",
	8:  "RP002_V1_0_0",
	9:  "RP002_V1_0_1",
	10: "RP002_V1_0_2",
	11: "RP002_V1_0_3",
}

var PHYVersion_value = map[string]int32{
	"PHY_UNKNOWN":        0,
	"PHY_V1_0":           1,
	"TS001_V1_0":         1,
	"PHY_V1_0_1":         2,
	"TS001_V1_0_1":       2,
	"PHY_V1_0_2_REV_A":   3,
	"RP001_V1_0_2":       3,
	"PHY_V1_0_2_REV_B":   4,
	"RP001_V1_0_2_REV_B": 4,
	"PHY_V1_1_REV_A":     5,
	"RP001_V1_1_REV_A":   5,
	"PHY_V1_1_REV_B":     6,
	"RP001_V1_1_REV_B":   6,
	"PHY_V1_0_3_REV_A":   7,
	"RP001_V1_0_3_REV_A": 7,
	"RP002_V1_0_0":       8,
	"RP002_V1_0_1":       9,
	"RP002_V1_0_2":       10,
	"RP002_V1_0_3":       11,
}

func (x PHYVersion) String() string {
	return proto.EnumName(PHYVersion_name, int32(x))
}

func (PHYVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{3}
}

type DataRateIndex int32

const (
	DataRateIndex_DATA_RATE_0  DataRateIndex = 0
	DataRateIndex_DATA_RATE_1  DataRateIndex = 1
	DataRateIndex_DATA_RATE_2  DataRateIndex = 2
	DataRateIndex_DATA_RATE_3  DataRateIndex = 3
	DataRateIndex_DATA_RATE_4  DataRateIndex = 4
	DataRateIndex_DATA_RATE_5  DataRateIndex = 5
	DataRateIndex_DATA_RATE_6  DataRateIndex = 6
	DataRateIndex_DATA_RATE_7  DataRateIndex = 7
	DataRateIndex_DATA_RATE_8  DataRateIndex = 8
	DataRateIndex_DATA_RATE_9  DataRateIndex = 9
	DataRateIndex_DATA_RATE_10 DataRateIndex = 10
	DataRateIndex_DATA_RATE_11 DataRateIndex = 11
	DataRateIndex_DATA_RATE_12 DataRateIndex = 12
	DataRateIndex_DATA_RATE_13 DataRateIndex = 13
	DataRateIndex_DATA_RATE_14 DataRateIndex = 14
	DataRateIndex_DATA_RATE_15 DataRateIndex = 15
)

var DataRateIndex_name = map[int32]string{
	0:  "DATA_RATE_0",
	1:  "DATA_RATE_1",
	2:  "DATA_RATE_2",
	3:  "DATA_RATE_3",
	4:  "DATA_RATE_4",
	5:  "DATA_RATE_5",
	6:  "DATA_RATE_6",
	7:  "DATA_RATE_7",
	8:  "DATA_RATE_8",
	9:  "DATA_RATE_9",
	10: "DATA_RATE_10",
	11: "DATA_RATE_11",
	12: "DATA_RATE_12",
	13: "DATA_RATE_13",
	14: "DATA_RATE_14",
	15: "DATA_RATE_15",
}

var DataRateIndex_value = map[string]int32{
	"DATA_RATE_0":  0,
	"DATA_RATE_1":  1,
	"DATA_RATE_2":  2,
	"DATA_RATE_3":  3,
	"DATA_RATE_4":  4,
	"DATA_RATE_5":  5,
	"DATA_RATE_6":  6,
	"DATA_RATE_7":  7,
	"DATA_RATE_8":  8,
	"DATA_RATE_9":  9,
	"DATA_RATE_10": 10,
	"DATA_RATE_11": 11,
	"DATA_RATE_12": 12,
	"DATA_RATE_13": 13,
	"DATA_RATE_14": 14,
	"DATA_RATE_15": 15,
}

func (x DataRateIndex) String() string {
	return proto.EnumName(DataRateIndex_name, int32(x))
}

func (DataRateIndex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{4}
}

type DataRateOffset int32

const (
	DataRateOffset_DATA_RATE_OFFSET_0 DataRateOffset = 0
	DataRateOffset_DATA_RATE_OFFSET_1 DataRateOffset = 1
	DataRateOffset_DATA_RATE_OFFSET_2 DataRateOffset = 2
	DataRateOffset_DATA_RATE_OFFSET_3 DataRateOffset = 3
	DataRateOffset_DATA_RATE_OFFSET_4 DataRateOffset = 4
	DataRateOffset_DATA_RATE_OFFSET_5 DataRateOffset = 5
	DataRateOffset_DATA_RATE_OFFSET_6 DataRateOffset = 6
	DataRateOffset_DATA_RATE_OFFSET_7 DataRateOffset = 7
)

var DataRateOffset_name = map[int32]string{
	0: "DATA_RATE_OFFSET_0",
	1: "DATA_RATE_OFFSET_1",
	2: "DATA_RATE_OFFSET_2",
	3: "DATA_RATE_OFFSET_3",
	4: "DATA_RATE_OFFSET_4",
	5: "DATA_RATE_OFFSET_5",
	6: "DATA_RATE_OFFSET_6",
	7: "DATA_RATE_OFFSET_7",
}

var DataRateOffset_value = map[string]int32{
	"DATA_RATE_OFFSET_0": 0,
	"DATA_RATE_OFFSET_1": 1,
	"DATA_RATE_OFFSET_2": 2,
	"DATA_RATE_OFFSET_3": 3,
	"DATA_RATE_OFFSET_4": 4,
	"DATA_RATE_OFFSET_5": 5,
	"DATA_RATE_OFFSET_6": 6,
	"DATA_RATE_OFFSET_7": 7,
}

func (x DataRateOffset) String() string {
	return proto.EnumName(DataRateOffset_name, int32(x))
}

func (DataRateOffset) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{5}
}

type JoinRequestType int32

const (
	JoinRequestType_REJOIN_CONTEXT JoinRequestType = 0
	JoinRequestType_REJOIN_SESSION JoinRequestType = 1
	JoinRequestType_REJOIN_KEYS    JoinRequestType = 2
	JoinRequestType_JOIN           JoinRequestType = 255
)

var JoinRequestType_name = map[int32]string{
	0:   "REJOIN_CONTEXT",
	1:   "REJOIN_SESSION",
	2:   "REJOIN_KEYS",
	255: "JOIN",
}

var JoinRequestType_value = map[string]int32{
	"REJOIN_CONTEXT": 0,
	"REJOIN_SESSION": 1,
	"REJOIN_KEYS":    2,
	"JOIN":           255,
}

func (x JoinRequestType) String() string {
	return proto.EnumName(JoinRequestType_name, int32(x))
}

func (JoinRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{6}
}

type RejoinRequestType int32

const (
	RejoinRequestType_CONTEXT RejoinRequestType = 0
	RejoinRequestType_SESSION RejoinRequestType = 1
	RejoinRequestType_KEYS    RejoinRequestType = 2
)

var RejoinRequestType_name = map[int32]string{
	0: "CONTEXT",
	1: "SESSION",
	2: "KEYS",
}

var RejoinRequestType_value = map[string]int32{
	"CONTEXT": 0,
	"SESSION": 1,
	"KEYS":    2,
}

func (x RejoinRequestType) String() string {
	return proto.EnumName(RejoinRequestType_name, int32(x))
}

func (RejoinRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{7}
}

type CFListType int32

const (
	CFListType_FREQUENCIES   CFListType = 0
	CFListType_CHANNEL_MASKS CFListType = 1
)

var CFListType_name = map[int32]string{
	0: "FREQUENCIES",
	1: "CHANNEL_MASKS",
}

var CFListType_value = map[string]int32{
	"FREQUENCIES":   0,
	"CHANNEL_MASKS": 1,
}

func (x CFListType) String() string {
	return proto.EnumName(CFListType_name, int32(x))
}

func (CFListType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{8}
}

type Class int32

const (
	Class_CLASS_A Class = 0
	Class_CLASS_B Class = 1
	Class_CLASS_C Class = 2
)

var Class_name = map[int32]string{
	0: "CLASS_A",
	1: "CLASS_B",
	2: "CLASS_C",
}

var Class_value = map[string]int32{
	"CLASS_A": 0,
	"CLASS_B": 1,
	"CLASS_C": 2,
}

func (x Class) String() string {
	return proto.EnumName(Class_name, int32(x))
}

func (Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{9}
}

type TxSchedulePriority int32

const (
	TxSchedulePriority_LOWEST       TxSchedulePriority = 0
	TxSchedulePriority_LOW          TxSchedulePriority = 1
	TxSchedulePriority_BELOW_NORMAL TxSchedulePriority = 2
	TxSchedulePriority_NORMAL       TxSchedulePriority = 3
	TxSchedulePriority_ABOVE_NORMAL TxSchedulePriority = 4
	TxSchedulePriority_HIGH         TxSchedulePriority = 5
	TxSchedulePriority_HIGHEST      TxSchedulePriority = 6
)

var TxSchedulePriority_name = map[int32]string{
	0: "LOWEST",
	1: "LOW",
	2: "BELOW_NORMAL",
	3: "NORMAL",
	4: "ABOVE_NORMAL",
	5: "HIGH",
	6: "HIGHEST",
}

var TxSchedulePriority_value = map[string]int32{
	"LOWEST":       0,
	"LOW":          1,
	"BELOW_NORMAL": 2,
	"NORMAL":       3,
	"ABOVE_NORMAL": 4,
	"HIGH":         5,
	"HIGHEST":      6,
}

func (x TxSchedulePriority) String() string {
	return proto.EnumName(TxSchedulePriority_name, int32(x))
}

func (TxSchedulePriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{10}
}

type MACCommandIdentifier int32

const (
	MACCommandIdentifier_CID_RFU_0              MACCommandIdentifier = 0
	MACCommandIdentifier_CID_RESET              MACCommandIdentifier = 1
	MACCommandIdentifier_CID_LINK_CHECK         MACCommandIdentifier = 2
	MACCommandIdentifier_CID_LINK_ADR           MACCommandIdentifier = 3
	MACCommandIdentifier_CID_DUTY_CYCLE         MACCommandIdentifier = 4
	MACCommandIdentifier_CID_RX_PARAM_SETUP     MACCommandIdentifier = 5
	MACCommandIdentifier_CID_DEV_STATUS         MACCommandIdentifier = 6
	MACCommandIdentifier_CID_NEW_CHANNEL        MACCommandIdentifier = 7
	MACCommandIdentifier_CID_RX_TIMING_SETUP    MACCommandIdentifier = 8
	MACCommandIdentifier_CID_TX_PARAM_SETUP     MACCommandIdentifier = 9
	MACCommandIdentifier_CID_DL_CHANNEL         MACCommandIdentifier = 10
	MACCommandIdentifier_CID_REKEY              MACCommandIdentifier = 11
	MACCommandIdentifier_CID_ADR_PARAM_SETUP    MACCommandIdentifier = 12
	MACCommandIdentifier_CID_DEVICE_TIME        MACCommandIdentifier = 13
	MACCommandIdentifier_CID_FORCE_REJOIN       MACCommandIdentifier = 14
	MACCommandIdentifier_CID_REJOIN_PARAM_SETUP MACCommandIdentifier = 15
	MACCommandIdentifier_CID_PING_SLOT_INFO     MACCommandIdentifier = 16
	MACCommandIdentifier_CID_PING_SLOT_CHANNEL  MACCommandIdentifier = 17
	MACCommandIdentifier_CID_BEACON_TIMING      MACCommandIdentifier = 18
	MACCommandIdentifier_CID_BEACON_FREQ        MACCommandIdentifier = 19
	MACCommandIdentifier_CID_DEVICE_MODE        MACCommandIdentifier = 32
)

var MACCommandIdentifier_name = map[int32]string{
	0:  "CID_RFU_0",
	1:  "CID_RESET",
	2:  "CID_LINK_CHECK",
	3:  "CID_LINK_ADR",
	4:  "CID_DUTY_CYCLE",
	5:  "CID_RX_PARAM_SETUP",
	6:  "CID_DEV_STATUS",
	7:  "CID_NEW_CHANNEL",
	8:  "CID_RX_TIMING_SETUP",
	9:  "CID_TX_PARAM_SETUP",
	10: "CID_DL_CHANNEL",
	11: "CID_REKEY",
	12: "CID_ADR_PARAM_SETUP",
	13: "CID_DEVICE_TIME",
	14: "CID_FORCE_REJOIN",
	15: "CID_REJOIN_PARAM_SETUP",
	16: "CID_PING_SLOT_INFO",
	17: "CID_PING_SLOT_CHANNEL",
	18: "CID_BEACON_TIMING",
	19: "CID_BEACON_FREQ",
	32: "CID_DEVICE_MODE",
}

var MACCommandIdentifier_value = map[string]int32{
	"CID_RFU_0":              0,
	"CID_RESET":              1,
	"CID_LINK_CHECK":         2,
	"CID_LINK_ADR":           3,
	"CID_DUTY_CYCLE":         4,
	"CID_RX_PARAM_SETUP":     5,
	"CID_DEV_STATUS":         6,
	"CID_NEW_CHANNEL":        7,
	"CID_RX_TIMING_SETUP":    8,
	"CID_TX_PARAM_SETUP":     9,
	"CID_DL_CHANNEL":         10,
	"CID_REKEY":              11,
	"CID_ADR_PARAM_SETUP":    12,
	"CID_DEVICE_TIME":        13,
	"CID_FORCE_REJOIN":       14,
	"CID_REJOIN_PARAM_SETUP": 15,
	"CID_PING_SLOT_INFO":     16,
	"CID_PING_SLOT_CHANNEL":  17,
	"CID_BEACON_TIMING":      18,
	"CID_BEACON_FREQ":        19,
	"CID_DEVICE_MODE":        32,
}

func (x MACCommandIdentifier) String() string {
	return proto.EnumName(MACCommandIdentifier_name, int32(x))
}

func (MACCommandIdentifier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{11}
}

type AggregatedDutyCycle int32

const (
	AggregatedDutyCycle_DUTY_CYCLE_1     AggregatedDutyCycle = 0
	AggregatedDutyCycle_DUTY_CYCLE_2     AggregatedDutyCycle = 1
	AggregatedDutyCycle_DUTY_CYCLE_4     AggregatedDutyCycle = 2
	AggregatedDutyCycle_DUTY_CYCLE_8     AggregatedDutyCycle = 3
	AggregatedDutyCycle_DUTY_CYCLE_16    AggregatedDutyCycle = 4
	AggregatedDutyCycle_DUTY_CYCLE_32    AggregatedDutyCycle = 5
	AggregatedDutyCycle_DUTY_CYCLE_64    AggregatedDutyCycle = 6
	AggregatedDutyCycle_DUTY_CYCLE_128   AggregatedDutyCycle = 7
	AggregatedDutyCycle_DUTY_CYCLE_256   AggregatedDutyCycle = 8
	AggregatedDutyCycle_DUTY_CYCLE_512   AggregatedDutyCycle = 9
	AggregatedDutyCycle_DUTY_CYCLE_1024  AggregatedDutyCycle = 10
	AggregatedDutyCycle_DUTY_CYCLE_2048  AggregatedDutyCycle = 11
	AggregatedDutyCycle_DUTY_CYCLE_4096  AggregatedDutyCycle = 12
	AggregatedDutyCycle_DUTY_CYCLE_8192  AggregatedDutyCycle = 13
	AggregatedDutyCycle_DUTY_CYCLE_16384 AggregatedDutyCycle = 14
	AggregatedDutyCycle_DUTY_CYCLE_32768 AggregatedDutyCycle = 15
)

var AggregatedDutyCycle_name = map[int32]string{
	0:  "DUTY_CYCLE_1",
	1:  "DUTY_CYCLE_2",
	2:  "DUTY_CYCLE_4",
	3:  "DUTY_CYCLE_8",
	4:  "DUTY_CYCLE_16",
	5:  "DUTY_CYCLE_32",
	6:  "DUTY_CYCLE_64",
	7:  "DUTY_CYCLE_128",
	8:  "DUTY_CYCLE_256",
	9:  "DUTY_CYCLE_512",
	10: "DUTY_CYCLE_1024",
	11: "DUTY_CYCLE_2048",
	12: "DUTY_CYCLE_4096",
	13: "DUTY_CYCLE_8192",
	14: "DUTY_CYCLE_16384",
	15: "DUTY_CYCLE_32768",
}

var AggregatedDutyCycle_value = map[string]int32{
	"DUTY_CYCLE_1":     0,
	"DUTY_CYCLE_2":     1,
	"DUTY_CYCLE_4":     2,
	"DUTY_CYCLE_8":     3,
	"DUTY_CYCLE_16":    4,
	"DUTY_CYCLE_32":    5,
	"DUTY_CYCLE_64":    6,
	"DUTY_CYCLE_128":   7,
	"DUTY_CYCLE_256":   8,
	"DUTY_CYCLE_512":   9,
	"DUTY_CYCLE_1024":  10,
	"DUTY_CYCLE_2048":  11,
	"DUTY_CYCLE_4096":  12,
	"DUTY_CYCLE_8192":  13,
	"DUTY_CYCLE_16384": 14,
	"DUTY_CYCLE_32768": 15,
}

func (x AggregatedDutyCycle) String() string {
	return proto.EnumName(AggregatedDutyCycle_name, int32(x))
}

func (AggregatedDutyCycle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{12}
}

type PingSlotPeriod int32

const (
	PingSlotPeriod_PING_EVERY_1S   PingSlotPeriod = 0
	PingSlotPeriod_PING_EVERY_2S   PingSlotPeriod = 1
	PingSlotPeriod_PING_EVERY_4S   PingSlotPeriod = 2
	PingSlotPeriod_PING_EVERY_8S   PingSlotPeriod = 3
	PingSlotPeriod_PING_EVERY_16S  PingSlotPeriod = 4
	PingSlotPeriod_PING_EVERY_32S  PingSlotPeriod = 5
	PingSlotPeriod_PING_EVERY_64S  PingSlotPeriod = 6
	PingSlotPeriod_PING_EVERY_128S PingSlotPeriod = 7
)

var PingSlotPeriod_name = map[int32]string{
	0: "PING_EVERY_1S",
	1: "PING_EVERY_2S",
	2: "PING_EVERY_4S",
	3: "PING_EVERY_8S",
	4: "PING_EVERY_16S",
	5: "PING_EVERY_32S",
	6: "PING_EVERY_64S",
	7: "PING_EVERY_128S",
}

var PingSlotPeriod_value = map[string]int32{
	"PING_EVERY_1S":   0,
	"PING_EVERY_2S":   1,
	"PING_EVERY_4S":   2,
	"PING_EVERY_8S":   3,
	"PING_EVERY_16S":  4,
	"PING_EVERY_32S":  5,
	"PING_EVERY_64S":  6,
	"PING_EVERY_128S": 7,
}

func (x PingSlotPeriod) String() string {
	return proto.EnumName(PingSlotPeriod_name, int32(x))
}

func (PingSlotPeriod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{13}
}

type RejoinCountExponent int32

const (
	RejoinCountExponent_REJOIN_COUNT_16     RejoinCountExponent = 0
	RejoinCountExponent_REJOIN_COUNT_32     RejoinCountExponent = 1
	RejoinCountExponent_REJOIN_COUNT_64     RejoinCountExponent = 2
	RejoinCountExponent_REJOIN_COUNT_128    RejoinCountExponent = 3
	RejoinCountExponent_REJOIN_COUNT_256    RejoinCountExponent = 4
	RejoinCountExponent_REJOIN_COUNT_512    RejoinCountExponent = 5
	RejoinCountExponent_REJOIN_COUNT_1024   RejoinCountExponent = 6
	RejoinCountExponent_REJOIN_COUNT_2048   RejoinCountExponent = 7
	RejoinCountExponent_REJOIN_COUNT_4096   RejoinCountExponent = 8
	RejoinCountExponent_REJOIN_COUNT_8192   RejoinCountExponent = 9
	RejoinCountExponent_REJOIN_COUNT_16384  RejoinCountExponent = 10
	RejoinCountExponent_REJOIN_COUNT_32768  RejoinCountExponent = 11
	RejoinCountExponent_REJOIN_COUNT_65536  RejoinCountExponent = 12
	RejoinCountExponent_REJOIN_COUNT_131072 RejoinCountExponent = 13
	RejoinCountExponent_REJOIN_COUNT_262144 RejoinCountExponent = 14
	RejoinCountExponent_REJOIN_COUNT_524288 RejoinCountExponent = 15
)

var RejoinCountExponent_name = map[int32]string{
	0:  "REJOIN_COUNT_16",
	1:  "REJOIN_COUNT_32",
	2:  "REJOIN_COUNT_64",
	3:  "REJOIN_COUNT_128",
	4:  "REJOIN_COUNT_256",
	5:  "REJOIN_COUNT_512",
	6:  "REJOIN_COUNT_1024",
	7:  "REJOIN_COUNT_2048",
	8:  "REJOIN_COUNT_4096",
	9:  "REJOIN_COUNT_8192",
	10: "REJOIN_COUNT_16384",
	11: "REJOIN_COUNT_32768",
	12: "REJOIN_COUNT_65536",
	13: "REJOIN_COUNT_131072",
	14: "REJOIN_COUNT_262144",
	15: "REJOIN_COUNT_524288",
}

var RejoinCountExponent_value = map[string]int32{
	"REJOIN_COUNT_16":     0,
	"REJOIN_COUNT_32":     1,
	"REJOIN_COUNT_64":     2,
	"REJOIN_COUNT_128":    3,
	"REJOIN_COUNT_256":    4,
	"REJOIN_COUNT_512":    5,
	"REJOIN_COUNT_1024":   6,
	"REJOIN_COUNT_2048":   7,
	"REJOIN_COUNT_4096":   8,
	"REJOIN_COUNT_8192":   9,
	"REJOIN_COUNT_16384":  10,
	"REJOIN_COUNT_32768":  11,
	"REJOIN_COUNT_65536":  12,
	"REJOIN_COUNT_131072": 13,
	"REJOIN_COUNT_262144": 14,
	"REJOIN_COUNT_524288": 15,
}

func (x RejoinCountExponent) String() string {
	return proto.EnumName(RejoinCountExponent_name, int32(x))
}

func (RejoinCountExponent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{14}
}

type RejoinTimeExponent int32

const (
	RejoinTimeExponent_REJOIN_TIME_0  RejoinTimeExponent = 0
	RejoinTimeExponent_REJOIN_TIME_1  RejoinTimeExponent = 1
	RejoinTimeExponent_REJOIN_TIME_2  RejoinTimeExponent = 2
	RejoinTimeExponent_REJOIN_TIME_3  RejoinTimeExponent = 3
	RejoinTimeExponent_REJOIN_TIME_4  RejoinTimeExponent = 4
	RejoinTimeExponent_REJOIN_TIME_5  RejoinTimeExponent = 5
	RejoinTimeExponent_REJOIN_TIME_6  RejoinTimeExponent = 6
	RejoinTimeExponent_REJOIN_TIME_7  RejoinTimeExponent = 7
	RejoinTimeExponent_REJOIN_TIME_8  RejoinTimeExponent = 8
	RejoinTimeExponent_REJOIN_TIME_9  RejoinTimeExponent = 9
	RejoinTimeExponent_REJOIN_TIME_10 RejoinTimeExponent = 10
	RejoinTimeExponent_REJOIN_TIME_11 RejoinTimeExponent = 11
	RejoinTimeExponent_REJOIN_TIME_12 RejoinTimeExponent = 12
	RejoinTimeExponent_REJOIN_TIME_13 RejoinTimeExponent = 13
	RejoinTimeExponent_REJOIN_TIME_14 RejoinTimeExponent = 14
	RejoinTimeExponent_REJOIN_TIME_15 RejoinTimeExponent = 15
)

var RejoinTimeExponent_name = map[int32]string{
	0:  "REJOIN_TIME_0",
	1:  "REJOIN_TIME_1",
	2:  "REJOIN_TIME_2",
	3:  "REJOIN_TIME_3",
	4:  "REJOIN_TIME_4",
	5:  "REJOIN_TIME_5",
	6:  "REJOIN_TIME_6",
	7:  "REJOIN_TIME_7",
	8:  "REJOIN_TIME_8",
	9:  "REJOIN_TIME_9",
	10: "REJOIN_TIME_10",
	11: "REJOIN_TIME_11",
	12: "REJOIN_TIME_12",
	13: "REJOIN_TIME_13",
	14: "REJOIN_TIME_14",
	15: "REJOIN_TIME_15",
}

var RejoinTimeExponent_value = map[string]int32{
	"REJOIN_TIME_0":  0,
	"REJOIN_TIME_1":  1,
	"REJOIN_TIME_2":  2,
	"REJOIN_TIME_3":  3,
	"REJOIN_TIME_4":  4,
	"REJOIN_TIME_5":  5,
	"REJOIN_TIME_6":  6,
	"REJOIN_TIME_7":  7,
	"REJOIN_TIME_8":  8,
	"REJOIN_TIME_9":  9,
	"REJOIN_TIME_10": 10,
	"REJOIN_TIME_11": 11,
	"REJOIN_TIME_12": 12,
	"REJOIN_TIME_13": 13,
	"REJOIN_TIME_14": 14,
	"REJOIN_TIME_15": 15,
}

func (x RejoinTimeExponent) String() string {
	return proto.EnumName(RejoinTimeExponent_name, int32(x))
}

func (RejoinTimeExponent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{15}
}

type RejoinPeriodExponent int32

const (
	RejoinPeriodExponent_REJOIN_PERIOD_0 RejoinPeriodExponent = 0
	RejoinPeriodExponent_REJOIN_PERIOD_1 RejoinPeriodExponent = 1
	RejoinPeriodExponent_REJOIN_PERIOD_2 RejoinPeriodExponent = 2
	RejoinPeriodExponent_REJOIN_PERIOD_3 RejoinPeriodExponent = 3
	RejoinPeriodExponent_REJOIN_PERIOD_4 RejoinPeriodExponent = 4
	RejoinPeriodExponent_REJOIN_PERIOD_5 RejoinPeriodExponent = 5
	RejoinPeriodExponent_REJOIN_PERIOD_6 RejoinPeriodExponent = 6
	RejoinPeriodExponent_REJOIN_PERIOD_7 RejoinPeriodExponent = 7
)

var RejoinPeriodExponent_name = map[int32]string{
	0: "REJOIN_PERIOD_0",
	1: "REJOIN_PERIOD_1",
	2: "REJOIN_PERIOD_2",
	3: "REJOIN_PERIOD_3",
	4: "REJOIN_PERIOD_4",
	5: "REJOIN_PERIOD_5",
	6: "REJOIN_PERIOD_6",
	7: "REJOIN_PERIOD_7",
}

var RejoinPeriodExponent_value = map[string]int32{
	"REJOIN_PERIOD_0": 0,
	"REJOIN_PERIOD_1": 1,
	"REJOIN_PERIOD_2": 2,
	"REJOIN_PERIOD_3": 3,
	"REJOIN_PERIOD_4": 4,
	"REJOIN_PERIOD_5": 5,
	"REJOIN_PERIOD_6": 6,
	"REJOIN_PERIOD_7": 7,
}

func (x RejoinPeriodExponent) String() string {
	return proto.EnumName(RejoinPeriodExponent_name, int32(x))
}

func (RejoinPeriodExponent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{16}
}

type DeviceEIRP int32

const (
	DeviceEIRP_DEVICE_EIRP_8  DeviceEIRP = 0
	DeviceEIRP_DEVICE_EIRP_10 DeviceEIRP = 1
	DeviceEIRP_DEVICE_EIRP_12 DeviceEIRP = 2
	DeviceEIRP_DEVICE_EIRP_13 DeviceEIRP = 3
	DeviceEIRP_DEVICE_EIRP_14 DeviceEIRP = 4
	DeviceEIRP_DEVICE_EIRP_16 DeviceEIRP = 5
	DeviceEIRP_DEVICE_EIRP_18 DeviceEIRP = 6
	DeviceEIRP_DEVICE_EIRP_20 DeviceEIRP = 7
	DeviceEIRP_DEVICE_EIRP_21 DeviceEIRP = 8
	DeviceEIRP_DEVICE_EIRP_24 DeviceEIRP = 9
	DeviceEIRP_DEVICE_EIRP_26 DeviceEIRP = 10
	DeviceEIRP_DEVICE_EIRP_27 DeviceEIRP = 11
	DeviceEIRP_DEVICE_EIRP_29 DeviceEIRP = 12
	DeviceEIRP_DEVICE_EIRP_30 DeviceEIRP = 13
	DeviceEIRP_DEVICE_EIRP_33 DeviceEIRP = 14
	DeviceEIRP_DEVICE_EIRP_36 DeviceEIRP = 15
)

var DeviceEIRP_name = map[int32]string{
	0:  "DEVICE_EIRP_8",
	1:  "DEVICE_EIRP_10",
	2:  "DEVICE_EIRP_12",
	3:  "DEVICE_EIRP_13",
	4:  "DEVICE_EIRP_14",
	5:  "DEVICE_EIRP_16",
	6:  "DEVICE_EIRP_18",
	7:  "DEVICE_EIRP_20",
	8:  "DEVICE_EIRP_21",
	9:  "DEVICE_EIRP_24",
	10: "DEVICE_EIRP_26",
	11: "DEVICE_EIRP_27",
	12: "DEVICE_EIRP_29",
	13: "DEVICE_EIRP_30",
	14: "DEVICE_EIRP_33",
	15: "DEVICE_EIRP_36",
}

var DeviceEIRP_value = map[string]int32{
	"DEVICE_EIRP_8":  0,
	"DEVICE_EIRP_10": 1,
	"DEVICE_EIRP_12": 2,
	"DEVICE_EIRP_13": 3,
	"DEVICE_EIRP_14": 4,
	"DEVICE_EIRP_16": 5,
	"DEVICE_EIRP_18": 6,
	"DEVICE_EIRP_20": 7,
	"DEVICE_EIRP_21": 8,
	"DEVICE_EIRP_24": 9,
	"DEVICE_EIRP_26": 10,
	"DEVICE_EIRP_27": 11,
	"DEVICE_EIRP_29": 12,
	"DEVICE_EIRP_30": 13,
	"DEVICE_EIRP_33": 14,
	"DEVICE_EIRP_36": 15,
}

func (x DeviceEIRP) String() string {
	return proto.EnumName(DeviceEIRP_name, int32(x))
}

func (DeviceEIRP) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{17}
}

type ADRAckLimitExponent int32

const (
	ADRAckLimitExponent_ADR_ACK_LIMIT_1     ADRAckLimitExponent = 0
	ADRAckLimitExponent_ADR_ACK_LIMIT_2     ADRAckLimitExponent = 1
	ADRAckLimitExponent_ADR_ACK_LIMIT_4     ADRAckLimitExponent = 2
	ADRAckLimitExponent_ADR_ACK_LIMIT_8     ADRAckLimitExponent = 3
	ADRAckLimitExponent_ADR_ACK_LIMIT_16    ADRAckLimitExponent = 4
	ADRAckLimitExponent_ADR_ACK_LIMIT_32    ADRAckLimitExponent = 5
	ADRAckLimitExponent_ADR_ACK_LIMIT_64    ADRAckLimitExponent = 6
	ADRAckLimitExponent_ADR_ACK_LIMIT_128   ADRAckLimitExponent = 7
	ADRAckLimitExponent_ADR_ACK_LIMIT_256   ADRAckLimitExponent = 8
	ADRAckLimitExponent_ADR_ACK_LIMIT_512   ADRAckLimitExponent = 9
	ADRAckLimitExponent_ADR_ACK_LIMIT_1024  ADRAckLimitExponent = 10
	ADRAckLimitExponent_ADR_ACK_LIMIT_2048  ADRAckLimitExponent = 11
	ADRAckLimitExponent_ADR_ACK_LIMIT_4096  ADRAckLimitExponent = 12
	ADRAckLimitExponent_ADR_ACK_LIMIT_8192  ADRAckLimitExponent = 13
	ADRAckLimitExponent_ADR_ACK_LIMIT_16384 ADRAckLimitExponent = 14
	ADRAckLimitExponent_ADR_ACK_LIMIT_32768 ADRAckLimitExponent = 15
)

var ADRAckLimitExponent_name = map[int32]string{
	0:  "ADR_ACK_LIMIT_1",
	1:  "ADR_ACK_LIMIT_2",
	2:  "ADR_ACK_LIMIT_4",
	3:  "ADR_ACK_LIMIT_8",
	4:  "ADR_ACK_LIMIT_16",
	5:  "ADR_ACK_LIMIT_32",
	6:  "ADR_ACK_LIMIT_64",
	7:  "ADR_ACK_LIMIT_128",
	8:  "ADR_ACK_LIMIT_256",
	9:  "ADR_ACK_LIMIT_512",
	10: "ADR_ACK_LIMIT_1024",
	11: "ADR_ACK_LIMIT_2048",
	12: "ADR_ACK_LIMIT_4096",
	13: "ADR_ACK_LIMIT_8192",
	14: "ADR_ACK_LIMIT_16384",
	15: "ADR_ACK_LIMIT_32768",
}

var ADRAckLimitExponent_value = map[string]int32{
	"ADR_ACK_LIMIT_1":     0,
	"ADR_ACK_LIMIT_2":     1,
	"ADR_ACK_LIMIT_4":     2,
	"ADR_ACK_LIMIT_8":     3,
	"ADR_ACK_LIMIT_16":    4,
	"ADR_ACK_LIMIT_32":    5,
	"ADR_ACK_LIMIT_64":    6,
	"ADR_ACK_LIMIT_128":   7,
	"ADR_ACK_LIMIT_256":   8,
	"ADR_ACK_LIMIT_512":   9,
	"ADR_ACK_LIMIT_1024":  10,
	"ADR_ACK_LIMIT_2048":  11,
	"ADR_ACK_LIMIT_4096":  12,
	"ADR_ACK_LIMIT_8192":  13,
	"ADR_ACK_LIMIT_16384": 14,
	"ADR_ACK_LIMIT_32768": 15,
}

func (x ADRAckLimitExponent) String() string {
	return proto.EnumName(ADRAckLimitExponent_name, int32(x))
}

func (ADRAckLimitExponent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{18}
}

type ADRAckDelayExponent int32

const (
	ADRAckDelayExponent_ADR_ACK_DELAY_1     ADRAckDelayExponent = 0
	ADRAckDelayExponent_ADR_ACK_DELAY_2     ADRAckDelayExponent = 1
	ADRAckDelayExponent_ADR_ACK_DELAY_4     ADRAckDelayExponent = 2
	ADRAckDelayExponent_ADR_ACK_DELAY_8     ADRAckDelayExponent = 3
	ADRAckDelayExponent_ADR_ACK_DELAY_16    ADRAckDelayExponent = 4
	ADRAckDelayExponent_ADR_ACK_DELAY_32    ADRAckDelayExponent = 5
	ADRAckDelayExponent_ADR_ACK_DELAY_64    ADRAckDelayExponent = 6
	ADRAckDelayExponent_ADR_ACK_DELAY_128   ADRAckDelayExponent = 7
	ADRAckDelayExponent_ADR_ACK_DELAY_256   ADRAckDelayExponent = 8
	ADRAckDelayExponent_ADR_ACK_DELAY_512   ADRAckDelayExponent = 9
	ADRAckDelayExponent_ADR_ACK_DELAY_1024  ADRAckDelayExponent = 10
	ADRAckDelayExponent_ADR_ACK_DELAY_2048  ADRAckDelayExponent = 11
	ADRAckDelayExponent_ADR_ACK_DELAY_4096  ADRAckDelayExponent = 12
	ADRAckDelayExponent_ADR_ACK_DELAY_8192  ADRAckDelayExponent = 13
	ADRAckDelayExponent_ADR_ACK_DELAY_16384 ADRAckDelayExponent = 14
	ADRAckDelayExponent_ADR_ACK_DELAY_32768 ADRAckDelayExponent = 15
)

var ADRAckDelayExponent_name = map[int32]string{
	0:  "ADR_ACK_DELAY_1",
	1:  "ADR_ACK_DELAY_2",
	2:  "ADR_ACK_DELAY_4",
	3:  "ADR_ACK_DELAY_8",
	4:  "ADR_ACK_DELAY_16",
	5:  "ADR_ACK_DELAY_32",
	6:  "ADR_ACK_DELAY_64",
	7:  "ADR_ACK_DELAY_128",
	8:  "ADR_ACK_DELAY_256",
	9:  "ADR_ACK_DELAY_512",
	10: "ADR_ACK_DELAY_1024",
	11: "ADR_ACK_DELAY_2048",
	12: "ADR_ACK_DELAY_4096",
	13: "ADR_ACK_DELAY_8192",
	14: "ADR_ACK_DELAY_16384",
	15: "ADR_ACK_DELAY_32768",
}

var ADRAckDelayExponent_value = map[string]int32{
	"ADR_ACK_DELAY_1":     0,
	"ADR_ACK_DELAY_2":     1,
	"ADR_ACK_DELAY_4":     2,
	"ADR_ACK_DELAY_8":     3,
	"ADR_ACK_DELAY_16":    4,
	"ADR_ACK_DELAY_32":    5,
	"ADR_ACK_DELAY_64":    6,
	"ADR_ACK_DELAY_128":   7,
	"ADR_ACK_DELAY_256":   8,
	"ADR_ACK_DELAY_512":   9,
	"ADR_ACK_DELAY_1024":  10,
	"ADR_ACK_DELAY_2048":  11,
	"ADR_ACK_DELAY_4096":  12,
	"ADR_ACK_DELAY_8192":  13,
	"ADR_ACK_DELAY_16384": 14,
	"ADR_ACK_DELAY_32768": 15,
}

func (x ADRAckDelayExponent) String() string {
	return proto.EnumName(ADRAckDelayExponent_name, int32(x))
}

func (ADRAckDelayExponent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19}
}

type RxDelay int32

const (
	RxDelay_RX_DELAY_0  RxDelay = 0
	RxDelay_RX_DELAY_1  RxDelay = 1
	RxDelay_RX_DELAY_2  RxDelay = 2
	RxDelay_RX_DELAY_3  RxDelay = 3
	RxDelay_RX_DELAY_4  RxDelay = 4
	RxDelay_RX_DELAY_5  RxDelay = 5
	RxDelay_RX_DELAY_6  RxDelay = 6
	RxDelay_RX_DELAY_7  RxDelay = 7
	RxDelay_RX_DELAY_8  RxDelay = 8
	RxDelay_RX_DELAY_9  RxDelay = 9
	RxDelay_RX_DELAY_10 RxDelay = 10
	RxDelay_RX_DELAY_11 RxDelay = 11
	RxDelay_RX_DELAY_12 RxDelay = 12
	RxDelay_RX_DELAY_13 RxDelay = 13
	RxDelay_RX_DELAY_14 RxDelay = 14
	RxDelay_RX_DELAY_15 RxDelay = 15
)

var RxDelay_name = map[int32]string{
	0:  "RX_DELAY_0",
	1:  "RX_DELAY_1",
	2:  "RX_DELAY_2",
	3:  "RX_DELAY_3",
	4:  "RX_DELAY_4",
	5:  "RX_DELAY_5",
	6:  "RX_DELAY_6",
	7:  "RX_DELAY_7",
	8:  "RX_DELAY_8",
	9:  "RX_DELAY_9",
	10: "RX_DELAY_10",
	11: "RX_DELAY_11",
	12: "RX_DELAY_12",
	13: "RX_DELAY_13",
	14: "RX_DELAY_14",
	15: "RX_DELAY_15",
}

var RxDelay_value = map[string]int32{
	"RX_DELAY_0":  0,
	"RX_DELAY_1":  1,
	"RX_DELAY_2":  2,
	"RX_DELAY_3":  3,
	"RX_DELAY_4":  4,
	"RX_DELAY_5":  5,
	"RX_DELAY_6":  6,
	"RX_DELAY_7":  7,
	"RX_DELAY_8":  8,
	"RX_DELAY_9":  9,
	"RX_DELAY_10": 10,
	"RX_DELAY_11": 11,
	"RX_DELAY_12": 12,
	"RX_DELAY_13": 13,
	"RX_DELAY_14": 14,
	"RX_DELAY_15": 15,
}

func (x RxDelay) String() string {
	return proto.EnumName(RxDelay_name, int32(x))
}

func (RxDelay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{20}
}

type Minor int32

const (
	Minor_MINOR_RFU_0  Minor = 0
	Minor_MINOR_1      Minor = 1
	Minor_MINOR_RFU_2  Minor = 2
	Minor_MINOR_RFU_3  Minor = 3
	Minor_MINOR_RFU_4  Minor = 4
	Minor_MINOR_RFU_5  Minor = 5
	Minor_MINOR_RFU_6  Minor = 6
	Minor_MINOR_RFU_7  Minor = 7
	Minor_MINOR_RFU_8  Minor = 8
	Minor_MINOR_RFU_9  Minor = 9
	Minor_MINOR_RFU_10 Minor = 10
	Minor_MINOR_RFU_11 Minor = 11
	Minor_MINOR_RFU_12 Minor = 12
	Minor_MINOR_RFU_13 Minor = 13
	Minor_MINOR_RFU_14 Minor = 14
	Minor_MINOR_RFU_15 Minor = 15
)

var Minor_name = map[int32]string{
	0:  "MINOR_RFU_0",
	1:  "MINOR_1",
	2:  "MINOR_RFU_2",
	3:  "MINOR_RFU_3",
	4:  "MINOR_RFU_4",
	5:  "MINOR_RFU_5",
	6:  "MINOR_RFU_6",
	7:  "MINOR_RFU_7",
	8:  "MINOR_RFU_8",
	9:  "MINOR_RFU_9",
	10: "MINOR_RFU_10",
	11: "MINOR_RFU_11",
	12: "MINOR_RFU_12",
	13: "MINOR_RFU_13",
	14: "MINOR_RFU_14",
	15: "MINOR_RFU_15",
}

var Minor_value = map[string]int32{
	"MINOR_RFU_0":  0,
	"MINOR_1":      1,
	"MINOR_RFU_2":  2,
	"MINOR_RFU_3":  3,
	"MINOR_RFU_4":  4,
	"MINOR_RFU_5":  5,
	"MINOR_RFU_6":  6,
	"MINOR_RFU_7":  7,
	"MINOR_RFU_8":  8,
	"MINOR_RFU_9":  9,
	"MINOR_RFU_10": 10,
	"MINOR_RFU_11": 11,
	"MINOR_RFU_12": 12,
	"MINOR_RFU_13": 13,
	"MINOR_RFU_14": 14,
	"MINOR_RFU_15": 15,
}

func (x Minor) String() string {
	return proto.EnumName(Minor_name, int32(x))
}

func (Minor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{21}
}

// Message represents a LoRaWAN message
type Message struct {
	MHdr *MHDR  `protobuf:"bytes,1,opt,name=m_hdr,json=mHdr,proto3" json:"m_hdr,omitempty"`
	Mic  []byte `protobuf:"bytes,2,opt,name=mic,proto3" json:"mic,omitempty"`
	// Payload represents either MACPayload, RejoinRequestPayload, JoinRequestPayload or JoinAcceptPayload
	// - MACPayload length is in range [7:M] bytes, where M is PHY specific.
	// - JoinRequestPayload length is 18 bytes.
	// - JoinAcceptPayload length is either 12 or 28 bytes.
	// - RejoinRequestPayload length is 14 for Type 0 and 2, 19 for Type 1.
	//
	// Types that are valid to be assigned to Payload:
	//	*Message_MacPayload
	//	*Message_JoinRequestPayload
	//	*Message_JoinAcceptPayload
	//	*Message_RejoinRequestPayload
	Payload              isMessage_Payload `protobuf_oneof:"Payload"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_MacPayload struct {
	MacPayload *MACPayload `protobuf:"bytes,3,opt,name=mac_payload,json=macPayload,proto3,oneof" json:"mac_payload,omitempty"`
}
type Message_JoinRequestPayload struct {
	JoinRequestPayload *JoinRequestPayload `protobuf:"bytes,4,opt,name=join_request_payload,json=joinRequestPayload,proto3,oneof" json:"join_request_payload,omitempty"`
}
type Message_JoinAcceptPayload struct {
	JoinAcceptPayload *JoinAcceptPayload `protobuf:"bytes,5,opt,name=join_accept_payload,json=joinAcceptPayload,proto3,oneof" json:"join_accept_payload,omitempty"`
}
type Message_RejoinRequestPayload struct {
	RejoinRequestPayload *RejoinRequestPayload `protobuf:"bytes,6,opt,name=rejoin_request_payload,json=rejoinRequestPayload,proto3,oneof" json:"rejoin_request_payload,omitempty"`
}

func (*Message_MacPayload) isMessage_Payload()           {}
func (*Message_JoinRequestPayload) isMessage_Payload()   {}
func (*Message_JoinAcceptPayload) isMessage_Payload()    {}
func (*Message_RejoinRequestPayload) isMessage_Payload() {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetMHdr() *MHDR {
	if m != nil {
		return m.MHdr
	}
	return nil
}

func (m *Message) GetMic() []byte {
	if m != nil {
		return m.Mic
	}
	return nil
}

func (m *Message) GetMacPayload() *MACPayload {
	if x, ok := m.GetPayload().(*Message_MacPayload); ok {
		return x.MacPayload
	}
	return nil
}

func (m *Message) GetJoinRequestPayload() *JoinRequestPayload {
	if x, ok := m.GetPayload().(*Message_JoinRequestPayload); ok {
		return x.JoinRequestPayload
	}
	return nil
}

func (m *Message) GetJoinAcceptPayload() *JoinAcceptPayload {
	if x, ok := m.GetPayload().(*Message_JoinAcceptPayload); ok {
		return x.JoinAcceptPayload
	}
	return nil
}

func (m *Message) GetRejoinRequestPayload() *RejoinRequestPayload {
	if x, ok := m.GetPayload().(*Message_RejoinRequestPayload); ok {
		return x.RejoinRequestPayload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_MacPayload)(nil),
		(*Message_JoinRequestPayload)(nil),
		(*Message_JoinAcceptPayload)(nil),
		(*Message_RejoinRequestPayload)(nil),
	}
}

type MHDR struct {
	MType                MType    `protobuf:"varint,1,opt,name=m_type,json=mType,proto3,enum=ttn.lorawan.v3.MType" json:"m_type,omitempty"`
	Major                Major    `protobuf:"varint,2,opt,name=major,proto3,enum=ttn.lorawan.v3.Major" json:"major,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MHDR) Reset()         { *m = MHDR{} }
func (m *MHDR) String() string { return proto.CompactTextString(m) }
func (*MHDR) ProtoMessage()    {}
func (*MHDR) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{1}
}
func (m *MHDR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MHDR.Unmarshal(m, b)
}
func (m *MHDR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MHDR.Marshal(b, m, deterministic)
}
func (m *MHDR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MHDR.Merge(m, src)
}
func (m *MHDR) XXX_Size() int {
	return xxx_messageInfo_MHDR.Size(m)
}
func (m *MHDR) XXX_DiscardUnknown() {
	xxx_messageInfo_MHDR.DiscardUnknown(m)
}

var xxx_messageInfo_MHDR proto.InternalMessageInfo

func (m *MHDR) GetMType() MType {
	if m != nil {
		return m.MType
	}
	return MType_JOIN_REQUEST
}

func (m *MHDR) GetMajor() Major {
	if m != nil {
		return m.Major
	}
	return Major_LORAWAN_R1
}

type MACPayload struct {
	FHdr           *FHDR         `protobuf:"bytes,1,opt,name=f_hdr,json=fHdr,proto3" json:"f_hdr,omitempty"`
	FPort          uint32        `protobuf:"varint,2,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	FrmPayload     []byte        `protobuf:"bytes,3,opt,name=frm_payload,json=frmPayload,proto3" json:"frm_payload,omitempty"`
	DecodedPayload *types.Struct `protobuf:"bytes,4,opt,name=decoded_payload,json=decodedPayload,proto3" json:"decoded_payload,omitempty"`
	// Full 32-bit FCnt value. Used internally by Network Server.
	FullFCnt             uint32   `protobuf:"varint,5,opt,name=full_f_cnt,json=fullFCnt,proto3" json:"full_f_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACPayload) Reset()         { *m = MACPayload{} }
func (m *MACPayload) String() string { return proto.CompactTextString(m) }
func (*MACPayload) ProtoMessage()    {}
func (*MACPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{2}
}
func (m *MACPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACPayload.Unmarshal(m, b)
}
func (m *MACPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACPayload.Marshal(b, m, deterministic)
}
func (m *MACPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACPayload.Merge(m, src)
}
func (m *MACPayload) XXX_Size() int {
	return xxx_messageInfo_MACPayload.Size(m)
}
func (m *MACPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_MACPayload.DiscardUnknown(m)
}

var xxx_messageInfo_MACPayload proto.InternalMessageInfo

func (m *MACPayload) GetFHdr() *FHDR {
	if m != nil {
		return m.FHdr
	}
	return nil
}

func (m *MACPayload) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *MACPayload) GetFrmPayload() []byte {
	if m != nil {
		return m.FrmPayload
	}
	return nil
}

func (m *MACPayload) GetDecodedPayload() *types.Struct {
	if m != nil {
		return m.DecodedPayload
	}
	return nil
}

func (m *MACPayload) GetFullFCnt() uint32 {
	if m != nil {
		return m.FullFCnt
	}
	return 0
}

type FHDR struct {
	DevAddr              go_thethings_network_lorawan_stack_v3_pkg_types.DevAddr `protobuf:"bytes,1,opt,name=dev_addr,json=devAddr,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.DevAddr" json:"dev_addr"`
	FCtrl                *FCtrl                                                  `protobuf:"bytes,2,opt,name=f_ctrl,json=fCtrl,proto3" json:"f_ctrl,omitempty"`
	FCnt                 uint32                                                  `protobuf:"varint,3,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	FOpts                []byte                                                  `protobuf:"bytes,4,opt,name=f_opts,json=fOpts,proto3" json:"f_opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *FHDR) Reset()         { *m = FHDR{} }
func (m *FHDR) String() string { return proto.CompactTextString(m) }
func (*FHDR) ProtoMessage()    {}
func (*FHDR) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{3}
}
func (m *FHDR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FHDR.Unmarshal(m, b)
}
func (m *FHDR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FHDR.Marshal(b, m, deterministic)
}
func (m *FHDR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FHDR.Merge(m, src)
}
func (m *FHDR) XXX_Size() int {
	return xxx_messageInfo_FHDR.Size(m)
}
func (m *FHDR) XXX_DiscardUnknown() {
	xxx_messageInfo_FHDR.DiscardUnknown(m)
}

var xxx_messageInfo_FHDR proto.InternalMessageInfo

func (m *FHDR) GetFCtrl() *FCtrl {
	if m != nil {
		return m.FCtrl
	}
	return nil
}

func (m *FHDR) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *FHDR) GetFOpts() []byte {
	if m != nil {
		return m.FOpts
	}
	return nil
}

type FCtrl struct {
	Adr                  bool     `protobuf:"varint,1,opt,name=adr,proto3" json:"adr,omitempty"`
	AdrAckReq            bool     `protobuf:"varint,2,opt,name=adr_ack_req,json=adrAckReq,proto3" json:"adr_ack_req,omitempty"`
	Ack                  bool     `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
	FPending             bool     `protobuf:"varint,4,opt,name=f_pending,json=fPending,proto3" json:"f_pending,omitempty"`
	ClassB               bool     `protobuf:"varint,5,opt,name=class_b,json=classB,proto3" json:"class_b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FCtrl) Reset()         { *m = FCtrl{} }
func (m *FCtrl) String() string { return proto.CompactTextString(m) }
func (*FCtrl) ProtoMessage()    {}
func (*FCtrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{4}
}
func (m *FCtrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FCtrl.Unmarshal(m, b)
}
func (m *FCtrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FCtrl.Marshal(b, m, deterministic)
}
func (m *FCtrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FCtrl.Merge(m, src)
}
func (m *FCtrl) XXX_Size() int {
	return xxx_messageInfo_FCtrl.Size(m)
}
func (m *FCtrl) XXX_DiscardUnknown() {
	xxx_messageInfo_FCtrl.DiscardUnknown(m)
}

var xxx_messageInfo_FCtrl proto.InternalMessageInfo

func (m *FCtrl) GetAdr() bool {
	if m != nil {
		return m.Adr
	}
	return false
}

func (m *FCtrl) GetAdrAckReq() bool {
	if m != nil {
		return m.AdrAckReq
	}
	return false
}

func (m *FCtrl) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

func (m *FCtrl) GetFPending() bool {
	if m != nil {
		return m.FPending
	}
	return false
}

func (m *FCtrl) GetClassB() bool {
	if m != nil {
		return m.ClassB
	}
	return false
}

type JoinRequestPayload struct {
	JoinEui              go_thethings_network_lorawan_stack_v3_pkg_types.EUI64    `protobuf:"bytes,1,opt,name=join_eui,json=joinEui,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.EUI64" json:"join_eui"`
	DevEui               go_thethings_network_lorawan_stack_v3_pkg_types.EUI64    `protobuf:"bytes,2,opt,name=dev_eui,json=devEui,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.EUI64" json:"dev_eui"`
	DevNonce             go_thethings_network_lorawan_stack_v3_pkg_types.DevNonce `protobuf:"bytes,3,opt,name=dev_nonce,json=devNonce,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.DevNonce" json:"dev_nonce"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *JoinRequestPayload) Reset()         { *m = JoinRequestPayload{} }
func (m *JoinRequestPayload) String() string { return proto.CompactTextString(m) }
func (*JoinRequestPayload) ProtoMessage()    {}
func (*JoinRequestPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{5}
}
func (m *JoinRequestPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequestPayload.Unmarshal(m, b)
}
func (m *JoinRequestPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequestPayload.Marshal(b, m, deterministic)
}
func (m *JoinRequestPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequestPayload.Merge(m, src)
}
func (m *JoinRequestPayload) XXX_Size() int {
	return xxx_messageInfo_JoinRequestPayload.Size(m)
}
func (m *JoinRequestPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequestPayload.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequestPayload proto.InternalMessageInfo

type RejoinRequestPayload struct {
	RejoinType           RejoinRequestType                                     `protobuf:"varint,1,opt,name=rejoin_type,json=rejoinType,proto3,enum=ttn.lorawan.v3.RejoinRequestType" json:"rejoin_type,omitempty"`
	NetId                go_thethings_network_lorawan_stack_v3_pkg_types.NetID `protobuf:"bytes,2,opt,name=net_id,json=netId,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.NetID" json:"net_id"`
	JoinEui              go_thethings_network_lorawan_stack_v3_pkg_types.EUI64 `protobuf:"bytes,3,opt,name=join_eui,json=joinEui,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.EUI64" json:"join_eui"`
	DevEui               go_thethings_network_lorawan_stack_v3_pkg_types.EUI64 `protobuf:"bytes,4,opt,name=dev_eui,json=devEui,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.EUI64" json:"dev_eui"`
	RejoinCnt            uint32                                                `protobuf:"varint,5,opt,name=rejoin_cnt,json=rejoinCnt,proto3" json:"rejoin_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *RejoinRequestPayload) Reset()         { *m = RejoinRequestPayload{} }
func (m *RejoinRequestPayload) String() string { return proto.CompactTextString(m) }
func (*RejoinRequestPayload) ProtoMessage()    {}
func (*RejoinRequestPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{6}
}
func (m *RejoinRequestPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RejoinRequestPayload.Unmarshal(m, b)
}
func (m *RejoinRequestPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RejoinRequestPayload.Marshal(b, m, deterministic)
}
func (m *RejoinRequestPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RejoinRequestPayload.Merge(m, src)
}
func (m *RejoinRequestPayload) XXX_Size() int {
	return xxx_messageInfo_RejoinRequestPayload.Size(m)
}
func (m *RejoinRequestPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_RejoinRequestPayload.DiscardUnknown(m)
}

var xxx_messageInfo_RejoinRequestPayload proto.InternalMessageInfo

func (m *RejoinRequestPayload) GetRejoinType() RejoinRequestType {
	if m != nil {
		return m.RejoinType
	}
	return RejoinRequestType_CONTEXT
}

func (m *RejoinRequestPayload) GetRejoinCnt() uint32 {
	if m != nil {
		return m.RejoinCnt
	}
	return 0
}

type JoinAcceptPayload struct {
	Encrypted            []byte                                                    `protobuf:"bytes,1,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	JoinNonce            go_thethings_network_lorawan_stack_v3_pkg_types.JoinNonce `protobuf:"bytes,2,opt,name=join_nonce,json=joinNonce,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.JoinNonce" json:"join_nonce"`
	NetId                go_thethings_network_lorawan_stack_v3_pkg_types.NetID     `protobuf:"bytes,3,opt,name=net_id,json=netId,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.NetID" json:"net_id"`
	DevAddr              go_thethings_network_lorawan_stack_v3_pkg_types.DevAddr   `protobuf:"bytes,4,opt,name=dev_addr,json=devAddr,proto3,customtype=go.thethings.network/lorawan-stack/v3/pkg/types.DevAddr" json:"dev_addr"`
	DlSettings           *DLSettings                                               `protobuf:"bytes,5,opt,name=dl_settings,json=dlSettings,proto3" json:"dl_settings,omitempty"`
	RxDelay              RxDelay                                                   `protobuf:"varint,6,opt,name=rx_delay,json=rxDelay,proto3,enum=ttn.lorawan.v3.RxDelay" json:"rx_delay,omitempty"`
	CfList               *CFList                                                   `protobuf:"bytes,7,opt,name=cf_list,json=cfList,proto3" json:"cf_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *JoinAcceptPayload) Reset()         { *m = JoinAcceptPayload{} }
func (m *JoinAcceptPayload) String() string { return proto.CompactTextString(m) }
func (*JoinAcceptPayload) ProtoMessage()    {}
func (*JoinAcceptPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{7}
}
func (m *JoinAcceptPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinAcceptPayload.Unmarshal(m, b)
}
func (m *JoinAcceptPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinAcceptPayload.Marshal(b, m, deterministic)
}
func (m *JoinAcceptPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinAcceptPayload.Merge(m, src)
}
func (m *JoinAcceptPayload) XXX_Size() int {
	return xxx_messageInfo_JoinAcceptPayload.Size(m)
}
func (m *JoinAcceptPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinAcceptPayload.DiscardUnknown(m)
}

var xxx_messageInfo_JoinAcceptPayload proto.InternalMessageInfo

func (m *JoinAcceptPayload) GetEncrypted() []byte {
	if m != nil {
		return m.Encrypted
	}
	return nil
}

func (m *JoinAcceptPayload) GetDlSettings() *DLSettings {
	if m != nil {
		return m.DlSettings
	}
	return nil
}

func (m *JoinAcceptPayload) GetRxDelay() RxDelay {
	if m != nil {
		return m.RxDelay
	}
	return RxDelay_RX_DELAY_0
}

func (m *JoinAcceptPayload) GetCfList() *CFList {
	if m != nil {
		return m.CfList
	}
	return nil
}

type DLSettings struct {
	Rx1DrOffset DataRateOffset `protobuf:"varint,1,opt,name=rx1_dr_offset,json=rx1DrOffset,proto3,enum=ttn.lorawan.v3.DataRateOffset" json:"rx1_dr_offset,omitempty"`
	Rx2Dr       DataRateIndex  `protobuf:"varint,2,opt,name=rx2_dr,json=rx2Dr,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"rx2_dr,omitempty"`
	// OptNeg is set if Network Server implements LoRaWAN 1.1 or greater.
	OptNeg               bool     `protobuf:"varint,3,opt,name=opt_neg,json=optNeg,proto3" json:"opt_neg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DLSettings) Reset()         { *m = DLSettings{} }
func (m *DLSettings) String() string { return proto.CompactTextString(m) }
func (*DLSettings) ProtoMessage()    {}
func (*DLSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{8}
}
func (m *DLSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DLSettings.Unmarshal(m, b)
}
func (m *DLSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DLSettings.Marshal(b, m, deterministic)
}
func (m *DLSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DLSettings.Merge(m, src)
}
func (m *DLSettings) XXX_Size() int {
	return xxx_messageInfo_DLSettings.Size(m)
}
func (m *DLSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_DLSettings.DiscardUnknown(m)
}

var xxx_messageInfo_DLSettings proto.InternalMessageInfo

func (m *DLSettings) GetRx1DrOffset() DataRateOffset {
	if m != nil {
		return m.Rx1DrOffset
	}
	return DataRateOffset_DATA_RATE_OFFSET_0
}

func (m *DLSettings) GetRx2Dr() DataRateIndex {
	if m != nil {
		return m.Rx2Dr
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *DLSettings) GetOptNeg() bool {
	if m != nil {
		return m.OptNeg
	}
	return false
}

type CFList struct {
	Type CFListType `protobuf:"varint,1,opt,name=type,proto3,enum=ttn.lorawan.v3.CFListType" json:"type,omitempty"`
	// Frequencies to be broadcasted, in hecto-Hz.
	// These values are broadcasted as 24 bits unsigned integers.
	// This field should not contain default values.
	Freq []uint32 `protobuf:"varint,2,rep,packed,name=freq,proto3" json:"freq,omitempty"`
	// ChMasks controlling the channels to be used.
	// Length of this field must be equal to the amount of uplink channels
	// defined by the selected frequency plan.
	ChMasks              []bool   `protobuf:"varint,3,rep,packed,name=ch_masks,json=chMasks,proto3" json:"ch_masks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CFList) Reset()         { *m = CFList{} }
func (m *CFList) String() string { return proto.CompactTextString(m) }
func (*CFList) ProtoMessage()    {}
func (*CFList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{9}
}
func (m *CFList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFList.Unmarshal(m, b)
}
func (m *CFList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFList.Marshal(b, m, deterministic)
}
func (m *CFList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFList.Merge(m, src)
}
func (m *CFList) XXX_Size() int {
	return xxx_messageInfo_CFList.Size(m)
}
func (m *CFList) XXX_DiscardUnknown() {
	xxx_messageInfo_CFList.DiscardUnknown(m)
}

var xxx_messageInfo_CFList proto.InternalMessageInfo

func (m *CFList) GetType() CFListType {
	if m != nil {
		return m.Type
	}
	return CFListType_FREQUENCIES
}

func (m *CFList) GetFreq() []uint32 {
	if m != nil {
		return m.Freq
	}
	return nil
}

func (m *CFList) GetChMasks() []bool {
	if m != nil {
		return m.ChMasks
	}
	return nil
}

type LoRaDataRate struct {
	// Bandwidth (Hz).
	Bandwidth            uint32   `protobuf:"varint,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	SpreadingFactor      uint32   `protobuf:"varint,2,opt,name=spreading_factor,json=spreadingFactor,proto3" json:"spreading_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoRaDataRate) Reset()         { *m = LoRaDataRate{} }
func (m *LoRaDataRate) String() string { return proto.CompactTextString(m) }
func (*LoRaDataRate) ProtoMessage()    {}
func (*LoRaDataRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{10}
}
func (m *LoRaDataRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoRaDataRate.Unmarshal(m, b)
}
func (m *LoRaDataRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoRaDataRate.Marshal(b, m, deterministic)
}
func (m *LoRaDataRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoRaDataRate.Merge(m, src)
}
func (m *LoRaDataRate) XXX_Size() int {
	return xxx_messageInfo_LoRaDataRate.Size(m)
}
func (m *LoRaDataRate) XXX_DiscardUnknown() {
	xxx_messageInfo_LoRaDataRate.DiscardUnknown(m)
}

var xxx_messageInfo_LoRaDataRate proto.InternalMessageInfo

func (m *LoRaDataRate) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *LoRaDataRate) GetSpreadingFactor() uint32 {
	if m != nil {
		return m.SpreadingFactor
	}
	return 0
}

type FSKDataRate struct {
	// Bit rate (bps).
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FSKDataRate) Reset()         { *m = FSKDataRate{} }
func (m *FSKDataRate) String() string { return proto.CompactTextString(m) }
func (*FSKDataRate) ProtoMessage()    {}
func (*FSKDataRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{11}
}
func (m *FSKDataRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FSKDataRate.Unmarshal(m, b)
}
func (m *FSKDataRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FSKDataRate.Marshal(b, m, deterministic)
}
func (m *FSKDataRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FSKDataRate.Merge(m, src)
}
func (m *FSKDataRate) XXX_Size() int {
	return xxx_messageInfo_FSKDataRate.Size(m)
}
func (m *FSKDataRate) XXX_DiscardUnknown() {
	xxx_messageInfo_FSKDataRate.DiscardUnknown(m)
}

var xxx_messageInfo_FSKDataRate proto.InternalMessageInfo

func (m *FSKDataRate) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type LRFHSSDataRate struct {
	ModulationType uint32 `protobuf:"varint,1,opt,name=modulation_type,json=modulationType,proto3" json:"modulation_type,omitempty"`
	// Operating Channel Width (kHz).
	OperatingChannelWidth uint32   `protobuf:"varint,2,opt,name=operating_channel_width,json=operatingChannelWidth,proto3" json:"operating_channel_width,omitempty"`
	CodingRate            string   `protobuf:"bytes,3,opt,name=coding_rate,json=codingRate,proto3" json:"coding_rate,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *LRFHSSDataRate) Reset()         { *m = LRFHSSDataRate{} }
func (m *LRFHSSDataRate) String() string { return proto.CompactTextString(m) }
func (*LRFHSSDataRate) ProtoMessage()    {}
func (*LRFHSSDataRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{12}
}
func (m *LRFHSSDataRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LRFHSSDataRate.Unmarshal(m, b)
}
func (m *LRFHSSDataRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LRFHSSDataRate.Marshal(b, m, deterministic)
}
func (m *LRFHSSDataRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LRFHSSDataRate.Merge(m, src)
}
func (m *LRFHSSDataRate) XXX_Size() int {
	return xxx_messageInfo_LRFHSSDataRate.Size(m)
}
func (m *LRFHSSDataRate) XXX_DiscardUnknown() {
	xxx_messageInfo_LRFHSSDataRate.DiscardUnknown(m)
}

var xxx_messageInfo_LRFHSSDataRate proto.InternalMessageInfo

func (m *LRFHSSDataRate) GetModulationType() uint32 {
	if m != nil {
		return m.ModulationType
	}
	return 0
}

func (m *LRFHSSDataRate) GetOperatingChannelWidth() uint32 {
	if m != nil {
		return m.OperatingChannelWidth
	}
	return 0
}

func (m *LRFHSSDataRate) GetCodingRate() string {
	if m != nil {
		return m.CodingRate
	}
	return ""
}

type DataRate struct {
	// Types that are valid to be assigned to Modulation:
	//	*DataRate_Lora
	//	*DataRate_Fsk
	//	*DataRate_Lrfhss
	Modulation           isDataRate_Modulation `protobuf_oneof:"modulation"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DataRate) Reset()         { *m = DataRate{} }
func (m *DataRate) String() string { return proto.CompactTextString(m) }
func (*DataRate) ProtoMessage()    {}
func (*DataRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{13}
}
func (m *DataRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRate.Unmarshal(m, b)
}
func (m *DataRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRate.Marshal(b, m, deterministic)
}
func (m *DataRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRate.Merge(m, src)
}
func (m *DataRate) XXX_Size() int {
	return xxx_messageInfo_DataRate.Size(m)
}
func (m *DataRate) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRate.DiscardUnknown(m)
}

var xxx_messageInfo_DataRate proto.InternalMessageInfo

type isDataRate_Modulation interface {
	isDataRate_Modulation()
}

type DataRate_Lora struct {
	Lora *LoRaDataRate `protobuf:"bytes,1,opt,name=lora,proto3,oneof" json:"lora,omitempty"`
}
type DataRate_Fsk struct {
	Fsk *FSKDataRate `protobuf:"bytes,2,opt,name=fsk,proto3,oneof" json:"fsk,omitempty"`
}
type DataRate_Lrfhss struct {
	Lrfhss *LRFHSSDataRate `protobuf:"bytes,3,opt,name=lrfhss,proto3,oneof" json:"lrfhss,omitempty"`
}

func (*DataRate_Lora) isDataRate_Modulation()   {}
func (*DataRate_Fsk) isDataRate_Modulation()    {}
func (*DataRate_Lrfhss) isDataRate_Modulation() {}

func (m *DataRate) GetModulation() isDataRate_Modulation {
	if m != nil {
		return m.Modulation
	}
	return nil
}

func (m *DataRate) GetLora() *LoRaDataRate {
	if x, ok := m.GetModulation().(*DataRate_Lora); ok {
		return x.Lora
	}
	return nil
}

func (m *DataRate) GetFsk() *FSKDataRate {
	if x, ok := m.GetModulation().(*DataRate_Fsk); ok {
		return x.Fsk
	}
	return nil
}

func (m *DataRate) GetLrfhss() *LRFHSSDataRate {
	if x, ok := m.GetModulation().(*DataRate_Lrfhss); ok {
		return x.Lrfhss
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataRate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataRate_Lora)(nil),
		(*DataRate_Fsk)(nil),
		(*DataRate_Lrfhss)(nil),
	}
}

// TxSettings contains the settings for a transmission.
// This message is used on both uplink and downlink.
// On downlink, this is a scheduled transmission.
type TxSettings struct {
	// Data rate.
	DataRate *DataRate `protobuf:"bytes,1,opt,name=data_rate,json=dataRate,proto3" json:"data_rate,omitempty"`
	// LoRa coding rate.
	CodingRate string `protobuf:"bytes,3,opt,name=coding_rate,json=codingRate,proto3" json:"coding_rate,omitempty"`
	// Frequency (Hz).
	Frequency uint64 `protobuf:"varint,4,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Send a CRC in the packet; only on uplink; on downlink, CRC should not be enabled.
	EnableCrc bool `protobuf:"varint,5,opt,name=enable_crc,json=enableCrc,proto3" json:"enable_crc,omitempty"`
	// Timestamp of the gateway concentrator when the uplink message was received, or when the downlink message should be transmitted (microseconds).
	// On downlink, set timestamp to 0 and time to null to use immediate scheduling.
	Timestamp uint32 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Time of the gateway when the uplink message was received, or when the downlink message should be transmitted.
	// For downlink, this requires the gateway to have GPS time synchronization.
	Time *types.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	// Transmission settings for downlink.
	Downlink             *TxSettings_Downlink `protobuf:"bytes,8,opt,name=downlink,proto3" json:"downlink,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TxSettings) Reset()         { *m = TxSettings{} }
func (m *TxSettings) String() string { return proto.CompactTextString(m) }
func (*TxSettings) ProtoMessage()    {}
func (*TxSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{14}
}
func (m *TxSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxSettings.Unmarshal(m, b)
}
func (m *TxSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxSettings.Marshal(b, m, deterministic)
}
func (m *TxSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxSettings.Merge(m, src)
}
func (m *TxSettings) XXX_Size() int {
	return xxx_messageInfo_TxSettings.Size(m)
}
func (m *TxSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TxSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TxSettings proto.InternalMessageInfo

func (m *TxSettings) GetDataRate() *DataRate {
	if m != nil {
		return m.DataRate
	}
	return nil
}

func (m *TxSettings) GetCodingRate() string {
	if m != nil {
		return m.CodingRate
	}
	return ""
}

func (m *TxSettings) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *TxSettings) GetEnableCrc() bool {
	if m != nil {
		return m.EnableCrc
	}
	return false
}

func (m *TxSettings) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TxSettings) GetTime() *types.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *TxSettings) GetDownlink() *TxSettings_Downlink {
	if m != nil {
		return m.Downlink
	}
	return nil
}

// Transmission settings for downlink.
type TxSettings_Downlink struct {
	// Index of the antenna on which the uplink was received and/or downlink must be sent.
	AntennaIndex uint32 `protobuf:"varint,1,opt,name=antenna_index,json=antennaIndex,proto3" json:"antenna_index,omitempty"`
	// Transmission power (dBm). Only on downlink.
	TxPower float32 `protobuf:"fixed32,2,opt,name=tx_power,json=txPower,proto3" json:"tx_power,omitempty"`
	// Invert LoRa polarization; false for LoRaWAN uplink, true for downlink.
	InvertPolarization   bool     `protobuf:"varint,3,opt,name=invert_polarization,json=invertPolarization,proto3" json:"invert_polarization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxSettings_Downlink) Reset()         { *m = TxSettings_Downlink{} }
func (m *TxSettings_Downlink) String() string { return proto.CompactTextString(m) }
func (*TxSettings_Downlink) ProtoMessage()    {}
func (*TxSettings_Downlink) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{14, 0}
}
func (m *TxSettings_Downlink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxSettings_Downlink.Unmarshal(m, b)
}
func (m *TxSettings_Downlink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxSettings_Downlink.Marshal(b, m, deterministic)
}
func (m *TxSettings_Downlink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxSettings_Downlink.Merge(m, src)
}
func (m *TxSettings_Downlink) XXX_Size() int {
	return xxx_messageInfo_TxSettings_Downlink.Size(m)
}
func (m *TxSettings_Downlink) XXX_DiscardUnknown() {
	xxx_messageInfo_TxSettings_Downlink.DiscardUnknown(m)
}

var xxx_messageInfo_TxSettings_Downlink proto.InternalMessageInfo

func (m *TxSettings_Downlink) GetAntennaIndex() uint32 {
	if m != nil {
		return m.AntennaIndex
	}
	return 0
}

func (m *TxSettings_Downlink) GetTxPower() float32 {
	if m != nil {
		return m.TxPower
	}
	return 0
}

func (m *TxSettings_Downlink) GetInvertPolarization() bool {
	if m != nil {
		return m.InvertPolarization
	}
	return false
}

type GatewayAntennaIdentifiers struct {
	GatewayIds           *GatewayIdentifiers `protobuf:"bytes,1,opt,name=gateway_ids,json=gatewayIds,proto3" json:"gateway_ids,omitempty"`
	AntennaIndex         uint32              `protobuf:"varint,2,opt,name=antenna_index,json=antennaIndex,proto3" json:"antenna_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GatewayAntennaIdentifiers) Reset()         { *m = GatewayAntennaIdentifiers{} }
func (m *GatewayAntennaIdentifiers) String() string { return proto.CompactTextString(m) }
func (*GatewayAntennaIdentifiers) ProtoMessage()    {}
func (*GatewayAntennaIdentifiers) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{15}
}
func (m *GatewayAntennaIdentifiers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayAntennaIdentifiers.Unmarshal(m, b)
}
func (m *GatewayAntennaIdentifiers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayAntennaIdentifiers.Marshal(b, m, deterministic)
}
func (m *GatewayAntennaIdentifiers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayAntennaIdentifiers.Merge(m, src)
}
func (m *GatewayAntennaIdentifiers) XXX_Size() int {
	return xxx_messageInfo_GatewayAntennaIdentifiers.Size(m)
}
func (m *GatewayAntennaIdentifiers) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayAntennaIdentifiers.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayAntennaIdentifiers proto.InternalMessageInfo

func (m *GatewayAntennaIdentifiers) GetGatewayIds() *GatewayIdentifiers {
	if m != nil {
		return m.GatewayIds
	}
	return nil
}

func (m *GatewayAntennaIdentifiers) GetAntennaIndex() uint32 {
	if m != nil {
		return m.AntennaIndex
	}
	return 0
}

type UplinkToken struct {
	Ids       *GatewayAntennaIdentifiers `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	Timestamp uint32                     `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Absolute time observed by the server when the uplink message has been received.
	ServerTime *types.Timestamp `protobuf:"bytes,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	// Absolute concentrator time as observed by the Gateway Server, accounting for rollovers.
	ConcentratorTime int64 `protobuf:"varint,4,opt,name=concentrator_time,json=concentratorTime,proto3" json:"concentrator_time,omitempty"`
	// Absolute time observed by the gateway when the uplink has been received.
	GatewayTime          *types.Timestamp `protobuf:"bytes,5,opt,name=gateway_time,json=gatewayTime,proto3" json:"gateway_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UplinkToken) Reset()         { *m = UplinkToken{} }
func (m *UplinkToken) String() string { return proto.CompactTextString(m) }
func (*UplinkToken) ProtoMessage()    {}
func (*UplinkToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{16}
}
func (m *UplinkToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UplinkToken.Unmarshal(m, b)
}
func (m *UplinkToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UplinkToken.Marshal(b, m, deterministic)
}
func (m *UplinkToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UplinkToken.Merge(m, src)
}
func (m *UplinkToken) XXX_Size() int {
	return xxx_messageInfo_UplinkToken.Size(m)
}
func (m *UplinkToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UplinkToken.DiscardUnknown(m)
}

var xxx_messageInfo_UplinkToken proto.InternalMessageInfo

func (m *UplinkToken) GetIds() *GatewayAntennaIdentifiers {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *UplinkToken) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *UplinkToken) GetServerTime() *types.Timestamp {
	if m != nil {
		return m.ServerTime
	}
	return nil
}

func (m *UplinkToken) GetConcentratorTime() int64 {
	if m != nil {
		return m.ConcentratorTime
	}
	return 0
}

func (m *UplinkToken) GetGatewayTime() *types.Timestamp {
	if m != nil {
		return m.GatewayTime
	}
	return nil
}

type DownlinkPath struct {
	// Set uplink token for class A, B or C downlink to the uplink token received from the corresponding RxMetadata. Uplink tokens are opaque to the Network Server.
	// Set fixed to force using the specified gateway antenna identifiers for downlink. This can only be used for class B or C downlinks.
	//
	// Types that are valid to be assigned to Path:
	//	*DownlinkPath_UplinkToken
	//	*DownlinkPath_Fixed
	Path                 isDownlinkPath_Path `protobuf_oneof:"path"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DownlinkPath) Reset()         { *m = DownlinkPath{} }
func (m *DownlinkPath) String() string { return proto.CompactTextString(m) }
func (*DownlinkPath) ProtoMessage()    {}
func (*DownlinkPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{17}
}
func (m *DownlinkPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownlinkPath.Unmarshal(m, b)
}
func (m *DownlinkPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownlinkPath.Marshal(b, m, deterministic)
}
func (m *DownlinkPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownlinkPath.Merge(m, src)
}
func (m *DownlinkPath) XXX_Size() int {
	return xxx_messageInfo_DownlinkPath.Size(m)
}
func (m *DownlinkPath) XXX_DiscardUnknown() {
	xxx_messageInfo_DownlinkPath.DiscardUnknown(m)
}

var xxx_messageInfo_DownlinkPath proto.InternalMessageInfo

type isDownlinkPath_Path interface {
	isDownlinkPath_Path()
}

type DownlinkPath_UplinkToken struct {
	UplinkToken []byte `protobuf:"bytes,1,opt,name=uplink_token,json=uplinkToken,proto3,oneof" json:"uplink_token,omitempty"`
}
type DownlinkPath_Fixed struct {
	Fixed *GatewayAntennaIdentifiers `protobuf:"bytes,2,opt,name=fixed,proto3,oneof" json:"fixed,omitempty"`
}

func (*DownlinkPath_UplinkToken) isDownlinkPath_Path() {}
func (*DownlinkPath_Fixed) isDownlinkPath_Path()       {}

func (m *DownlinkPath) GetPath() isDownlinkPath_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *DownlinkPath) GetUplinkToken() []byte {
	if x, ok := m.GetPath().(*DownlinkPath_UplinkToken); ok {
		return x.UplinkToken
	}
	return nil
}

func (m *DownlinkPath) GetFixed() *GatewayAntennaIdentifiers {
	if x, ok := m.GetPath().(*DownlinkPath_Fixed); ok {
		return x.Fixed
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DownlinkPath) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DownlinkPath_UplinkToken)(nil),
		(*DownlinkPath_Fixed)(nil),
	}
}

// TxRequest is a request for transmission.
// If sent to a roaming partner, this request is used to generate the DLMetadata Object (see Backend Interfaces 1.0, Table 22).
// If the gateway has a scheduler, this request is sent to the gateway, in the order of gateway_ids.
// Otherwise, the Gateway Server attempts to schedule the request and creates the TxSettings.
type TxRequest struct {
	Class Class `protobuf:"varint,1,opt,name=class,proto3,enum=ttn.lorawan.v3.Class" json:"class,omitempty"`
	// Downlink paths used to select a gateway for downlink.
	// In class A, the downlink paths are required to only contain uplink tokens.
	// In class B and C, the downlink paths may contain uplink tokens and fixed gateways antenna identifiers.
	DownlinkPaths []*DownlinkPath `protobuf:"bytes,2,rep,name=downlink_paths,json=downlinkPaths,proto3" json:"downlink_paths,omitempty"`
	// Rx1 delay (Rx2 delay is Rx1 delay + 1 second).
	Rx1Delay RxDelay `protobuf:"varint,3,opt,name=rx1_delay,json=rx1Delay,proto3,enum=ttn.lorawan.v3.RxDelay" json:"rx1_delay,omitempty"`
	// LoRaWAN data rate for Rx1.
	Rx1DataRate *DataRate `protobuf:"bytes,12,opt,name=rx1_data_rate,json=rx1DataRate,proto3" json:"rx1_data_rate,omitempty"`
	// Frequency (Hz) for Rx1.
	Rx1Frequency uint64 `protobuf:"varint,5,opt,name=rx1_frequency,json=rx1Frequency,proto3" json:"rx1_frequency,omitempty"`
	// LoRaWAN data rate for Rx2.
	Rx2DataRate *DataRate `protobuf:"bytes,13,opt,name=rx2_data_rate,json=rx2DataRate,proto3" json:"rx2_data_rate,omitempty"`
	// Frequency (Hz) for Rx2.
	Rx2Frequency uint64 `protobuf:"varint,7,opt,name=rx2_frequency,json=rx2Frequency,proto3" json:"rx2_frequency,omitempty"`
	// Priority for scheduling.
	// Requests with a higher priority are allocated more channel time than messages with a lower priority, in duty-cycle limited regions.
	// A priority of HIGH or higher sets the HiPriorityFlag in the DLMetadata Object.
	Priority TxSchedulePriority `protobuf:"varint,8,opt,name=priority,proto3,enum=ttn.lorawan.v3.TxSchedulePriority" json:"priority,omitempty"`
	// Time when the downlink message should be transmitted.
	// This value is only valid for class C downlink; class A downlink uses uplink tokens and class B downlink is scheduled on ping slots.
	// This requires the gateway to have GPS time sychronization.
	// If the absolute time is not set, the first available time will be used that does not conflict or violate regional limitations.
	AbsoluteTime *types.Timestamp `protobuf:"bytes,9,opt,name=absolute_time,json=absoluteTime,proto3" json:"absolute_time,omitempty"`
	// Frequency plan ID from which the frequencies in this message are retrieved.
	FrequencyPlanId string `protobuf:"bytes,10,opt,name=frequency_plan_id,json=frequencyPlanId,proto3" json:"frequency_plan_id,omitempty"`
	// Advanced metadata fields
	// - can be used for advanced information or experimental features that are not yet formally defined in the API
	// - field names are written in snake_case
	Advanced             *types.Struct `protobuf:"bytes,99,opt,name=advanced,proto3" json:"advanced,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{18}
}
func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (m *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(m, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetClass() Class {
	if m != nil {
		return m.Class
	}
	return Class_CLASS_A
}

func (m *TxRequest) GetDownlinkPaths() []*DownlinkPath {
	if m != nil {
		return m.DownlinkPaths
	}
	return nil
}

func (m *TxRequest) GetRx1Delay() RxDelay {
	if m != nil {
		return m.Rx1Delay
	}
	return RxDelay_RX_DELAY_0
}

func (m *TxRequest) GetRx1DataRate() *DataRate {
	if m != nil {
		return m.Rx1DataRate
	}
	return nil
}

func (m *TxRequest) GetRx1Frequency() uint64 {
	if m != nil {
		return m.Rx1Frequency
	}
	return 0
}

func (m *TxRequest) GetRx2DataRate() *DataRate {
	if m != nil {
		return m.Rx2DataRate
	}
	return nil
}

func (m *TxRequest) GetRx2Frequency() uint64 {
	if m != nil {
		return m.Rx2Frequency
	}
	return 0
}

func (m *TxRequest) GetPriority() TxSchedulePriority {
	if m != nil {
		return m.Priority
	}
	return TxSchedulePriority_LOWEST
}

func (m *TxRequest) GetAbsoluteTime() *types.Timestamp {
	if m != nil {
		return m.AbsoluteTime
	}
	return nil
}

func (m *TxRequest) GetFrequencyPlanId() string {
	if m != nil {
		return m.FrequencyPlanId
	}
	return ""
}

func (m *TxRequest) GetAdvanced() *types.Struct {
	if m != nil {
		return m.Advanced
	}
	return nil
}

type MACCommand struct {
	Cid MACCommandIdentifier `protobuf:"varint,1,opt,name=cid,proto3,enum=ttn.lorawan.v3.MACCommandIdentifier" json:"cid,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*MACCommand_RawPayload
	//	*MACCommand_ResetInd_
	//	*MACCommand_ResetConf_
	//	*MACCommand_LinkCheckAns_
	//	*MACCommand_LinkAdrReq
	//	*MACCommand_LinkAdrAns
	//	*MACCommand_DutyCycleReq_
	//	*MACCommand_RxParamSetupReq_
	//	*MACCommand_RxParamSetupAns_
	//	*MACCommand_DevStatusAns_
	//	*MACCommand_NewChannelReq_
	//	*MACCommand_NewChannelAns_
	//	*MACCommand_DlChannelReq
	//	*MACCommand_DlChannelAns
	//	*MACCommand_RxTimingSetupReq_
	//	*MACCommand_TxParamSetupReq_
	//	*MACCommand_RekeyInd_
	//	*MACCommand_RekeyConf_
	//	*MACCommand_AdrParamSetupReq
	//	*MACCommand_DeviceTimeAns_
	//	*MACCommand_ForceRejoinReq_
	//	*MACCommand_RejoinParamSetupReq_
	//	*MACCommand_RejoinParamSetupAns_
	//	*MACCommand_PingSlotInfoReq_
	//	*MACCommand_PingSlotChannelReq_
	//	*MACCommand_PingSlotChannelAns_
	//	*MACCommand_BeaconTimingAns_
	//	*MACCommand_BeaconFreqReq_
	//	*MACCommand_BeaconFreqAns_
	//	*MACCommand_DeviceModeInd_
	//	*MACCommand_DeviceModeConf_
	Payload              isMACCommand_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MACCommand) Reset()         { *m = MACCommand{} }
func (m *MACCommand) String() string { return proto.CompactTextString(m) }
func (*MACCommand) ProtoMessage()    {}
func (*MACCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19}
}
func (m *MACCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand.Unmarshal(m, b)
}
func (m *MACCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand.Marshal(b, m, deterministic)
}
func (m *MACCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand.Merge(m, src)
}
func (m *MACCommand) XXX_Size() int {
	return xxx_messageInfo_MACCommand.Size(m)
}
func (m *MACCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand proto.InternalMessageInfo

type isMACCommand_Payload interface {
	isMACCommand_Payload()
}

type MACCommand_RawPayload struct {
	RawPayload []byte `protobuf:"bytes,2,opt,name=raw_payload,json=rawPayload,proto3,oneof" json:"raw_payload,omitempty"`
}
type MACCommand_ResetInd_ struct {
	ResetInd *MACCommand_ResetInd `protobuf:"bytes,3,opt,name=reset_ind,json=resetInd,proto3,oneof" json:"reset_ind,omitempty"`
}
type MACCommand_ResetConf_ struct {
	ResetConf *MACCommand_ResetConf `protobuf:"bytes,4,opt,name=reset_conf,json=resetConf,proto3,oneof" json:"reset_conf,omitempty"`
}
type MACCommand_LinkCheckAns_ struct {
	LinkCheckAns *MACCommand_LinkCheckAns `protobuf:"bytes,5,opt,name=link_check_ans,json=linkCheckAns,proto3,oneof" json:"link_check_ans,omitempty"`
}
type MACCommand_LinkAdrReq struct {
	LinkAdrReq *MACCommand_LinkADRReq `protobuf:"bytes,6,opt,name=link_adr_req,json=linkAdrReq,proto3,oneof" json:"link_adr_req,omitempty"`
}
type MACCommand_LinkAdrAns struct {
	LinkAdrAns *MACCommand_LinkADRAns `protobuf:"bytes,7,opt,name=link_adr_ans,json=linkAdrAns,proto3,oneof" json:"link_adr_ans,omitempty"`
}
type MACCommand_DutyCycleReq_ struct {
	DutyCycleReq *MACCommand_DutyCycleReq `protobuf:"bytes,8,opt,name=duty_cycle_req,json=dutyCycleReq,proto3,oneof" json:"duty_cycle_req,omitempty"`
}
type MACCommand_RxParamSetupReq_ struct {
	RxParamSetupReq *MACCommand_RxParamSetupReq `protobuf:"bytes,9,opt,name=rx_param_setup_req,json=rxParamSetupReq,proto3,oneof" json:"rx_param_setup_req,omitempty"`
}
type MACCommand_RxParamSetupAns_ struct {
	RxParamSetupAns *MACCommand_RxParamSetupAns `protobuf:"bytes,10,opt,name=rx_param_setup_ans,json=rxParamSetupAns,proto3,oneof" json:"rx_param_setup_ans,omitempty"`
}
type MACCommand_DevStatusAns_ struct {
	DevStatusAns *MACCommand_DevStatusAns `protobuf:"bytes,11,opt,name=dev_status_ans,json=devStatusAns,proto3,oneof" json:"dev_status_ans,omitempty"`
}
type MACCommand_NewChannelReq_ struct {
	NewChannelReq *MACCommand_NewChannelReq `protobuf:"bytes,12,opt,name=new_channel_req,json=newChannelReq,proto3,oneof" json:"new_channel_req,omitempty"`
}
type MACCommand_NewChannelAns_ struct {
	NewChannelAns *MACCommand_NewChannelAns `protobuf:"bytes,13,opt,name=new_channel_ans,json=newChannelAns,proto3,oneof" json:"new_channel_ans,omitempty"`
}
type MACCommand_DlChannelReq struct {
	DlChannelReq *MACCommand_DLChannelReq `protobuf:"bytes,14,opt,name=dl_channel_req,json=dlChannelReq,proto3,oneof" json:"dl_channel_req,omitempty"`
}
type MACCommand_DlChannelAns struct {
	DlChannelAns *MACCommand_DLChannelAns `protobuf:"bytes,15,opt,name=dl_channel_ans,json=dlChannelAns,proto3,oneof" json:"dl_channel_ans,omitempty"`
}
type MACCommand_RxTimingSetupReq_ struct {
	RxTimingSetupReq *MACCommand_RxTimingSetupReq `protobuf:"bytes,16,opt,name=rx_timing_setup_req,json=rxTimingSetupReq,proto3,oneof" json:"rx_timing_setup_req,omitempty"`
}
type MACCommand_TxParamSetupReq_ struct {
	TxParamSetupReq *MACCommand_TxParamSetupReq `protobuf:"bytes,17,opt,name=tx_param_setup_req,json=txParamSetupReq,proto3,oneof" json:"tx_param_setup_req,omitempty"`
}
type MACCommand_RekeyInd_ struct {
	RekeyInd *MACCommand_RekeyInd `protobuf:"bytes,18,opt,name=rekey_ind,json=rekeyInd,proto3,oneof" json:"rekey_ind,omitempty"`
}
type MACCommand_RekeyConf_ struct {
	RekeyConf *MACCommand_RekeyConf `protobuf:"bytes,19,opt,name=rekey_conf,json=rekeyConf,proto3,oneof" json:"rekey_conf,omitempty"`
}
type MACCommand_AdrParamSetupReq struct {
	AdrParamSetupReq *MACCommand_ADRParamSetupReq `protobuf:"bytes,20,opt,name=adr_param_setup_req,json=adrParamSetupReq,proto3,oneof" json:"adr_param_setup_req,omitempty"`
}
type MACCommand_DeviceTimeAns_ struct {
	DeviceTimeAns *MACCommand_DeviceTimeAns `protobuf:"bytes,21,opt,name=device_time_ans,json=deviceTimeAns,proto3,oneof" json:"device_time_ans,omitempty"`
}
type MACCommand_ForceRejoinReq_ struct {
	ForceRejoinReq *MACCommand_ForceRejoinReq `protobuf:"bytes,22,opt,name=force_rejoin_req,json=forceRejoinReq,proto3,oneof" json:"force_rejoin_req,omitempty"`
}
type MACCommand_RejoinParamSetupReq_ struct {
	RejoinParamSetupReq *MACCommand_RejoinParamSetupReq `protobuf:"bytes,23,opt,name=rejoin_param_setup_req,json=rejoinParamSetupReq,proto3,oneof" json:"rejoin_param_setup_req,omitempty"`
}
type MACCommand_RejoinParamSetupAns_ struct {
	RejoinParamSetupAns *MACCommand_RejoinParamSetupAns `protobuf:"bytes,24,opt,name=rejoin_param_setup_ans,json=rejoinParamSetupAns,proto3,oneof" json:"rejoin_param_setup_ans,omitempty"`
}
type MACCommand_PingSlotInfoReq_ struct {
	PingSlotInfoReq *MACCommand_PingSlotInfoReq `protobuf:"bytes,25,opt,name=ping_slot_info_req,json=pingSlotInfoReq,proto3,oneof" json:"ping_slot_info_req,omitempty"`
}
type MACCommand_PingSlotChannelReq_ struct {
	PingSlotChannelReq *MACCommand_PingSlotChannelReq `protobuf:"bytes,26,opt,name=ping_slot_channel_req,json=pingSlotChannelReq,proto3,oneof" json:"ping_slot_channel_req,omitempty"`
}
type MACCommand_PingSlotChannelAns_ struct {
	PingSlotChannelAns *MACCommand_PingSlotChannelAns `protobuf:"bytes,27,opt,name=ping_slot_channel_ans,json=pingSlotChannelAns,proto3,oneof" json:"ping_slot_channel_ans,omitempty"`
}
type MACCommand_BeaconTimingAns_ struct {
	BeaconTimingAns *MACCommand_BeaconTimingAns `protobuf:"bytes,28,opt,name=beacon_timing_ans,json=beaconTimingAns,proto3,oneof" json:"beacon_timing_ans,omitempty"`
}
type MACCommand_BeaconFreqReq_ struct {
	BeaconFreqReq *MACCommand_BeaconFreqReq `protobuf:"bytes,29,opt,name=beacon_freq_req,json=beaconFreqReq,proto3,oneof" json:"beacon_freq_req,omitempty"`
}
type MACCommand_BeaconFreqAns_ struct {
	BeaconFreqAns *MACCommand_BeaconFreqAns `protobuf:"bytes,30,opt,name=beacon_freq_ans,json=beaconFreqAns,proto3,oneof" json:"beacon_freq_ans,omitempty"`
}
type MACCommand_DeviceModeInd_ struct {
	DeviceModeInd *MACCommand_DeviceModeInd `protobuf:"bytes,31,opt,name=device_mode_ind,json=deviceModeInd,proto3,oneof" json:"device_mode_ind,omitempty"`
}
type MACCommand_DeviceModeConf_ struct {
	DeviceModeConf *MACCommand_DeviceModeConf `protobuf:"bytes,32,opt,name=device_mode_conf,json=deviceModeConf,proto3,oneof" json:"device_mode_conf,omitempty"`
}

func (*MACCommand_RawPayload) isMACCommand_Payload()           {}
func (*MACCommand_ResetInd_) isMACCommand_Payload()            {}
func (*MACCommand_ResetConf_) isMACCommand_Payload()           {}
func (*MACCommand_LinkCheckAns_) isMACCommand_Payload()        {}
func (*MACCommand_LinkAdrReq) isMACCommand_Payload()           {}
func (*MACCommand_LinkAdrAns) isMACCommand_Payload()           {}
func (*MACCommand_DutyCycleReq_) isMACCommand_Payload()        {}
func (*MACCommand_RxParamSetupReq_) isMACCommand_Payload()     {}
func (*MACCommand_RxParamSetupAns_) isMACCommand_Payload()     {}
func (*MACCommand_DevStatusAns_) isMACCommand_Payload()        {}
func (*MACCommand_NewChannelReq_) isMACCommand_Payload()       {}
func (*MACCommand_NewChannelAns_) isMACCommand_Payload()       {}
func (*MACCommand_DlChannelReq) isMACCommand_Payload()         {}
func (*MACCommand_DlChannelAns) isMACCommand_Payload()         {}
func (*MACCommand_RxTimingSetupReq_) isMACCommand_Payload()    {}
func (*MACCommand_TxParamSetupReq_) isMACCommand_Payload()     {}
func (*MACCommand_RekeyInd_) isMACCommand_Payload()            {}
func (*MACCommand_RekeyConf_) isMACCommand_Payload()           {}
func (*MACCommand_AdrParamSetupReq) isMACCommand_Payload()     {}
func (*MACCommand_DeviceTimeAns_) isMACCommand_Payload()       {}
func (*MACCommand_ForceRejoinReq_) isMACCommand_Payload()      {}
func (*MACCommand_RejoinParamSetupReq_) isMACCommand_Payload() {}
func (*MACCommand_RejoinParamSetupAns_) isMACCommand_Payload() {}
func (*MACCommand_PingSlotInfoReq_) isMACCommand_Payload()     {}
func (*MACCommand_PingSlotChannelReq_) isMACCommand_Payload()  {}
func (*MACCommand_PingSlotChannelAns_) isMACCommand_Payload()  {}
func (*MACCommand_BeaconTimingAns_) isMACCommand_Payload()     {}
func (*MACCommand_BeaconFreqReq_) isMACCommand_Payload()       {}
func (*MACCommand_BeaconFreqAns_) isMACCommand_Payload()       {}
func (*MACCommand_DeviceModeInd_) isMACCommand_Payload()       {}
func (*MACCommand_DeviceModeConf_) isMACCommand_Payload()      {}

func (m *MACCommand) GetPayload() isMACCommand_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MACCommand) GetCid() MACCommandIdentifier {
	if m != nil {
		return m.Cid
	}
	return MACCommandIdentifier_CID_RFU_0
}

func (m *MACCommand) GetRawPayload() []byte {
	if x, ok := m.GetPayload().(*MACCommand_RawPayload); ok {
		return x.RawPayload
	}
	return nil
}

func (m *MACCommand) GetResetInd() *MACCommand_ResetInd {
	if x, ok := m.GetPayload().(*MACCommand_ResetInd_); ok {
		return x.ResetInd
	}
	return nil
}

func (m *MACCommand) GetResetConf() *MACCommand_ResetConf {
	if x, ok := m.GetPayload().(*MACCommand_ResetConf_); ok {
		return x.ResetConf
	}
	return nil
}

func (m *MACCommand) GetLinkCheckAns() *MACCommand_LinkCheckAns {
	if x, ok := m.GetPayload().(*MACCommand_LinkCheckAns_); ok {
		return x.LinkCheckAns
	}
	return nil
}

func (m *MACCommand) GetLinkAdrReq() *MACCommand_LinkADRReq {
	if x, ok := m.GetPayload().(*MACCommand_LinkAdrReq); ok {
		return x.LinkAdrReq
	}
	return nil
}

func (m *MACCommand) GetLinkAdrAns() *MACCommand_LinkADRAns {
	if x, ok := m.GetPayload().(*MACCommand_LinkAdrAns); ok {
		return x.LinkAdrAns
	}
	return nil
}

func (m *MACCommand) GetDutyCycleReq() *MACCommand_DutyCycleReq {
	if x, ok := m.GetPayload().(*MACCommand_DutyCycleReq_); ok {
		return x.DutyCycleReq
	}
	return nil
}

func (m *MACCommand) GetRxParamSetupReq() *MACCommand_RxParamSetupReq {
	if x, ok := m.GetPayload().(*MACCommand_RxParamSetupReq_); ok {
		return x.RxParamSetupReq
	}
	return nil
}

func (m *MACCommand) GetRxParamSetupAns() *MACCommand_RxParamSetupAns {
	if x, ok := m.GetPayload().(*MACCommand_RxParamSetupAns_); ok {
		return x.RxParamSetupAns
	}
	return nil
}

func (m *MACCommand) GetDevStatusAns() *MACCommand_DevStatusAns {
	if x, ok := m.GetPayload().(*MACCommand_DevStatusAns_); ok {
		return x.DevStatusAns
	}
	return nil
}

func (m *MACCommand) GetNewChannelReq() *MACCommand_NewChannelReq {
	if x, ok := m.GetPayload().(*MACCommand_NewChannelReq_); ok {
		return x.NewChannelReq
	}
	return nil
}

func (m *MACCommand) GetNewChannelAns() *MACCommand_NewChannelAns {
	if x, ok := m.GetPayload().(*MACCommand_NewChannelAns_); ok {
		return x.NewChannelAns
	}
	return nil
}

func (m *MACCommand) GetDlChannelReq() *MACCommand_DLChannelReq {
	if x, ok := m.GetPayload().(*MACCommand_DlChannelReq); ok {
		return x.DlChannelReq
	}
	return nil
}

func (m *MACCommand) GetDlChannelAns() *MACCommand_DLChannelAns {
	if x, ok := m.GetPayload().(*MACCommand_DlChannelAns); ok {
		return x.DlChannelAns
	}
	return nil
}

func (m *MACCommand) GetRxTimingSetupReq() *MACCommand_RxTimingSetupReq {
	if x, ok := m.GetPayload().(*MACCommand_RxTimingSetupReq_); ok {
		return x.RxTimingSetupReq
	}
	return nil
}

func (m *MACCommand) GetTxParamSetupReq() *MACCommand_TxParamSetupReq {
	if x, ok := m.GetPayload().(*MACCommand_TxParamSetupReq_); ok {
		return x.TxParamSetupReq
	}
	return nil
}

func (m *MACCommand) GetRekeyInd() *MACCommand_RekeyInd {
	if x, ok := m.GetPayload().(*MACCommand_RekeyInd_); ok {
		return x.RekeyInd
	}
	return nil
}

func (m *MACCommand) GetRekeyConf() *MACCommand_RekeyConf {
	if x, ok := m.GetPayload().(*MACCommand_RekeyConf_); ok {
		return x.RekeyConf
	}
	return nil
}

func (m *MACCommand) GetAdrParamSetupReq() *MACCommand_ADRParamSetupReq {
	if x, ok := m.GetPayload().(*MACCommand_AdrParamSetupReq); ok {
		return x.AdrParamSetupReq
	}
	return nil
}

func (m *MACCommand) GetDeviceTimeAns() *MACCommand_DeviceTimeAns {
	if x, ok := m.GetPayload().(*MACCommand_DeviceTimeAns_); ok {
		return x.DeviceTimeAns
	}
	return nil
}

func (m *MACCommand) GetForceRejoinReq() *MACCommand_ForceRejoinReq {
	if x, ok := m.GetPayload().(*MACCommand_ForceRejoinReq_); ok {
		return x.ForceRejoinReq
	}
	return nil
}

func (m *MACCommand) GetRejoinParamSetupReq() *MACCommand_RejoinParamSetupReq {
	if x, ok := m.GetPayload().(*MACCommand_RejoinParamSetupReq_); ok {
		return x.RejoinParamSetupReq
	}
	return nil
}

func (m *MACCommand) GetRejoinParamSetupAns() *MACCommand_RejoinParamSetupAns {
	if x, ok := m.GetPayload().(*MACCommand_RejoinParamSetupAns_); ok {
		return x.RejoinParamSetupAns
	}
	return nil
}

func (m *MACCommand) GetPingSlotInfoReq() *MACCommand_PingSlotInfoReq {
	if x, ok := m.GetPayload().(*MACCommand_PingSlotInfoReq_); ok {
		return x.PingSlotInfoReq
	}
	return nil
}

func (m *MACCommand) GetPingSlotChannelReq() *MACCommand_PingSlotChannelReq {
	if x, ok := m.GetPayload().(*MACCommand_PingSlotChannelReq_); ok {
		return x.PingSlotChannelReq
	}
	return nil
}

func (m *MACCommand) GetPingSlotChannelAns() *MACCommand_PingSlotChannelAns {
	if x, ok := m.GetPayload().(*MACCommand_PingSlotChannelAns_); ok {
		return x.PingSlotChannelAns
	}
	return nil
}

func (m *MACCommand) GetBeaconTimingAns() *MACCommand_BeaconTimingAns {
	if x, ok := m.GetPayload().(*MACCommand_BeaconTimingAns_); ok {
		return x.BeaconTimingAns
	}
	return nil
}

func (m *MACCommand) GetBeaconFreqReq() *MACCommand_BeaconFreqReq {
	if x, ok := m.GetPayload().(*MACCommand_BeaconFreqReq_); ok {
		return x.BeaconFreqReq
	}
	return nil
}

func (m *MACCommand) GetBeaconFreqAns() *MACCommand_BeaconFreqAns {
	if x, ok := m.GetPayload().(*MACCommand_BeaconFreqAns_); ok {
		return x.BeaconFreqAns
	}
	return nil
}

func (m *MACCommand) GetDeviceModeInd() *MACCommand_DeviceModeInd {
	if x, ok := m.GetPayload().(*MACCommand_DeviceModeInd_); ok {
		return x.DeviceModeInd
	}
	return nil
}

func (m *MACCommand) GetDeviceModeConf() *MACCommand_DeviceModeConf {
	if x, ok := m.GetPayload().(*MACCommand_DeviceModeConf_); ok {
		return x.DeviceModeConf
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MACCommand) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MACCommand_RawPayload)(nil),
		(*MACCommand_ResetInd_)(nil),
		(*MACCommand_ResetConf_)(nil),
		(*MACCommand_LinkCheckAns_)(nil),
		(*MACCommand_LinkAdrReq)(nil),
		(*MACCommand_LinkAdrAns)(nil),
		(*MACCommand_DutyCycleReq_)(nil),
		(*MACCommand_RxParamSetupReq_)(nil),
		(*MACCommand_RxParamSetupAns_)(nil),
		(*MACCommand_DevStatusAns_)(nil),
		(*MACCommand_NewChannelReq_)(nil),
		(*MACCommand_NewChannelAns_)(nil),
		(*MACCommand_DlChannelReq)(nil),
		(*MACCommand_DlChannelAns)(nil),
		(*MACCommand_RxTimingSetupReq_)(nil),
		(*MACCommand_TxParamSetupReq_)(nil),
		(*MACCommand_RekeyInd_)(nil),
		(*MACCommand_RekeyConf_)(nil),
		(*MACCommand_AdrParamSetupReq)(nil),
		(*MACCommand_DeviceTimeAns_)(nil),
		(*MACCommand_ForceRejoinReq_)(nil),
		(*MACCommand_RejoinParamSetupReq_)(nil),
		(*MACCommand_RejoinParamSetupAns_)(nil),
		(*MACCommand_PingSlotInfoReq_)(nil),
		(*MACCommand_PingSlotChannelReq_)(nil),
		(*MACCommand_PingSlotChannelAns_)(nil),
		(*MACCommand_BeaconTimingAns_)(nil),
		(*MACCommand_BeaconFreqReq_)(nil),
		(*MACCommand_BeaconFreqAns_)(nil),
		(*MACCommand_DeviceModeInd_)(nil),
		(*MACCommand_DeviceModeConf_)(nil),
	}
}

type MACCommand_ResetInd struct {
	MinorVersion         Minor    `protobuf:"varint,1,opt,name=minor_version,json=minorVersion,proto3,enum=ttn.lorawan.v3.Minor" json:"minor_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_ResetInd) Reset()         { *m = MACCommand_ResetInd{} }
func (m *MACCommand_ResetInd) String() string { return proto.CompactTextString(m) }
func (*MACCommand_ResetInd) ProtoMessage()    {}
func (*MACCommand_ResetInd) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 0}
}
func (m *MACCommand_ResetInd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_ResetInd.Unmarshal(m, b)
}
func (m *MACCommand_ResetInd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_ResetInd.Marshal(b, m, deterministic)
}
func (m *MACCommand_ResetInd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_ResetInd.Merge(m, src)
}
func (m *MACCommand_ResetInd) XXX_Size() int {
	return xxx_messageInfo_MACCommand_ResetInd.Size(m)
}
func (m *MACCommand_ResetInd) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_ResetInd.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_ResetInd proto.InternalMessageInfo

func (m *MACCommand_ResetInd) GetMinorVersion() Minor {
	if m != nil {
		return m.MinorVersion
	}
	return Minor_MINOR_RFU_0
}

type MACCommand_ResetConf struct {
	MinorVersion         Minor    `protobuf:"varint,1,opt,name=minor_version,json=minorVersion,proto3,enum=ttn.lorawan.v3.Minor" json:"minor_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_ResetConf) Reset()         { *m = MACCommand_ResetConf{} }
func (m *MACCommand_ResetConf) String() string { return proto.CompactTextString(m) }
func (*MACCommand_ResetConf) ProtoMessage()    {}
func (*MACCommand_ResetConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 1}
}
func (m *MACCommand_ResetConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_ResetConf.Unmarshal(m, b)
}
func (m *MACCommand_ResetConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_ResetConf.Marshal(b, m, deterministic)
}
func (m *MACCommand_ResetConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_ResetConf.Merge(m, src)
}
func (m *MACCommand_ResetConf) XXX_Size() int {
	return xxx_messageInfo_MACCommand_ResetConf.Size(m)
}
func (m *MACCommand_ResetConf) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_ResetConf.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_ResetConf proto.InternalMessageInfo

func (m *MACCommand_ResetConf) GetMinorVersion() Minor {
	if m != nil {
		return m.MinorVersion
	}
	return Minor_MINOR_RFU_0
}

type MACCommand_LinkCheckAns struct {
	// Indicates the link margin in dB of the received LinkCheckReq, relative to the demodulation floor.
	Margin               uint32   `protobuf:"varint,1,opt,name=margin,proto3" json:"margin,omitempty"`
	GatewayCount         uint32   `protobuf:"varint,2,opt,name=gateway_count,json=gatewayCount,proto3" json:"gateway_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_LinkCheckAns) Reset()         { *m = MACCommand_LinkCheckAns{} }
func (m *MACCommand_LinkCheckAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_LinkCheckAns) ProtoMessage()    {}
func (*MACCommand_LinkCheckAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 2}
}
func (m *MACCommand_LinkCheckAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_LinkCheckAns.Unmarshal(m, b)
}
func (m *MACCommand_LinkCheckAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_LinkCheckAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_LinkCheckAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_LinkCheckAns.Merge(m, src)
}
func (m *MACCommand_LinkCheckAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_LinkCheckAns.Size(m)
}
func (m *MACCommand_LinkCheckAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_LinkCheckAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_LinkCheckAns proto.InternalMessageInfo

func (m *MACCommand_LinkCheckAns) GetMargin() uint32 {
	if m != nil {
		return m.Margin
	}
	return 0
}

func (m *MACCommand_LinkCheckAns) GetGatewayCount() uint32 {
	if m != nil {
		return m.GatewayCount
	}
	return 0
}

type MACCommand_LinkADRReq struct {
	DataRateIndex        DataRateIndex `protobuf:"varint,1,opt,name=data_rate_index,json=dataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"data_rate_index,omitempty"`
	TxPowerIndex         uint32        `protobuf:"varint,2,opt,name=tx_power_index,json=txPowerIndex,proto3" json:"tx_power_index,omitempty"`
	ChannelMask          []bool        `protobuf:"varint,3,rep,packed,name=channel_mask,json=channelMask,proto3" json:"channel_mask,omitempty"`
	ChannelMaskControl   uint32        `protobuf:"varint,5,opt,name=channel_mask_control,json=channelMaskControl,proto3" json:"channel_mask_control,omitempty"`
	NbTrans              uint32        `protobuf:"varint,6,opt,name=nb_trans,json=nbTrans,proto3" json:"nb_trans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MACCommand_LinkADRReq) Reset()         { *m = MACCommand_LinkADRReq{} }
func (m *MACCommand_LinkADRReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_LinkADRReq) ProtoMessage()    {}
func (*MACCommand_LinkADRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 3}
}
func (m *MACCommand_LinkADRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_LinkADRReq.Unmarshal(m, b)
}
func (m *MACCommand_LinkADRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_LinkADRReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_LinkADRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_LinkADRReq.Merge(m, src)
}
func (m *MACCommand_LinkADRReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_LinkADRReq.Size(m)
}
func (m *MACCommand_LinkADRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_LinkADRReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_LinkADRReq proto.InternalMessageInfo

func (m *MACCommand_LinkADRReq) GetDataRateIndex() DataRateIndex {
	if m != nil {
		return m.DataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACCommand_LinkADRReq) GetTxPowerIndex() uint32 {
	if m != nil {
		return m.TxPowerIndex
	}
	return 0
}

func (m *MACCommand_LinkADRReq) GetChannelMask() []bool {
	if m != nil {
		return m.ChannelMask
	}
	return nil
}

func (m *MACCommand_LinkADRReq) GetChannelMaskControl() uint32 {
	if m != nil {
		return m.ChannelMaskControl
	}
	return 0
}

func (m *MACCommand_LinkADRReq) GetNbTrans() uint32 {
	if m != nil {
		return m.NbTrans
	}
	return 0
}

type MACCommand_LinkADRAns struct {
	ChannelMaskAck       bool     `protobuf:"varint,1,opt,name=channel_mask_ack,json=channelMaskAck,proto3" json:"channel_mask_ack,omitempty"`
	DataRateIndexAck     bool     `protobuf:"varint,2,opt,name=data_rate_index_ack,json=dataRateIndexAck,proto3" json:"data_rate_index_ack,omitempty"`
	TxPowerIndexAck      bool     `protobuf:"varint,3,opt,name=tx_power_index_ack,json=txPowerIndexAck,proto3" json:"tx_power_index_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_LinkADRAns) Reset()         { *m = MACCommand_LinkADRAns{} }
func (m *MACCommand_LinkADRAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_LinkADRAns) ProtoMessage()    {}
func (*MACCommand_LinkADRAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 4}
}
func (m *MACCommand_LinkADRAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_LinkADRAns.Unmarshal(m, b)
}
func (m *MACCommand_LinkADRAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_LinkADRAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_LinkADRAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_LinkADRAns.Merge(m, src)
}
func (m *MACCommand_LinkADRAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_LinkADRAns.Size(m)
}
func (m *MACCommand_LinkADRAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_LinkADRAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_LinkADRAns proto.InternalMessageInfo

func (m *MACCommand_LinkADRAns) GetChannelMaskAck() bool {
	if m != nil {
		return m.ChannelMaskAck
	}
	return false
}

func (m *MACCommand_LinkADRAns) GetDataRateIndexAck() bool {
	if m != nil {
		return m.DataRateIndexAck
	}
	return false
}

func (m *MACCommand_LinkADRAns) GetTxPowerIndexAck() bool {
	if m != nil {
		return m.TxPowerIndexAck
	}
	return false
}

type MACCommand_DutyCycleReq struct {
	MaxDutyCycle         AggregatedDutyCycle `protobuf:"varint,1,opt,name=max_duty_cycle,json=maxDutyCycle,proto3,enum=ttn.lorawan.v3.AggregatedDutyCycle" json:"max_duty_cycle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MACCommand_DutyCycleReq) Reset()         { *m = MACCommand_DutyCycleReq{} }
func (m *MACCommand_DutyCycleReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DutyCycleReq) ProtoMessage()    {}
func (*MACCommand_DutyCycleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 5}
}
func (m *MACCommand_DutyCycleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DutyCycleReq.Unmarshal(m, b)
}
func (m *MACCommand_DutyCycleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DutyCycleReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_DutyCycleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DutyCycleReq.Merge(m, src)
}
func (m *MACCommand_DutyCycleReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DutyCycleReq.Size(m)
}
func (m *MACCommand_DutyCycleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DutyCycleReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DutyCycleReq proto.InternalMessageInfo

func (m *MACCommand_DutyCycleReq) GetMaxDutyCycle() AggregatedDutyCycle {
	if m != nil {
		return m.MaxDutyCycle
	}
	return AggregatedDutyCycle_DUTY_CYCLE_1
}

type MACCommand_RxParamSetupReq struct {
	Rx2DataRateIndex     DataRateIndex  `protobuf:"varint,1,opt,name=rx2_data_rate_index,json=rx2DataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"rx2_data_rate_index,omitempty"`
	Rx1DataRateOffset    DataRateOffset `protobuf:"varint,2,opt,name=rx1_data_rate_offset,json=rx1DataRateOffset,proto3,enum=ttn.lorawan.v3.DataRateOffset" json:"rx1_data_rate_offset,omitempty"`
	Rx2Frequency         uint64         `protobuf:"varint,3,opt,name=rx2_frequency,json=rx2Frequency,proto3" json:"rx2_frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MACCommand_RxParamSetupReq) Reset()         { *m = MACCommand_RxParamSetupReq{} }
func (m *MACCommand_RxParamSetupReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RxParamSetupReq) ProtoMessage()    {}
func (*MACCommand_RxParamSetupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 6}
}
func (m *MACCommand_RxParamSetupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RxParamSetupReq.Unmarshal(m, b)
}
func (m *MACCommand_RxParamSetupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RxParamSetupReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_RxParamSetupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RxParamSetupReq.Merge(m, src)
}
func (m *MACCommand_RxParamSetupReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RxParamSetupReq.Size(m)
}
func (m *MACCommand_RxParamSetupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RxParamSetupReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RxParamSetupReq proto.InternalMessageInfo

func (m *MACCommand_RxParamSetupReq) GetRx2DataRateIndex() DataRateIndex {
	if m != nil {
		return m.Rx2DataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACCommand_RxParamSetupReq) GetRx1DataRateOffset() DataRateOffset {
	if m != nil {
		return m.Rx1DataRateOffset
	}
	return DataRateOffset_DATA_RATE_OFFSET_0
}

func (m *MACCommand_RxParamSetupReq) GetRx2Frequency() uint64 {
	if m != nil {
		return m.Rx2Frequency
	}
	return 0
}

type MACCommand_RxParamSetupAns struct {
	Rx2DataRateIndexAck  bool     `protobuf:"varint,1,opt,name=rx2_data_rate_index_ack,json=rx2DataRateIndexAck,proto3" json:"rx2_data_rate_index_ack,omitempty"`
	Rx1DataRateOffsetAck bool     `protobuf:"varint,2,opt,name=rx1_data_rate_offset_ack,json=rx1DataRateOffsetAck,proto3" json:"rx1_data_rate_offset_ack,omitempty"`
	Rx2FrequencyAck      bool     `protobuf:"varint,3,opt,name=rx2_frequency_ack,json=rx2FrequencyAck,proto3" json:"rx2_frequency_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_RxParamSetupAns) Reset()         { *m = MACCommand_RxParamSetupAns{} }
func (m *MACCommand_RxParamSetupAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RxParamSetupAns) ProtoMessage()    {}
func (*MACCommand_RxParamSetupAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 7}
}
func (m *MACCommand_RxParamSetupAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RxParamSetupAns.Unmarshal(m, b)
}
func (m *MACCommand_RxParamSetupAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RxParamSetupAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_RxParamSetupAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RxParamSetupAns.Merge(m, src)
}
func (m *MACCommand_RxParamSetupAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RxParamSetupAns.Size(m)
}
func (m *MACCommand_RxParamSetupAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RxParamSetupAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RxParamSetupAns proto.InternalMessageInfo

func (m *MACCommand_RxParamSetupAns) GetRx2DataRateIndexAck() bool {
	if m != nil {
		return m.Rx2DataRateIndexAck
	}
	return false
}

func (m *MACCommand_RxParamSetupAns) GetRx1DataRateOffsetAck() bool {
	if m != nil {
		return m.Rx1DataRateOffsetAck
	}
	return false
}

func (m *MACCommand_RxParamSetupAns) GetRx2FrequencyAck() bool {
	if m != nil {
		return m.Rx2FrequencyAck
	}
	return false
}

type MACCommand_DevStatusAns struct {
	// Device battery status.
	// 0 indicates that the device is connected to an external power source.
	// 1..254 indicates a battery level.
	// 255 indicates that the device was not able to measure the battery level.
	Battery uint32 `protobuf:"varint,1,opt,name=battery,proto3" json:"battery,omitempty"`
	// SNR of the last downlink (dB; [-32, +31]).
	Margin               int32    `protobuf:"varint,2,opt,name=margin,proto3" json:"margin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_DevStatusAns) Reset()         { *m = MACCommand_DevStatusAns{} }
func (m *MACCommand_DevStatusAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DevStatusAns) ProtoMessage()    {}
func (*MACCommand_DevStatusAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 8}
}
func (m *MACCommand_DevStatusAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DevStatusAns.Unmarshal(m, b)
}
func (m *MACCommand_DevStatusAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DevStatusAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_DevStatusAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DevStatusAns.Merge(m, src)
}
func (m *MACCommand_DevStatusAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DevStatusAns.Size(m)
}
func (m *MACCommand_DevStatusAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DevStatusAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DevStatusAns proto.InternalMessageInfo

func (m *MACCommand_DevStatusAns) GetBattery() uint32 {
	if m != nil {
		return m.Battery
	}
	return 0
}

func (m *MACCommand_DevStatusAns) GetMargin() int32 {
	if m != nil {
		return m.Margin
	}
	return 0
}

type MACCommand_NewChannelReq struct {
	ChannelIndex         uint32        `protobuf:"varint,1,opt,name=channel_index,json=channelIndex,proto3" json:"channel_index,omitempty"`
	Frequency            uint64        `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	MinDataRateIndex     DataRateIndex `protobuf:"varint,3,opt,name=min_data_rate_index,json=minDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"min_data_rate_index,omitempty"`
	MaxDataRateIndex     DataRateIndex `protobuf:"varint,4,opt,name=max_data_rate_index,json=maxDataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"max_data_rate_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MACCommand_NewChannelReq) Reset()         { *m = MACCommand_NewChannelReq{} }
func (m *MACCommand_NewChannelReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_NewChannelReq) ProtoMessage()    {}
func (*MACCommand_NewChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 9}
}
func (m *MACCommand_NewChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_NewChannelReq.Unmarshal(m, b)
}
func (m *MACCommand_NewChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_NewChannelReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_NewChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_NewChannelReq.Merge(m, src)
}
func (m *MACCommand_NewChannelReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_NewChannelReq.Size(m)
}
func (m *MACCommand_NewChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_NewChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_NewChannelReq proto.InternalMessageInfo

func (m *MACCommand_NewChannelReq) GetChannelIndex() uint32 {
	if m != nil {
		return m.ChannelIndex
	}
	return 0
}

func (m *MACCommand_NewChannelReq) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *MACCommand_NewChannelReq) GetMinDataRateIndex() DataRateIndex {
	if m != nil {
		return m.MinDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACCommand_NewChannelReq) GetMaxDataRateIndex() DataRateIndex {
	if m != nil {
		return m.MaxDataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

type MACCommand_NewChannelAns struct {
	FrequencyAck         bool     `protobuf:"varint,1,opt,name=frequency_ack,json=frequencyAck,proto3" json:"frequency_ack,omitempty"`
	DataRateAck          bool     `protobuf:"varint,2,opt,name=data_rate_ack,json=dataRateAck,proto3" json:"data_rate_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_NewChannelAns) Reset()         { *m = MACCommand_NewChannelAns{} }
func (m *MACCommand_NewChannelAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_NewChannelAns) ProtoMessage()    {}
func (*MACCommand_NewChannelAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 10}
}
func (m *MACCommand_NewChannelAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_NewChannelAns.Unmarshal(m, b)
}
func (m *MACCommand_NewChannelAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_NewChannelAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_NewChannelAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_NewChannelAns.Merge(m, src)
}
func (m *MACCommand_NewChannelAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_NewChannelAns.Size(m)
}
func (m *MACCommand_NewChannelAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_NewChannelAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_NewChannelAns proto.InternalMessageInfo

func (m *MACCommand_NewChannelAns) GetFrequencyAck() bool {
	if m != nil {
		return m.FrequencyAck
	}
	return false
}

func (m *MACCommand_NewChannelAns) GetDataRateAck() bool {
	if m != nil {
		return m.DataRateAck
	}
	return false
}

type MACCommand_DLChannelReq struct {
	ChannelIndex         uint32   `protobuf:"varint,1,opt,name=channel_index,json=channelIndex,proto3" json:"channel_index,omitempty"`
	Frequency            uint64   `protobuf:"varint,2,opt,name=frequency,proto3" json:"frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_DLChannelReq) Reset()         { *m = MACCommand_DLChannelReq{} }
func (m *MACCommand_DLChannelReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DLChannelReq) ProtoMessage()    {}
func (*MACCommand_DLChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 11}
}
func (m *MACCommand_DLChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DLChannelReq.Unmarshal(m, b)
}
func (m *MACCommand_DLChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DLChannelReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_DLChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DLChannelReq.Merge(m, src)
}
func (m *MACCommand_DLChannelReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DLChannelReq.Size(m)
}
func (m *MACCommand_DLChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DLChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DLChannelReq proto.InternalMessageInfo

func (m *MACCommand_DLChannelReq) GetChannelIndex() uint32 {
	if m != nil {
		return m.ChannelIndex
	}
	return 0
}

func (m *MACCommand_DLChannelReq) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

type MACCommand_DLChannelAns struct {
	ChannelIndexAck      bool     `protobuf:"varint,1,opt,name=channel_index_ack,json=channelIndexAck,proto3" json:"channel_index_ack,omitempty"`
	FrequencyAck         bool     `protobuf:"varint,2,opt,name=frequency_ack,json=frequencyAck,proto3" json:"frequency_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_DLChannelAns) Reset()         { *m = MACCommand_DLChannelAns{} }
func (m *MACCommand_DLChannelAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DLChannelAns) ProtoMessage()    {}
func (*MACCommand_DLChannelAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 12}
}
func (m *MACCommand_DLChannelAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DLChannelAns.Unmarshal(m, b)
}
func (m *MACCommand_DLChannelAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DLChannelAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_DLChannelAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DLChannelAns.Merge(m, src)
}
func (m *MACCommand_DLChannelAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DLChannelAns.Size(m)
}
func (m *MACCommand_DLChannelAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DLChannelAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DLChannelAns proto.InternalMessageInfo

func (m *MACCommand_DLChannelAns) GetChannelIndexAck() bool {
	if m != nil {
		return m.ChannelIndexAck
	}
	return false
}

func (m *MACCommand_DLChannelAns) GetFrequencyAck() bool {
	if m != nil {
		return m.FrequencyAck
	}
	return false
}

type MACCommand_RxTimingSetupReq struct {
	Delay                RxDelay  `protobuf:"varint,1,opt,name=delay,proto3,enum=ttn.lorawan.v3.RxDelay" json:"delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_RxTimingSetupReq) Reset()         { *m = MACCommand_RxTimingSetupReq{} }
func (m *MACCommand_RxTimingSetupReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RxTimingSetupReq) ProtoMessage()    {}
func (*MACCommand_RxTimingSetupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 13}
}
func (m *MACCommand_RxTimingSetupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RxTimingSetupReq.Unmarshal(m, b)
}
func (m *MACCommand_RxTimingSetupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RxTimingSetupReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_RxTimingSetupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RxTimingSetupReq.Merge(m, src)
}
func (m *MACCommand_RxTimingSetupReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RxTimingSetupReq.Size(m)
}
func (m *MACCommand_RxTimingSetupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RxTimingSetupReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RxTimingSetupReq proto.InternalMessageInfo

func (m *MACCommand_RxTimingSetupReq) GetDelay() RxDelay {
	if m != nil {
		return m.Delay
	}
	return RxDelay_RX_DELAY_0
}

type MACCommand_TxParamSetupReq struct {
	// Indicates the maximum EIRP value in dBm, indexed by the following vector:
	// [ 8 10 12 13 14 16 18 20 21 24 26 27 29 30 33 36 ]
	MaxEirpIndex         DeviceEIRP `protobuf:"varint,1,opt,name=max_eirp_index,json=maxEirpIndex,proto3,enum=ttn.lorawan.v3.DeviceEIRP" json:"max_eirp_index,omitempty"`
	UplinkDwellTime      bool       `protobuf:"varint,2,opt,name=uplink_dwell_time,json=uplinkDwellTime,proto3" json:"uplink_dwell_time,omitempty"`
	DownlinkDwellTime    bool       `protobuf:"varint,3,opt,name=downlink_dwell_time,json=downlinkDwellTime,proto3" json:"downlink_dwell_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MACCommand_TxParamSetupReq) Reset()         { *m = MACCommand_TxParamSetupReq{} }
func (m *MACCommand_TxParamSetupReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_TxParamSetupReq) ProtoMessage()    {}
func (*MACCommand_TxParamSetupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 14}
}
func (m *MACCommand_TxParamSetupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_TxParamSetupReq.Unmarshal(m, b)
}
func (m *MACCommand_TxParamSetupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_TxParamSetupReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_TxParamSetupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_TxParamSetupReq.Merge(m, src)
}
func (m *MACCommand_TxParamSetupReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_TxParamSetupReq.Size(m)
}
func (m *MACCommand_TxParamSetupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_TxParamSetupReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_TxParamSetupReq proto.InternalMessageInfo

func (m *MACCommand_TxParamSetupReq) GetMaxEirpIndex() DeviceEIRP {
	if m != nil {
		return m.MaxEirpIndex
	}
	return DeviceEIRP_DEVICE_EIRP_8
}

func (m *MACCommand_TxParamSetupReq) GetUplinkDwellTime() bool {
	if m != nil {
		return m.UplinkDwellTime
	}
	return false
}

func (m *MACCommand_TxParamSetupReq) GetDownlinkDwellTime() bool {
	if m != nil {
		return m.DownlinkDwellTime
	}
	return false
}

type MACCommand_RekeyInd struct {
	MinorVersion         Minor    `protobuf:"varint,1,opt,name=minor_version,json=minorVersion,proto3,enum=ttn.lorawan.v3.Minor" json:"minor_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_RekeyInd) Reset()         { *m = MACCommand_RekeyInd{} }
func (m *MACCommand_RekeyInd) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RekeyInd) ProtoMessage()    {}
func (*MACCommand_RekeyInd) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 15}
}
func (m *MACCommand_RekeyInd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RekeyInd.Unmarshal(m, b)
}
func (m *MACCommand_RekeyInd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RekeyInd.Marshal(b, m, deterministic)
}
func (m *MACCommand_RekeyInd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RekeyInd.Merge(m, src)
}
func (m *MACCommand_RekeyInd) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RekeyInd.Size(m)
}
func (m *MACCommand_RekeyInd) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RekeyInd.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RekeyInd proto.InternalMessageInfo

func (m *MACCommand_RekeyInd) GetMinorVersion() Minor {
	if m != nil {
		return m.MinorVersion
	}
	return Minor_MINOR_RFU_0
}

type MACCommand_RekeyConf struct {
	MinorVersion         Minor    `protobuf:"varint,1,opt,name=minor_version,json=minorVersion,proto3,enum=ttn.lorawan.v3.Minor" json:"minor_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_RekeyConf) Reset()         { *m = MACCommand_RekeyConf{} }
func (m *MACCommand_RekeyConf) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RekeyConf) ProtoMessage()    {}
func (*MACCommand_RekeyConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 16}
}
func (m *MACCommand_RekeyConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RekeyConf.Unmarshal(m, b)
}
func (m *MACCommand_RekeyConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RekeyConf.Marshal(b, m, deterministic)
}
func (m *MACCommand_RekeyConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RekeyConf.Merge(m, src)
}
func (m *MACCommand_RekeyConf) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RekeyConf.Size(m)
}
func (m *MACCommand_RekeyConf) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RekeyConf.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RekeyConf proto.InternalMessageInfo

func (m *MACCommand_RekeyConf) GetMinorVersion() Minor {
	if m != nil {
		return m.MinorVersion
	}
	return Minor_MINOR_RFU_0
}

type MACCommand_ADRParamSetupReq struct {
	// Exponent e that configures the ADR_ACK_LIMIT = 2^e messages.
	AdrAckLimitExponent ADRAckLimitExponent `protobuf:"varint,1,opt,name=adr_ack_limit_exponent,json=adrAckLimitExponent,proto3,enum=ttn.lorawan.v3.ADRAckLimitExponent" json:"adr_ack_limit_exponent,omitempty"`
	// Exponent e that configures the ADR_ACK_DELAY = 2^e messages.
	AdrAckDelayExponent  ADRAckDelayExponent `protobuf:"varint,2,opt,name=adr_ack_delay_exponent,json=adrAckDelayExponent,proto3,enum=ttn.lorawan.v3.ADRAckDelayExponent" json:"adr_ack_delay_exponent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MACCommand_ADRParamSetupReq) Reset()         { *m = MACCommand_ADRParamSetupReq{} }
func (m *MACCommand_ADRParamSetupReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_ADRParamSetupReq) ProtoMessage()    {}
func (*MACCommand_ADRParamSetupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 17}
}
func (m *MACCommand_ADRParamSetupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_ADRParamSetupReq.Unmarshal(m, b)
}
func (m *MACCommand_ADRParamSetupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_ADRParamSetupReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_ADRParamSetupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_ADRParamSetupReq.Merge(m, src)
}
func (m *MACCommand_ADRParamSetupReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_ADRParamSetupReq.Size(m)
}
func (m *MACCommand_ADRParamSetupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_ADRParamSetupReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_ADRParamSetupReq proto.InternalMessageInfo

func (m *MACCommand_ADRParamSetupReq) GetAdrAckLimitExponent() ADRAckLimitExponent {
	if m != nil {
		return m.AdrAckLimitExponent
	}
	return ADRAckLimitExponent_ADR_ACK_LIMIT_1
}

func (m *MACCommand_ADRParamSetupReq) GetAdrAckDelayExponent() ADRAckDelayExponent {
	if m != nil {
		return m.AdrAckDelayExponent
	}
	return ADRAckDelayExponent_ADR_ACK_DELAY_1
}

type MACCommand_DeviceTimeAns struct {
	Time                 *types.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MACCommand_DeviceTimeAns) Reset()         { *m = MACCommand_DeviceTimeAns{} }
func (m *MACCommand_DeviceTimeAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DeviceTimeAns) ProtoMessage()    {}
func (*MACCommand_DeviceTimeAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 18}
}
func (m *MACCommand_DeviceTimeAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DeviceTimeAns.Unmarshal(m, b)
}
func (m *MACCommand_DeviceTimeAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DeviceTimeAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_DeviceTimeAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DeviceTimeAns.Merge(m, src)
}
func (m *MACCommand_DeviceTimeAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DeviceTimeAns.Size(m)
}
func (m *MACCommand_DeviceTimeAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DeviceTimeAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DeviceTimeAns proto.InternalMessageInfo

func (m *MACCommand_DeviceTimeAns) GetTime() *types.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type MACCommand_ForceRejoinReq struct {
	RejoinType    RejoinRequestType `protobuf:"varint,1,opt,name=rejoin_type,json=rejoinType,proto3,enum=ttn.lorawan.v3.RejoinRequestType" json:"rejoin_type,omitempty"`
	DataRateIndex DataRateIndex     `protobuf:"varint,2,opt,name=data_rate_index,json=dataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"data_rate_index,omitempty"`
	MaxRetries    uint32            `protobuf:"varint,3,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	// Exponent e that configures the rejoin period = 32 * 2^e + rand(0,32) seconds.
	PeriodExponent       RejoinPeriodExponent `protobuf:"varint,4,opt,name=period_exponent,json=periodExponent,proto3,enum=ttn.lorawan.v3.RejoinPeriodExponent" json:"period_exponent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MACCommand_ForceRejoinReq) Reset()         { *m = MACCommand_ForceRejoinReq{} }
func (m *MACCommand_ForceRejoinReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_ForceRejoinReq) ProtoMessage()    {}
func (*MACCommand_ForceRejoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 19}
}
func (m *MACCommand_ForceRejoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_ForceRejoinReq.Unmarshal(m, b)
}
func (m *MACCommand_ForceRejoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_ForceRejoinReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_ForceRejoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_ForceRejoinReq.Merge(m, src)
}
func (m *MACCommand_ForceRejoinReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_ForceRejoinReq.Size(m)
}
func (m *MACCommand_ForceRejoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_ForceRejoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_ForceRejoinReq proto.InternalMessageInfo

func (m *MACCommand_ForceRejoinReq) GetRejoinType() RejoinRequestType {
	if m != nil {
		return m.RejoinType
	}
	return RejoinRequestType_CONTEXT
}

func (m *MACCommand_ForceRejoinReq) GetDataRateIndex() DataRateIndex {
	if m != nil {
		return m.DataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

func (m *MACCommand_ForceRejoinReq) GetMaxRetries() uint32 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

func (m *MACCommand_ForceRejoinReq) GetPeriodExponent() RejoinPeriodExponent {
	if m != nil {
		return m.PeriodExponent
	}
	return RejoinPeriodExponent_REJOIN_PERIOD_0
}

type MACCommand_RejoinParamSetupReq struct {
	// Exponent e that configures the rejoin counter = 2^(e+4) messages.
	MaxCountExponent RejoinCountExponent `protobuf:"varint,1,opt,name=max_count_exponent,json=maxCountExponent,proto3,enum=ttn.lorawan.v3.RejoinCountExponent" json:"max_count_exponent,omitempty"`
	// Exponent e that configures the rejoin timer = 2^(e+10) seconds.
	MaxTimeExponent      RejoinTimeExponent `protobuf:"varint,2,opt,name=max_time_exponent,json=maxTimeExponent,proto3,enum=ttn.lorawan.v3.RejoinTimeExponent" json:"max_time_exponent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MACCommand_RejoinParamSetupReq) Reset()         { *m = MACCommand_RejoinParamSetupReq{} }
func (m *MACCommand_RejoinParamSetupReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RejoinParamSetupReq) ProtoMessage()    {}
func (*MACCommand_RejoinParamSetupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 20}
}
func (m *MACCommand_RejoinParamSetupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RejoinParamSetupReq.Unmarshal(m, b)
}
func (m *MACCommand_RejoinParamSetupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RejoinParamSetupReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_RejoinParamSetupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RejoinParamSetupReq.Merge(m, src)
}
func (m *MACCommand_RejoinParamSetupReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RejoinParamSetupReq.Size(m)
}
func (m *MACCommand_RejoinParamSetupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RejoinParamSetupReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RejoinParamSetupReq proto.InternalMessageInfo

func (m *MACCommand_RejoinParamSetupReq) GetMaxCountExponent() RejoinCountExponent {
	if m != nil {
		return m.MaxCountExponent
	}
	return RejoinCountExponent_REJOIN_COUNT_16
}

func (m *MACCommand_RejoinParamSetupReq) GetMaxTimeExponent() RejoinTimeExponent {
	if m != nil {
		return m.MaxTimeExponent
	}
	return RejoinTimeExponent_REJOIN_TIME_0
}

type MACCommand_RejoinParamSetupAns struct {
	MaxTimeExponentAck   bool     `protobuf:"varint,1,opt,name=max_time_exponent_ack,json=maxTimeExponentAck,proto3" json:"max_time_exponent_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_RejoinParamSetupAns) Reset()         { *m = MACCommand_RejoinParamSetupAns{} }
func (m *MACCommand_RejoinParamSetupAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_RejoinParamSetupAns) ProtoMessage()    {}
func (*MACCommand_RejoinParamSetupAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 21}
}
func (m *MACCommand_RejoinParamSetupAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_RejoinParamSetupAns.Unmarshal(m, b)
}
func (m *MACCommand_RejoinParamSetupAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_RejoinParamSetupAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_RejoinParamSetupAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_RejoinParamSetupAns.Merge(m, src)
}
func (m *MACCommand_RejoinParamSetupAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_RejoinParamSetupAns.Size(m)
}
func (m *MACCommand_RejoinParamSetupAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_RejoinParamSetupAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_RejoinParamSetupAns proto.InternalMessageInfo

func (m *MACCommand_RejoinParamSetupAns) GetMaxTimeExponentAck() bool {
	if m != nil {
		return m.MaxTimeExponentAck
	}
	return false
}

type MACCommand_PingSlotInfoReq struct {
	Period               PingSlotPeriod `protobuf:"varint,1,opt,name=period,proto3,enum=ttn.lorawan.v3.PingSlotPeriod" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MACCommand_PingSlotInfoReq) Reset()         { *m = MACCommand_PingSlotInfoReq{} }
func (m *MACCommand_PingSlotInfoReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_PingSlotInfoReq) ProtoMessage()    {}
func (*MACCommand_PingSlotInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 22}
}
func (m *MACCommand_PingSlotInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_PingSlotInfoReq.Unmarshal(m, b)
}
func (m *MACCommand_PingSlotInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_PingSlotInfoReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_PingSlotInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_PingSlotInfoReq.Merge(m, src)
}
func (m *MACCommand_PingSlotInfoReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_PingSlotInfoReq.Size(m)
}
func (m *MACCommand_PingSlotInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_PingSlotInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_PingSlotInfoReq proto.InternalMessageInfo

func (m *MACCommand_PingSlotInfoReq) GetPeriod() PingSlotPeriod {
	if m != nil {
		return m.Period
	}
	return PingSlotPeriod_PING_EVERY_1S
}

type MACCommand_PingSlotChannelReq struct {
	Frequency            uint64        `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	DataRateIndex        DataRateIndex `protobuf:"varint,2,opt,name=data_rate_index,json=dataRateIndex,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"data_rate_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MACCommand_PingSlotChannelReq) Reset()         { *m = MACCommand_PingSlotChannelReq{} }
func (m *MACCommand_PingSlotChannelReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_PingSlotChannelReq) ProtoMessage()    {}
func (*MACCommand_PingSlotChannelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 23}
}
func (m *MACCommand_PingSlotChannelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_PingSlotChannelReq.Unmarshal(m, b)
}
func (m *MACCommand_PingSlotChannelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_PingSlotChannelReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_PingSlotChannelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_PingSlotChannelReq.Merge(m, src)
}
func (m *MACCommand_PingSlotChannelReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_PingSlotChannelReq.Size(m)
}
func (m *MACCommand_PingSlotChannelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_PingSlotChannelReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_PingSlotChannelReq proto.InternalMessageInfo

func (m *MACCommand_PingSlotChannelReq) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *MACCommand_PingSlotChannelReq) GetDataRateIndex() DataRateIndex {
	if m != nil {
		return m.DataRateIndex
	}
	return DataRateIndex_DATA_RATE_0
}

type MACCommand_PingSlotChannelAns struct {
	FrequencyAck         bool     `protobuf:"varint,1,opt,name=frequency_ack,json=frequencyAck,proto3" json:"frequency_ack,omitempty"`
	DataRateIndexAck     bool     `protobuf:"varint,2,opt,name=data_rate_index_ack,json=dataRateIndexAck,proto3" json:"data_rate_index_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_PingSlotChannelAns) Reset()         { *m = MACCommand_PingSlotChannelAns{} }
func (m *MACCommand_PingSlotChannelAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_PingSlotChannelAns) ProtoMessage()    {}
func (*MACCommand_PingSlotChannelAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 24}
}
func (m *MACCommand_PingSlotChannelAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_PingSlotChannelAns.Unmarshal(m, b)
}
func (m *MACCommand_PingSlotChannelAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_PingSlotChannelAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_PingSlotChannelAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_PingSlotChannelAns.Merge(m, src)
}
func (m *MACCommand_PingSlotChannelAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_PingSlotChannelAns.Size(m)
}
func (m *MACCommand_PingSlotChannelAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_PingSlotChannelAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_PingSlotChannelAns proto.InternalMessageInfo

func (m *MACCommand_PingSlotChannelAns) GetFrequencyAck() bool {
	if m != nil {
		return m.FrequencyAck
	}
	return false
}

func (m *MACCommand_PingSlotChannelAns) GetDataRateIndexAck() bool {
	if m != nil {
		return m.DataRateIndexAck
	}
	return false
}

type MACCommand_BeaconTimingAns struct {
	Delay                uint32   `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	ChannelIndex         uint32   `protobuf:"varint,2,opt,name=channel_index,json=channelIndex,proto3" json:"channel_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_BeaconTimingAns) Reset()         { *m = MACCommand_BeaconTimingAns{} }
func (m *MACCommand_BeaconTimingAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_BeaconTimingAns) ProtoMessage()    {}
func (*MACCommand_BeaconTimingAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 25}
}
func (m *MACCommand_BeaconTimingAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_BeaconTimingAns.Unmarshal(m, b)
}
func (m *MACCommand_BeaconTimingAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_BeaconTimingAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_BeaconTimingAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_BeaconTimingAns.Merge(m, src)
}
func (m *MACCommand_BeaconTimingAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_BeaconTimingAns.Size(m)
}
func (m *MACCommand_BeaconTimingAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_BeaconTimingAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_BeaconTimingAns proto.InternalMessageInfo

func (m *MACCommand_BeaconTimingAns) GetDelay() uint32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *MACCommand_BeaconTimingAns) GetChannelIndex() uint32 {
	if m != nil {
		return m.ChannelIndex
	}
	return 0
}

type MACCommand_BeaconFreqReq struct {
	Frequency            uint64   `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_BeaconFreqReq) Reset()         { *m = MACCommand_BeaconFreqReq{} }
func (m *MACCommand_BeaconFreqReq) String() string { return proto.CompactTextString(m) }
func (*MACCommand_BeaconFreqReq) ProtoMessage()    {}
func (*MACCommand_BeaconFreqReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 26}
}
func (m *MACCommand_BeaconFreqReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_BeaconFreqReq.Unmarshal(m, b)
}
func (m *MACCommand_BeaconFreqReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_BeaconFreqReq.Marshal(b, m, deterministic)
}
func (m *MACCommand_BeaconFreqReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_BeaconFreqReq.Merge(m, src)
}
func (m *MACCommand_BeaconFreqReq) XXX_Size() int {
	return xxx_messageInfo_MACCommand_BeaconFreqReq.Size(m)
}
func (m *MACCommand_BeaconFreqReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_BeaconFreqReq.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_BeaconFreqReq proto.InternalMessageInfo

func (m *MACCommand_BeaconFreqReq) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

type MACCommand_BeaconFreqAns struct {
	FrequencyAck         bool     `protobuf:"varint,1,opt,name=frequency_ack,json=frequencyAck,proto3" json:"frequency_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_BeaconFreqAns) Reset()         { *m = MACCommand_BeaconFreqAns{} }
func (m *MACCommand_BeaconFreqAns) String() string { return proto.CompactTextString(m) }
func (*MACCommand_BeaconFreqAns) ProtoMessage()    {}
func (*MACCommand_BeaconFreqAns) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 27}
}
func (m *MACCommand_BeaconFreqAns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_BeaconFreqAns.Unmarshal(m, b)
}
func (m *MACCommand_BeaconFreqAns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_BeaconFreqAns.Marshal(b, m, deterministic)
}
func (m *MACCommand_BeaconFreqAns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_BeaconFreqAns.Merge(m, src)
}
func (m *MACCommand_BeaconFreqAns) XXX_Size() int {
	return xxx_messageInfo_MACCommand_BeaconFreqAns.Size(m)
}
func (m *MACCommand_BeaconFreqAns) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_BeaconFreqAns.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_BeaconFreqAns proto.InternalMessageInfo

func (m *MACCommand_BeaconFreqAns) GetFrequencyAck() bool {
	if m != nil {
		return m.FrequencyAck
	}
	return false
}

type MACCommand_DeviceModeInd struct {
	Class                Class    `protobuf:"varint,1,opt,name=class,proto3,enum=ttn.lorawan.v3.Class" json:"class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_DeviceModeInd) Reset()         { *m = MACCommand_DeviceModeInd{} }
func (m *MACCommand_DeviceModeInd) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DeviceModeInd) ProtoMessage()    {}
func (*MACCommand_DeviceModeInd) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 28}
}
func (m *MACCommand_DeviceModeInd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DeviceModeInd.Unmarshal(m, b)
}
func (m *MACCommand_DeviceModeInd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DeviceModeInd.Marshal(b, m, deterministic)
}
func (m *MACCommand_DeviceModeInd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DeviceModeInd.Merge(m, src)
}
func (m *MACCommand_DeviceModeInd) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DeviceModeInd.Size(m)
}
func (m *MACCommand_DeviceModeInd) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DeviceModeInd.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DeviceModeInd proto.InternalMessageInfo

func (m *MACCommand_DeviceModeInd) GetClass() Class {
	if m != nil {
		return m.Class
	}
	return Class_CLASS_A
}

type MACCommand_DeviceModeConf struct {
	Class                Class    `protobuf:"varint,1,opt,name=class,proto3,enum=ttn.lorawan.v3.Class" json:"class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MACCommand_DeviceModeConf) Reset()         { *m = MACCommand_DeviceModeConf{} }
func (m *MACCommand_DeviceModeConf) String() string { return proto.CompactTextString(m) }
func (*MACCommand_DeviceModeConf) ProtoMessage()    {}
func (*MACCommand_DeviceModeConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{19, 29}
}
func (m *MACCommand_DeviceModeConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MACCommand_DeviceModeConf.Unmarshal(m, b)
}
func (m *MACCommand_DeviceModeConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MACCommand_DeviceModeConf.Marshal(b, m, deterministic)
}
func (m *MACCommand_DeviceModeConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MACCommand_DeviceModeConf.Merge(m, src)
}
func (m *MACCommand_DeviceModeConf) XXX_Size() int {
	return xxx_messageInfo_MACCommand_DeviceModeConf.Size(m)
}
func (m *MACCommand_DeviceModeConf) XXX_DiscardUnknown() {
	xxx_messageInfo_MACCommand_DeviceModeConf.DiscardUnknown(m)
}

var xxx_messageInfo_MACCommand_DeviceModeConf proto.InternalMessageInfo

func (m *MACCommand_DeviceModeConf) GetClass() Class {
	if m != nil {
		return m.Class
	}
	return Class_CLASS_A
}

type FrequencyValue struct {
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrequencyValue) Reset()         { *m = FrequencyValue{} }
func (m *FrequencyValue) String() string { return proto.CompactTextString(m) }
func (*FrequencyValue) ProtoMessage()    {}
func (*FrequencyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{20}
}
func (m *FrequencyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequencyValue.Unmarshal(m, b)
}
func (m *FrequencyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequencyValue.Marshal(b, m, deterministic)
}
func (m *FrequencyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequencyValue.Merge(m, src)
}
func (m *FrequencyValue) XXX_Size() int {
	return xxx_messageInfo_FrequencyValue.Size(m)
}
func (m *FrequencyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequencyValue.DiscardUnknown(m)
}

var xxx_messageInfo_FrequencyValue proto.InternalMessageInfo

func (m *FrequencyValue) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DataRateOffsetValue struct {
	Value                DataRateOffset `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.DataRateOffset" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DataRateOffsetValue) Reset()         { *m = DataRateOffsetValue{} }
func (m *DataRateOffsetValue) String() string { return proto.CompactTextString(m) }
func (*DataRateOffsetValue) ProtoMessage()    {}
func (*DataRateOffsetValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{21}
}
func (m *DataRateOffsetValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRateOffsetValue.Unmarshal(m, b)
}
func (m *DataRateOffsetValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRateOffsetValue.Marshal(b, m, deterministic)
}
func (m *DataRateOffsetValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRateOffsetValue.Merge(m, src)
}
func (m *DataRateOffsetValue) XXX_Size() int {
	return xxx_messageInfo_DataRateOffsetValue.Size(m)
}
func (m *DataRateOffsetValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRateOffsetValue.DiscardUnknown(m)
}

var xxx_messageInfo_DataRateOffsetValue proto.InternalMessageInfo

func (m *DataRateOffsetValue) GetValue() DataRateOffset {
	if m != nil {
		return m.Value
	}
	return DataRateOffset_DATA_RATE_OFFSET_0
}

type DataRateIndexValue struct {
	Value                DataRateIndex `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.DataRateIndex" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DataRateIndexValue) Reset()         { *m = DataRateIndexValue{} }
func (m *DataRateIndexValue) String() string { return proto.CompactTextString(m) }
func (*DataRateIndexValue) ProtoMessage()    {}
func (*DataRateIndexValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{22}
}
func (m *DataRateIndexValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRateIndexValue.Unmarshal(m, b)
}
func (m *DataRateIndexValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRateIndexValue.Marshal(b, m, deterministic)
}
func (m *DataRateIndexValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRateIndexValue.Merge(m, src)
}
func (m *DataRateIndexValue) XXX_Size() int {
	return xxx_messageInfo_DataRateIndexValue.Size(m)
}
func (m *DataRateIndexValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRateIndexValue.DiscardUnknown(m)
}

var xxx_messageInfo_DataRateIndexValue proto.InternalMessageInfo

func (m *DataRateIndexValue) GetValue() DataRateIndex {
	if m != nil {
		return m.Value
	}
	return DataRateIndex_DATA_RATE_0
}

type PingSlotPeriodValue struct {
	Value                PingSlotPeriod `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.PingSlotPeriod" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PingSlotPeriodValue) Reset()         { *m = PingSlotPeriodValue{} }
func (m *PingSlotPeriodValue) String() string { return proto.CompactTextString(m) }
func (*PingSlotPeriodValue) ProtoMessage()    {}
func (*PingSlotPeriodValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{23}
}
func (m *PingSlotPeriodValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingSlotPeriodValue.Unmarshal(m, b)
}
func (m *PingSlotPeriodValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingSlotPeriodValue.Marshal(b, m, deterministic)
}
func (m *PingSlotPeriodValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingSlotPeriodValue.Merge(m, src)
}
func (m *PingSlotPeriodValue) XXX_Size() int {
	return xxx_messageInfo_PingSlotPeriodValue.Size(m)
}
func (m *PingSlotPeriodValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PingSlotPeriodValue.DiscardUnknown(m)
}

var xxx_messageInfo_PingSlotPeriodValue proto.InternalMessageInfo

func (m *PingSlotPeriodValue) GetValue() PingSlotPeriod {
	if m != nil {
		return m.Value
	}
	return PingSlotPeriod_PING_EVERY_1S
}

type AggregatedDutyCycleValue struct {
	Value                AggregatedDutyCycle `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.AggregatedDutyCycle" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AggregatedDutyCycleValue) Reset()         { *m = AggregatedDutyCycleValue{} }
func (m *AggregatedDutyCycleValue) String() string { return proto.CompactTextString(m) }
func (*AggregatedDutyCycleValue) ProtoMessage()    {}
func (*AggregatedDutyCycleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{24}
}
func (m *AggregatedDutyCycleValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedDutyCycleValue.Unmarshal(m, b)
}
func (m *AggregatedDutyCycleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedDutyCycleValue.Marshal(b, m, deterministic)
}
func (m *AggregatedDutyCycleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedDutyCycleValue.Merge(m, src)
}
func (m *AggregatedDutyCycleValue) XXX_Size() int {
	return xxx_messageInfo_AggregatedDutyCycleValue.Size(m)
}
func (m *AggregatedDutyCycleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedDutyCycleValue.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedDutyCycleValue proto.InternalMessageInfo

func (m *AggregatedDutyCycleValue) GetValue() AggregatedDutyCycle {
	if m != nil {
		return m.Value
	}
	return AggregatedDutyCycle_DUTY_CYCLE_1
}

type RxDelayValue struct {
	Value                RxDelay  `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.RxDelay" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RxDelayValue) Reset()         { *m = RxDelayValue{} }
func (m *RxDelayValue) String() string { return proto.CompactTextString(m) }
func (*RxDelayValue) ProtoMessage()    {}
func (*RxDelayValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{25}
}
func (m *RxDelayValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RxDelayValue.Unmarshal(m, b)
}
func (m *RxDelayValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RxDelayValue.Marshal(b, m, deterministic)
}
func (m *RxDelayValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RxDelayValue.Merge(m, src)
}
func (m *RxDelayValue) XXX_Size() int {
	return xxx_messageInfo_RxDelayValue.Size(m)
}
func (m *RxDelayValue) XXX_DiscardUnknown() {
	xxx_messageInfo_RxDelayValue.DiscardUnknown(m)
}

var xxx_messageInfo_RxDelayValue proto.InternalMessageInfo

func (m *RxDelayValue) GetValue() RxDelay {
	if m != nil {
		return m.Value
	}
	return RxDelay_RX_DELAY_0
}

type ADRAckLimitExponentValue struct {
	Value                ADRAckLimitExponent `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.ADRAckLimitExponent" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ADRAckLimitExponentValue) Reset()         { *m = ADRAckLimitExponentValue{} }
func (m *ADRAckLimitExponentValue) String() string { return proto.CompactTextString(m) }
func (*ADRAckLimitExponentValue) ProtoMessage()    {}
func (*ADRAckLimitExponentValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{26}
}
func (m *ADRAckLimitExponentValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRAckLimitExponentValue.Unmarshal(m, b)
}
func (m *ADRAckLimitExponentValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRAckLimitExponentValue.Marshal(b, m, deterministic)
}
func (m *ADRAckLimitExponentValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRAckLimitExponentValue.Merge(m, src)
}
func (m *ADRAckLimitExponentValue) XXX_Size() int {
	return xxx_messageInfo_ADRAckLimitExponentValue.Size(m)
}
func (m *ADRAckLimitExponentValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRAckLimitExponentValue.DiscardUnknown(m)
}

var xxx_messageInfo_ADRAckLimitExponentValue proto.InternalMessageInfo

func (m *ADRAckLimitExponentValue) GetValue() ADRAckLimitExponent {
	if m != nil {
		return m.Value
	}
	return ADRAckLimitExponent_ADR_ACK_LIMIT_1
}

type ADRAckDelayExponentValue struct {
	Value                ADRAckDelayExponent `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.ADRAckDelayExponent" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ADRAckDelayExponentValue) Reset()         { *m = ADRAckDelayExponentValue{} }
func (m *ADRAckDelayExponentValue) String() string { return proto.CompactTextString(m) }
func (*ADRAckDelayExponentValue) ProtoMessage()    {}
func (*ADRAckDelayExponentValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{27}
}
func (m *ADRAckDelayExponentValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRAckDelayExponentValue.Unmarshal(m, b)
}
func (m *ADRAckDelayExponentValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRAckDelayExponentValue.Marshal(b, m, deterministic)
}
func (m *ADRAckDelayExponentValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRAckDelayExponentValue.Merge(m, src)
}
func (m *ADRAckDelayExponentValue) XXX_Size() int {
	return xxx_messageInfo_ADRAckDelayExponentValue.Size(m)
}
func (m *ADRAckDelayExponentValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRAckDelayExponentValue.DiscardUnknown(m)
}

var xxx_messageInfo_ADRAckDelayExponentValue proto.InternalMessageInfo

func (m *ADRAckDelayExponentValue) GetValue() ADRAckDelayExponent {
	if m != nil {
		return m.Value
	}
	return ADRAckDelayExponent_ADR_ACK_DELAY_1
}

type DeviceEIRPValue struct {
	Value                DeviceEIRP `protobuf:"varint,1,opt,name=value,proto3,enum=ttn.lorawan.v3.DeviceEIRP" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeviceEIRPValue) Reset()         { *m = DeviceEIRPValue{} }
func (m *DeviceEIRPValue) String() string { return proto.CompactTextString(m) }
func (*DeviceEIRPValue) ProtoMessage()    {}
func (*DeviceEIRPValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2084d1d5a227b67e, []int{28}
}
func (m *DeviceEIRPValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceEIRPValue.Unmarshal(m, b)
}
func (m *DeviceEIRPValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceEIRPValue.Marshal(b, m, deterministic)
}
func (m *DeviceEIRPValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceEIRPValue.Merge(m, src)
}
func (m *DeviceEIRPValue) XXX_Size() int {
	return xxx_messageInfo_DeviceEIRPValue.Size(m)
}
func (m *DeviceEIRPValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceEIRPValue.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceEIRPValue proto.InternalMessageInfo

func (m *DeviceEIRPValue) GetValue() DeviceEIRP {
	if m != nil {
		return m.Value
	}
	return DeviceEIRP_DEVICE_EIRP_8
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.MType", MType_name, MType_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.MType", MType_name, MType_value)
	proto.RegisterEnum("ttn.lorawan.v3.Major", Major_name, Major_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.Major", Major_name, Major_value)
	proto.RegisterEnum("ttn.lorawan.v3.MACVersion", MACVersion_name, MACVersion_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.MACVersion", MACVersion_name, MACVersion_value)
	proto.RegisterEnum("ttn.lorawan.v3.PHYVersion", PHYVersion_name, PHYVersion_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.PHYVersion", PHYVersion_name, PHYVersion_value)
	proto.RegisterEnum("ttn.lorawan.v3.DataRateIndex", DataRateIndex_name, DataRateIndex_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.DataRateIndex", DataRateIndex_name, DataRateIndex_value)
	proto.RegisterEnum("ttn.lorawan.v3.DataRateOffset", DataRateOffset_name, DataRateOffset_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.DataRateOffset", DataRateOffset_name, DataRateOffset_value)
	proto.RegisterEnum("ttn.lorawan.v3.JoinRequestType", JoinRequestType_name, JoinRequestType_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.JoinRequestType", JoinRequestType_name, JoinRequestType_value)
	proto.RegisterEnum("ttn.lorawan.v3.RejoinRequestType", RejoinRequestType_name, RejoinRequestType_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.RejoinRequestType", RejoinRequestType_name, RejoinRequestType_value)
	proto.RegisterEnum("ttn.lorawan.v3.CFListType", CFListType_name, CFListType_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.CFListType", CFListType_name, CFListType_value)
	proto.RegisterEnum("ttn.lorawan.v3.Class", Class_name, Class_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.Class", Class_name, Class_value)
	proto.RegisterEnum("ttn.lorawan.v3.TxSchedulePriority", TxSchedulePriority_name, TxSchedulePriority_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.TxSchedulePriority", TxSchedulePriority_name, TxSchedulePriority_value)
	proto.RegisterEnum("ttn.lorawan.v3.MACCommandIdentifier", MACCommandIdentifier_name, MACCommandIdentifier_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.MACCommandIdentifier", MACCommandIdentifier_name, MACCommandIdentifier_value)
	proto.RegisterEnum("ttn.lorawan.v3.AggregatedDutyCycle", AggregatedDutyCycle_name, AggregatedDutyCycle_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.AggregatedDutyCycle", AggregatedDutyCycle_name, AggregatedDutyCycle_value)
	proto.RegisterEnum("ttn.lorawan.v3.PingSlotPeriod", PingSlotPeriod_name, PingSlotPeriod_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.PingSlotPeriod", PingSlotPeriod_name, PingSlotPeriod_value)
	proto.RegisterEnum("ttn.lorawan.v3.RejoinCountExponent", RejoinCountExponent_name, RejoinCountExponent_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.RejoinCountExponent", RejoinCountExponent_name, RejoinCountExponent_value)
	proto.RegisterEnum("ttn.lorawan.v3.RejoinTimeExponent", RejoinTimeExponent_name, RejoinTimeExponent_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.RejoinTimeExponent", RejoinTimeExponent_name, RejoinTimeExponent_value)
	proto.RegisterEnum("ttn.lorawan.v3.RejoinPeriodExponent", RejoinPeriodExponent_name, RejoinPeriodExponent_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.RejoinPeriodExponent", RejoinPeriodExponent_name, RejoinPeriodExponent_value)
	proto.RegisterEnum("ttn.lorawan.v3.DeviceEIRP", DeviceEIRP_name, DeviceEIRP_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.DeviceEIRP", DeviceEIRP_name, DeviceEIRP_value)
	proto.RegisterEnum("ttn.lorawan.v3.ADRAckLimitExponent", ADRAckLimitExponent_name, ADRAckLimitExponent_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.ADRAckLimitExponent", ADRAckLimitExponent_name, ADRAckLimitExponent_value)
	proto.RegisterEnum("ttn.lorawan.v3.ADRAckDelayExponent", ADRAckDelayExponent_name, ADRAckDelayExponent_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.ADRAckDelayExponent", ADRAckDelayExponent_name, ADRAckDelayExponent_value)
	proto.RegisterEnum("ttn.lorawan.v3.RxDelay", RxDelay_name, RxDelay_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.RxDelay", RxDelay_name, RxDelay_value)
	proto.RegisterEnum("ttn.lorawan.v3.Minor", Minor_name, Minor_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.Minor", Minor_name, Minor_value)
	proto.RegisterType((*Message)(nil), "ttn.lorawan.v3.Message")
	golang_proto.RegisterType((*Message)(nil), "ttn.lorawan.v3.Message")
	proto.RegisterType((*MHDR)(nil), "ttn.lorawan.v3.MHDR")
	golang_proto.RegisterType((*MHDR)(nil), "ttn.lorawan.v3.MHDR")
	proto.RegisterType((*MACPayload)(nil), "ttn.lorawan.v3.MACPayload")
	golang_proto.RegisterType((*MACPayload)(nil), "ttn.lorawan.v3.MACPayload")
	proto.RegisterType((*FHDR)(nil), "ttn.lorawan.v3.FHDR")
	golang_proto.RegisterType((*FHDR)(nil), "ttn.lorawan.v3.FHDR")
	proto.RegisterType((*FCtrl)(nil), "ttn.lorawan.v3.FCtrl")
	golang_proto.RegisterType((*FCtrl)(nil), "ttn.lorawan.v3.FCtrl")
	proto.RegisterType((*JoinRequestPayload)(nil), "ttn.lorawan.v3.JoinRequestPayload")
	golang_proto.RegisterType((*JoinRequestPayload)(nil), "ttn.lorawan.v3.JoinRequestPayload")
	proto.RegisterType((*RejoinRequestPayload)(nil), "ttn.lorawan.v3.RejoinRequestPayload")
	golang_proto.RegisterType((*RejoinRequestPayload)(nil), "ttn.lorawan.v3.RejoinRequestPayload")
	proto.RegisterType((*JoinAcceptPayload)(nil), "ttn.lorawan.v3.JoinAcceptPayload")
	golang_proto.RegisterType((*JoinAcceptPayload)(nil), "ttn.lorawan.v3.JoinAcceptPayload")
	proto.RegisterType((*DLSettings)(nil), "ttn.lorawan.v3.DLSettings")
	golang_proto.RegisterType((*DLSettings)(nil), "ttn.lorawan.v3.DLSettings")
	proto.RegisterType((*CFList)(nil), "ttn.lorawan.v3.CFList")
	golang_proto.RegisterType((*CFList)(nil), "ttn.lorawan.v3.CFList")
	proto.RegisterType((*LoRaDataRate)(nil), "ttn.lorawan.v3.LoRaDataRate")
	golang_proto.RegisterType((*LoRaDataRate)(nil), "ttn.lorawan.v3.LoRaDataRate")
	proto.RegisterType((*FSKDataRate)(nil), "ttn.lorawan.v3.FSKDataRate")
	golang_proto.RegisterType((*FSKDataRate)(nil), "ttn.lorawan.v3.FSKDataRate")
	proto.RegisterType((*LRFHSSDataRate)(nil), "ttn.lorawan.v3.LRFHSSDataRate")
	golang_proto.RegisterType((*LRFHSSDataRate)(nil), "ttn.lorawan.v3.LRFHSSDataRate")
	proto.RegisterType((*DataRate)(nil), "ttn.lorawan.v3.DataRate")
	golang_proto.RegisterType((*DataRate)(nil), "ttn.lorawan.v3.DataRate")
	proto.RegisterType((*TxSettings)(nil), "ttn.lorawan.v3.TxSettings")
	golang_proto.RegisterType((*TxSettings)(nil), "ttn.lorawan.v3.TxSettings")
	proto.RegisterType((*TxSettings_Downlink)(nil), "ttn.lorawan.v3.TxSettings.Downlink")
	golang_proto.RegisterType((*TxSettings_Downlink)(nil), "ttn.lorawan.v3.TxSettings.Downlink")
	proto.RegisterType((*GatewayAntennaIdentifiers)(nil), "ttn.lorawan.v3.GatewayAntennaIdentifiers")
	golang_proto.RegisterType((*GatewayAntennaIdentifiers)(nil), "ttn.lorawan.v3.GatewayAntennaIdentifiers")
	proto.RegisterType((*UplinkToken)(nil), "ttn.lorawan.v3.UplinkToken")
	golang_proto.RegisterType((*UplinkToken)(nil), "ttn.lorawan.v3.UplinkToken")
	proto.RegisterType((*DownlinkPath)(nil), "ttn.lorawan.v3.DownlinkPath")
	golang_proto.RegisterType((*DownlinkPath)(nil), "ttn.lorawan.v3.DownlinkPath")
	proto.RegisterType((*TxRequest)(nil), "ttn.lorawan.v3.TxRequest")
	golang_proto.RegisterType((*TxRequest)(nil), "ttn.lorawan.v3.TxRequest")
	proto.RegisterType((*MACCommand)(nil), "ttn.lorawan.v3.MACCommand")
	golang_proto.RegisterType((*MACCommand)(nil), "ttn.lorawan.v3.MACCommand")
	proto.RegisterType((*MACCommand_ResetInd)(nil), "ttn.lorawan.v3.MACCommand.ResetInd")
	golang_proto.RegisterType((*MACCommand_ResetInd)(nil), "ttn.lorawan.v3.MACCommand.ResetInd")
	proto.RegisterType((*MACCommand_ResetConf)(nil), "ttn.lorawan.v3.MACCommand.ResetConf")
	golang_proto.RegisterType((*MACCommand_ResetConf)(nil), "ttn.lorawan.v3.MACCommand.ResetConf")
	proto.RegisterType((*MACCommand_LinkCheckAns)(nil), "ttn.lorawan.v3.MACCommand.LinkCheckAns")
	golang_proto.RegisterType((*MACCommand_LinkCheckAns)(nil), "ttn.lorawan.v3.MACCommand.LinkCheckAns")
	proto.RegisterType((*MACCommand_LinkADRReq)(nil), "ttn.lorawan.v3.MACCommand.LinkADRReq")
	golang_proto.RegisterType((*MACCommand_LinkADRReq)(nil), "ttn.lorawan.v3.MACCommand.LinkADRReq")
	proto.RegisterType((*MACCommand_LinkADRAns)(nil), "ttn.lorawan.v3.MACCommand.LinkADRAns")
	golang_proto.RegisterType((*MACCommand_LinkADRAns)(nil), "ttn.lorawan.v3.MACCommand.LinkADRAns")
	proto.RegisterType((*MACCommand_DutyCycleReq)(nil), "ttn.lorawan.v3.MACCommand.DutyCycleReq")
	golang_proto.RegisterType((*MACCommand_DutyCycleReq)(nil), "ttn.lorawan.v3.MACCommand.DutyCycleReq")
	proto.RegisterType((*MACCommand_RxParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.RxParamSetupReq")
	golang_proto.RegisterType((*MACCommand_RxParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.RxParamSetupReq")
	proto.RegisterType((*MACCommand_RxParamSetupAns)(nil), "ttn.lorawan.v3.MACCommand.RxParamSetupAns")
	golang_proto.RegisterType((*MACCommand_RxParamSetupAns)(nil), "ttn.lorawan.v3.MACCommand.RxParamSetupAns")
	proto.RegisterType((*MACCommand_DevStatusAns)(nil), "ttn.lorawan.v3.MACCommand.DevStatusAns")
	golang_proto.RegisterType((*MACCommand_DevStatusAns)(nil), "ttn.lorawan.v3.MACCommand.DevStatusAns")
	proto.RegisterType((*MACCommand_NewChannelReq)(nil), "ttn.lorawan.v3.MACCommand.NewChannelReq")
	golang_proto.RegisterType((*MACCommand_NewChannelReq)(nil), "ttn.lorawan.v3.MACCommand.NewChannelReq")
	proto.RegisterType((*MACCommand_NewChannelAns)(nil), "ttn.lorawan.v3.MACCommand.NewChannelAns")
	golang_proto.RegisterType((*MACCommand_NewChannelAns)(nil), "ttn.lorawan.v3.MACCommand.NewChannelAns")
	proto.RegisterType((*MACCommand_DLChannelReq)(nil), "ttn.lorawan.v3.MACCommand.DLChannelReq")
	golang_proto.RegisterType((*MACCommand_DLChannelReq)(nil), "ttn.lorawan.v3.MACCommand.DLChannelReq")
	proto.RegisterType((*MACCommand_DLChannelAns)(nil), "ttn.lorawan.v3.MACCommand.DLChannelAns")
	golang_proto.RegisterType((*MACCommand_DLChannelAns)(nil), "ttn.lorawan.v3.MACCommand.DLChannelAns")
	proto.RegisterType((*MACCommand_RxTimingSetupReq)(nil), "ttn.lorawan.v3.MACCommand.RxTimingSetupReq")
	golang_proto.RegisterType((*MACCommand_RxTimingSetupReq)(nil), "ttn.lorawan.v3.MACCommand.RxTimingSetupReq")
	proto.RegisterType((*MACCommand_TxParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.TxParamSetupReq")
	golang_proto.RegisterType((*MACCommand_TxParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.TxParamSetupReq")
	proto.RegisterType((*MACCommand_RekeyInd)(nil), "ttn.lorawan.v3.MACCommand.RekeyInd")
	golang_proto.RegisterType((*MACCommand_RekeyInd)(nil), "ttn.lorawan.v3.MACCommand.RekeyInd")
	proto.RegisterType((*MACCommand_RekeyConf)(nil), "ttn.lorawan.v3.MACCommand.RekeyConf")
	golang_proto.RegisterType((*MACCommand_RekeyConf)(nil), "ttn.lorawan.v3.MACCommand.RekeyConf")
	proto.RegisterType((*MACCommand_ADRParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.ADRParamSetupReq")
	golang_proto.RegisterType((*MACCommand_ADRParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.ADRParamSetupReq")
	proto.RegisterType((*MACCommand_DeviceTimeAns)(nil), "ttn.lorawan.v3.MACCommand.DeviceTimeAns")
	golang_proto.RegisterType((*MACCommand_DeviceTimeAns)(nil), "ttn.lorawan.v3.MACCommand.DeviceTimeAns")
	proto.RegisterType((*MACCommand_ForceRejoinReq)(nil), "ttn.lorawan.v3.MACCommand.ForceRejoinReq")
	golang_proto.RegisterType((*MACCommand_ForceRejoinReq)(nil), "ttn.lorawan.v3.MACCommand.ForceRejoinReq")
	proto.RegisterType((*MACCommand_RejoinParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.RejoinParamSetupReq")
	golang_proto.RegisterType((*MACCommand_RejoinParamSetupReq)(nil), "ttn.lorawan.v3.MACCommand.RejoinParamSetupReq")
	proto.RegisterType((*MACCommand_RejoinParamSetupAns)(nil), "ttn.lorawan.v3.MACCommand.RejoinParamSetupAns")
	golang_proto.RegisterType((*MACCommand_RejoinParamSetupAns)(nil), "ttn.lorawan.v3.MACCommand.RejoinParamSetupAns")
	proto.RegisterType((*MACCommand_PingSlotInfoReq)(nil), "ttn.lorawan.v3.MACCommand.PingSlotInfoReq")
	golang_proto.RegisterType((*MACCommand_PingSlotInfoReq)(nil), "ttn.lorawan.v3.MACCommand.PingSlotInfoReq")
	proto.RegisterType((*MACCommand_PingSlotChannelReq)(nil), "ttn.lorawan.v3.MACCommand.PingSlotChannelReq")
	golang_proto.RegisterType((*MACCommand_PingSlotChannelReq)(nil), "ttn.lorawan.v3.MACCommand.PingSlotChannelReq")
	proto.RegisterType((*MACCommand_PingSlotChannelAns)(nil), "ttn.lorawan.v3.MACCommand.PingSlotChannelAns")
	golang_proto.RegisterType((*MACCommand_PingSlotChannelAns)(nil), "ttn.lorawan.v3.MACCommand.PingSlotChannelAns")
	proto.RegisterType((*MACCommand_BeaconTimingAns)(nil), "ttn.lorawan.v3.MACCommand.BeaconTimingAns")
	golang_proto.RegisterType((*MACCommand_BeaconTimingAns)(nil), "ttn.lorawan.v3.MACCommand.BeaconTimingAns")
	proto.RegisterType((*MACCommand_BeaconFreqReq)(nil), "ttn.lorawan.v3.MACCommand.BeaconFreqReq")
	golang_proto.RegisterType((*MACCommand_BeaconFreqReq)(nil), "ttn.lorawan.v3.MACCommand.BeaconFreqReq")
	proto.RegisterType((*MACCommand_BeaconFreqAns)(nil), "ttn.lorawan.v3.MACCommand.BeaconFreqAns")
	golang_proto.RegisterType((*MACCommand_BeaconFreqAns)(nil), "ttn.lorawan.v3.MACCommand.BeaconFreqAns")
	proto.RegisterType((*MACCommand_DeviceModeInd)(nil), "ttn.lorawan.v3.MACCommand.DeviceModeInd")
	golang_proto.RegisterType((*MACCommand_DeviceModeInd)(nil), "ttn.lorawan.v3.MACCommand.DeviceModeInd")
	proto.RegisterType((*MACCommand_DeviceModeConf)(nil), "ttn.lorawan.v3.MACCommand.DeviceModeConf")
	golang_proto.RegisterType((*MACCommand_DeviceModeConf)(nil), "ttn.lorawan.v3.MACCommand.DeviceModeConf")
	proto.RegisterType((*FrequencyValue)(nil), "ttn.lorawan.v3.FrequencyValue")
	golang_proto.RegisterType((*FrequencyValue)(nil), "ttn.lorawan.v3.FrequencyValue")
	proto.RegisterType((*DataRateOffsetValue)(nil), "ttn.lorawan.v3.DataRateOffsetValue")
	golang_proto.RegisterType((*DataRateOffsetValue)(nil), "ttn.lorawan.v3.DataRateOffsetValue")
	proto.RegisterType((*DataRateIndexValue)(nil), "ttn.lorawan.v3.DataRateIndexValue")
	golang_proto.RegisterType((*DataRateIndexValue)(nil), "ttn.lorawan.v3.DataRateIndexValue")
	proto.RegisterType((*PingSlotPeriodValue)(nil), "ttn.lorawan.v3.PingSlotPeriodValue")
	golang_proto.RegisterType((*PingSlotPeriodValue)(nil), "ttn.lorawan.v3.PingSlotPeriodValue")
	proto.RegisterType((*AggregatedDutyCycleValue)(nil), "ttn.lorawan.v3.AggregatedDutyCycleValue")
	golang_proto.RegisterType((*AggregatedDutyCycleValue)(nil), "ttn.lorawan.v3.AggregatedDutyCycleValue")
	proto.RegisterType((*RxDelayValue)(nil), "ttn.lorawan.v3.RxDelayValue")
	golang_proto.RegisterType((*RxDelayValue)(nil), "ttn.lorawan.v3.RxDelayValue")
	proto.RegisterType((*ADRAckLimitExponentValue)(nil), "ttn.lorawan.v3.ADRAckLimitExponentValue")
	golang_proto.RegisterType((*ADRAckLimitExponentValue)(nil), "ttn.lorawan.v3.ADRAckLimitExponentValue")
	proto.RegisterType((*ADRAckDelayExponentValue)(nil), "ttn.lorawan.v3.ADRAckDelayExponentValue")
	golang_proto.RegisterType((*ADRAckDelayExponentValue)(nil), "ttn.lorawan.v3.ADRAckDelayExponentValue")
	proto.RegisterType((*DeviceEIRPValue)(nil), "ttn.lorawan.v3.DeviceEIRPValue")
	golang_proto.RegisterType((*DeviceEIRPValue)(nil), "ttn.lorawan.v3.DeviceEIRPValue")
}

func init() { proto.RegisterFile("lorawan-stack/api/lorawan.proto", fileDescriptor_2084d1d5a227b67e) }
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/lorawan.proto", fileDescriptor_2084d1d5a227b67e)
}

var fileDescriptor_2084d1d5a227b67e = []byte{
	// 5824 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5b, 0x4d, 0x70, 0x1b, 0xc9,
	0x75, 0xe6, 0xe0, 0x9f, 0x0f, 0x7f, 0xc3, 0xa6, 0x7e, 0x40, 0xec, 0x7a, 0x25, 0x53, 0x9b, 0x58,
	0xc6, 0x96, 0x28, 0x02, 0xa4, 0x28, 0xca, 0xf1, 0x7a, 0x17, 0x00, 0xc1, 0x25, 0x24, 0xfe, 0x79,
	0x00, 0x49, 0x2b, 0xff, 0x64, 0x32, 0xc4, 0x0c, 0x28, 0x88, 0xc0, 0x0c, 0x76, 0x30, 0xa4, 0x48,
	0xe7, 0x14, 0xe7, 0xe6, 0x54, 0x2a, 0x29, 0xdf, 0x5c, 0xae, 0x4a, 0x25, 0x87, 0x54, 0x52, 0xcc,
	0xcd, 0xb9, 0x24, 0x95, 0xa4, 0x2a, 0xc9, 0x29, 0x87, 0x5c, 0x73, 0xf1, 0xc1, 0x71, 0x95, 0x53,
	0x39, 0xb0, 0xca, 0xb7, 0x1c, 0x52, 0x9b, 0xaa, 0x6c, 0xea, 0x75, 0xf7, 0x60, 0x7a, 0x66, 0x40,
	0x91, 0xb4, 0x15, 0x5d, 0x84, 0xfe, 0xba, 0xfb, 0xeb, 0xd7, 0xef, 0xbd, 0x7e, 0xef, 0x75, 0x03,
	0x84, 0x5b, 0x7d, 0xcb, 0xd6, 0x5e, 0x6b, 0xe6, 0xbd, 0x91, 0xa3, 0x75, 0x0e, 0xee, 0x6b, 0xc3,
	0xde, 0x7d, 0x8e, 0x2c, 0x0c, 0x6d, 0xcb, 0xb1, 0x48, 0xce, 0x71, 0xcc, 0x05, 0x17, 0x3a, 0x5a,
	0x2a, 0x56, 0xf7, 0x7b, 0xce, 0xcb, 0xc3, 0xbd, 0x85, 0x8e, 0x35, 0xb8, 0x6f, 0x98, 0x47, 0xd6,
	0xc9, 0xd0, 0xb6, 0x8e, 0x4f, 0xee, 0xd3, 0xc1, 0x9d, 0x7b, 0xfb, 0x86, 0x79, 0xef, 0x48, 0xeb,
	0xf7, 0x74, 0xcd, 0x31, 0xee, 0x87, 0x3e, 0x30, 0xca, 0xe2, 0x3d, 0x81, 0x62, 0xdf, 0xda, 0xb7,
	0xd8, 0xe4, 0xbd, 0xc3, 0x2e, 0x6d, 0xd1, 0x06, 0xfd, 0xc4, 0x87, 0xd7, 0x85, 0xe1, 0xed, 0x97,
	0x46, 0xfb, 0x65, 0xcf, 0xdc, 0x1f, 0x35, 0x4d, 0xfd, 0x70, 0xe4, 0xd8, 0x3d, 0x63, 0x24, 0x2e,
	0xbd, 0x6f, 0xdd, 0x7b, 0x35, 0xb2, 0xcc, 0xfb, 0x9a, 0x69, 0x5a, 0x8e, 0xe6, 0xf4, 0x2c, 0x73,
	0xc4, 0x49, 0xde, 0xdd, 0xb7, 0xac, 0xfd, 0xbe, 0xe1, 0x2d, 0x35, 0x72, 0xec, 0xc3, 0x8e, 0xc3,
	0x7b, 0x6f, 0x05, 0x7b, 0x9d, 0xde, 0xc0, 0x18, 0x39, 0xda, 0x60, 0xc8, 0x07, 0xdc, 0x09, 0xab,
	0xa9, 0xa7, 0x1b, 0xa6, 0xd3, 0xeb, 0xf6, 0x0c, 0x9b, 0xaf, 0x31, 0xff, 0x77, 0x51, 0x48, 0x6e,
	0x19, 0xa3, 0x91, 0xb6, 0x6f, 0x90, 0x25, 0x88, 0x0f, 0xd4, 0x97, 0xba, 0x5d, 0x90, 0x6e, 0x4b,
	0x77, 0xd3, 0x95, 0x6b, 0x0b, 0x7e, 0x35, 0x2e, 0x6c, 0x6d, 0xac, 0x29, 0xb5, 0xd4, 0xe7, 0xb5,
	0xf8, 0x0f, 0xa4, 0x88, 0x2c, 0x29, 0xb1, 0xc1, 0x86, 0x6e, 0x93, 0x77, 0x20, 0x3a, 0xe8, 0x75,
	0x0a, 0x91, 0xdb, 0xd2, 0xdd, 0x4c, 0x6d, 0xfa, 0xf3, 0x5a, 0xe2, 0x7b, 0x31, 0x79, 0xaa, 0x10,
	0x53, 0x10, 0x25, 0x1f, 0x42, 0x7a, 0xa0, 0x75, 0xd4, 0xa1, 0x76, 0xd2, 0xb7, 0x34, 0xbd, 0x10,
	0xa5, 0xbc, 0xc5, 0x10, 0x6f, 0xb5, 0xbe, 0xcb, 0x46, 0x6c, 0x4c, 0x29, 0x30, 0xd0, 0x3a, 0xbc,
	0x45, 0x9e, 0xc1, 0xb5, 0x57, 0x56, 0xcf, 0x54, 0x6d, 0xe3, 0xb3, 0x43, 0x63, 0xe4, 0x8c, 0x79,
	0x62, 0x94, 0x67, 0x3e, 0xc8, 0xf3, 0xd8, 0xea, 0x99, 0x0a, 0x1b, 0xea, 0xf1, 0x91, 0x57, 0x21,
	0x94, 0xb4, 0x60, 0x96, 0xf2, 0x6a, 0x9d, 0x8e, 0x31, 0xf4, 0x68, 0xe3, 0x94, 0xf6, 0xcb, 0x93,
	0x68, 0xab, 0x74, 0xa4, 0xc7, 0x3a, 0xf3, 0x2a, 0x08, 0x92, 0xef, 0xc0, 0x0d, 0xdb, 0x98, 0x28,
	0x6e, 0x82, 0xf2, 0xbe, 0x1f, 0xe4, 0x55, 0x8c, 0x57, 0x93, 0x04, 0xbe, 0x66, 0x4f, 0xc0, 0x6b,
	0x39, 0x48, 0xba, 0x0b, 0x45, 0xff, 0xbb, 0x26, 0x3d, 0x8e, 0xa5, 0x92, 0x72, 0x6a, 0xfe, 0x10,
	0x62, 0x68, 0x14, 0xb2, 0x02, 0x89, 0x81, 0xea, 0x9c, 0x0c, 0x0d, 0x6a, 0xba, 0x5c, 0xe5, 0x7a,
	0x48, 0xc5, 0xed, 0x93, 0xa1, 0x41, 0x6d, 0xf7, 0x7d, 0x6a, 0xbb, 0xf8, 0x00, 0x01, 0xf2, 0x00,
	0xe2, 0x03, 0xed, 0x95, 0x65, 0x53, 0xf3, 0x4d, 0x9a, 0x86, 0x9d, 0xbe, 0x69, 0x08, 0xcc, 0xff,
	0x42, 0x02, 0xf0, 0x8c, 0x86, 0x7e, 0xd3, 0x7d, 0x93, 0xdf, 0xac, 0x07, 0xfc, 0xa6, 0x8b, 0x7e,
	0x73, 0x0b, 0x12, 0x5d, 0x75, 0x68, 0xd9, 0x0e, 0x5d, 0x3b, 0x4b, 0xfb, 0x4b, 0xd1, 0xc2, 0x17,
	0x92, 0x12, 0xef, 0xee, 0x5a, 0xb6, 0x43, 0x6e, 0x41, 0xba, 0x6b, 0x0f, 0x7c, 0xbe, 0x93, 0x51,
	0xa0, 0x6b, 0x0f, 0xdc, 0x65, 0x3f, 0x86, 0xbc, 0x6e, 0x74, 0x2c, 0xdd, 0xd0, 0x03, 0x8e, 0x71,
	0x73, 0x81, 0x1d, 0x8d, 0x05, 0xf7, 0x68, 0x2c, 0xb4, 0xe8, 0xc1, 0x51, 0x72, 0x7c, 0xbc, 0xcb,
	0xf0, 0x2e, 0x40, 0xf7, 0xb0, 0xdf, 0x57, 0xbb, 0x6a, 0xc7, 0x74, 0xa8, 0xf9, 0xb3, 0x4a, 0x0a,
	0x91, 0xf5, 0xba, 0xe9, 0xcc, 0xff, 0x54, 0x82, 0x18, 0x8a, 0x4e, 0xbe, 0x05, 0x29, 0xdd, 0x38,
	0x52, 0x35, 0x9d, 0x6f, 0x31, 0x53, 0xfb, 0xe8, 0x5f, 0x7e, 0x76, 0x6b, 0xea, 0xa7, 0x3f, 0xbb,
	0xf5, 0x70, 0xdf, 0x5a, 0x70, 0x5e, 0x1a, 0x0e, 0x3d, 0xde, 0x0b, 0xa6, 0xe1, 0xbc, 0xb6, 0xec,
	0x83, 0xfb, 0xfe, 0x73, 0x77, 0xb4, 0x74, 0x7f, 0x78, 0xb0, 0x7f, 0x1f, 0xad, 0x33, 0x5a, 0x58,
	0x33, 0x8e, 0xaa, 0xba, 0x6e, 0x2b, 0x49, 0x9d, 0x7d, 0x40, 0xcb, 0x75, 0xd5, 0x8e, 0x63, 0xf7,
	0xa9, 0x1a, 0xd2, 0x61, 0x13, 0xac, 0xd7, 0x1d, 0xbb, 0x2f, 0x68, 0x2f, 0xde, 0x45, 0x80, 0xbc,
	0x87, 0x3a, 0x47, 0xa9, 0xa3, 0x54, 0x7b, 0x78, 0xf0, 0x4a, 0xb1, 0xc2, 0x17, 0x5f, 0x44, 0x95,
	0x58, 0xb7, 0x6e, 0x3a, 0xe4, 0x3d, 0xe4, 0xb5, 0x86, 0xce, 0x88, 0xea, 0x24, 0x53, 0x4b, 0x7e,
	0x5e, 0x8b, 0x7d, 0x2f, 0x52, 0xc8, 0x2b, 0xf1, 0xee, 0xce, 0xd0, 0x19, 0xcd, 0xff, 0x9e, 0x04,
	0x71, 0x4a, 0x4d, 0x64, 0x88, 0x6a, 0x7c, 0x63, 0x29, 0x05, 0x3f, 0x92, 0xf7, 0x20, 0xad, 0xe9,
	0xb6, 0xaa, 0x75, 0x0e, 0xd0, 0x95, 0xa9, 0x60, 0x29, 0x65, 0x5a, 0xd3, 0xed, 0x6a, 0xe7, 0x40,
	0x31, 0x3e, 0xa3, 0x33, 0x3a, 0x07, 0x74, 0x65, 0x9c, 0xd1, 0x39, 0x20, 0xef, 0xc0, 0x74, 0x57,
	0x1d, 0x1a, 0xa6, 0xde, 0x33, 0xf7, 0xe9, 0x82, 0x29, 0x25, 0xd5, 0xdd, 0x65, 0x6d, 0x72, 0x13,
	0x92, 0x9d, 0xbe, 0x36, 0x1a, 0xa9, 0x7b, 0x54, 0xc5, 0x29, 0x25, 0x41, 0x9b, 0xb5, 0xf9, 0x3f,
	0x8f, 0x00, 0x09, 0x9f, 0x59, 0xf2, 0x29, 0xa4, 0xe8, 0x31, 0x32, 0x0e, 0x7b, 0x5c, 0xdd, 0x1f,
	0x72, 0x75, 0x3f, 0xb8, 0xaa, 0xba, 0x1b, 0x4f, 0x9b, 0x2b, 0xcb, 0x4a, 0x12, 0xe9, 0x1a, 0x87,
	0x3d, 0xf2, 0x0c, 0x50, 0xef, 0x94, 0x38, 0xf2, 0x36, 0x88, 0x13, 0xba, 0x71, 0x84, 0xbc, 0xdf,
	0x85, 0x69, 0xe4, 0x35, 0x2d, 0xb3, 0x63, 0x30, 0x47, 0xad, 0x7d, 0xcc, 0x99, 0x57, 0x7f, 0x05,
	0x0f, 0xd9, 0x46, 0x1e, 0x05, 0x7d, 0x8e, 0x7e, 0x9a, 0xff, 0x83, 0x28, 0x5c, 0x9b, 0x14, 0x2c,
	0xc8, 0x26, 0xa4, 0x79, 0xc8, 0x11, 0xce, 0xfe, 0x97, 0xdf, 0x18, 0x67, 0x02, 0x71, 0x00, 0xd8,
	0x7c, 0x1a, 0x0c, 0xda, 0x90, 0x30, 0x0d, 0x47, 0xed, 0xe9, 0xbf, 0xae, 0x72, 0xb6, 0x0d, 0xa7,
	0xb9, 0xa6, 0xc4, 0x4d, 0xc3, 0x69, 0xfa, 0xad, 0x19, 0xfd, 0xff, 0xb2, 0x66, 0xec, 0x6d, 0x5a,
	0xf3, 0x4b, 0xc0, 0xb5, 0x22, 0x44, 0x85, 0x69, 0x86, 0x60, 0x58, 0xf8, 0x9f, 0x28, 0xcc, 0x84,
	0x52, 0x02, 0x79, 0x17, 0xa6, 0x0d, 0xb3, 0x63, 0x9f, 0x0c, 0x1d, 0x43, 0x67, 0x5e, 0xab, 0x78,
	0x00, 0xf9, 0x1d, 0x00, 0x4a, 0xc8, 0x3c, 0x84, 0xa9, 0xb7, 0xca, 0xa5, 0x7d, 0x74, 0x55, 0x69,
	0x71, 0x71, 0xe6, 0x22, 0xd3, 0xaf, 0xdc, 0x8f, 0x82, 0xf1, 0xa2, 0x6f, 0xd1, 0x78, 0x62, 0xe4,
	0x8b, 0xbd, 0xe5, 0xc8, 0xd7, 0x80, 0xb4, 0xde, 0x57, 0x47, 0x86, 0xe3, 0x20, 0x05, 0x4f, 0xbe,
	0xa1, 0xda, 0x60, 0x6d, 0xb3, 0xc5, 0x47, 0x08, 0x31, 0x10, 0xf4, 0xbe, 0x8b, 0x92, 0xaf, 0x43,
	0xca, 0x3e, 0x56, 0x75, 0xa3, 0xaf, 0x9d, 0xd0, 0x44, 0x9b, 0xab, 0xdc, 0x0c, 0x1d, 0x80, 0xe3,
	0x35, 0xec, 0x16, 0xdc, 0x3e, 0x69, 0x33, 0x88, 0xdc, 0x87, 0x64, 0xa7, 0xab, 0xf6, 0x7b, 0x23,
	0xa7, 0x90, 0xa4, 0x02, 0xdc, 0x08, 0x4e, 0xae, 0xaf, 0x6f, 0xf6, 0x46, 0x8e, 0x92, 0xe8, 0x74,
	0xf1, 0xff, 0xf9, 0xbf, 0x96, 0x00, 0x3c, 0x99, 0xc8, 0x26, 0x64, 0xed, 0xe3, 0xb2, 0xaa, 0xdb,
	0xaa, 0xd5, 0xed, 0x8e, 0x0c, 0x87, 0x9f, 0xc1, 0xf7, 0x42, 0xdb, 0xd0, 0x1c, 0x4d, 0xd1, 0x1c,
	0x63, 0x87, 0x8e, 0x12, 0x24, 0x49, 0xdb, 0xc7, 0xe5, 0x35, 0x9b, 0xc1, 0xe4, 0x1b, 0x90, 0xb0,
	0x8f, 0x2b, 0xaa, 0xee, 0xe6, 0xe3, 0x2f, 0x9d, 0x47, 0xd3, 0x34, 0x75, 0xe3, 0x58, 0xcc, 0xcb,
	0xf6, 0x71, 0x65, 0xcd, 0xc6, 0x48, 0x6b, 0x0d, 0x1d, 0xd5, 0x34, 0xf6, 0x79, 0x70, 0x4e, 0x58,
	0x43, 0x67, 0xdb, 0xd8, 0x9f, 0xff, 0x0c, 0x12, 0x6c, 0x1f, 0x64, 0x15, 0x62, 0x42, 0xac, 0x28,
	0x4e, 0xde, 0x6d, 0x20, 0x48, 0xd0, 0x19, 0x84, 0x40, 0xac, 0xcb, 0xd2, 0x41, 0xf4, 0x6e, 0x56,
	0xa1, 0x9f, 0xc9, 0x1c, 0xa4, 0x3a, 0x2f, 0xd5, 0x81, 0x36, 0x3a, 0x18, 0x15, 0xa2, 0xb7, 0xa3,
	0x77, 0x53, 0x4a, 0xb2, 0xf3, 0x72, 0x0b, 0x9b, 0xf3, 0xcf, 0x21, 0xb3, 0x69, 0x29, 0x9a, 0x2b,
	0x31, 0x1e, 0x90, 0x3d, 0xcd, 0xd4, 0x5f, 0xf7, 0x74, 0xe7, 0x25, 0x5d, 0x3d, 0xab, 0x78, 0x00,
	0xf9, 0x2a, 0xc8, 0xa3, 0xa1, 0x6d, 0x68, 0x98, 0x30, 0xd4, 0xae, 0xd6, 0x71, 0x78, 0x4d, 0x92,
	0x55, 0xf2, 0x63, 0x7c, 0x9d, 0xc2, 0xf3, 0x77, 0x21, 0xbd, 0xde, 0x7a, 0x32, 0xe6, 0x9d, 0x83,
	0xd4, 0x5e, 0xcf, 0x51, 0x6d, 0xcd, 0x31, 0x38, 0x6d, 0x72, 0xaf, 0xe7, 0x60, 0xd7, 0xfc, 0x0f,
	0x25, 0xc8, 0x6d, 0x2a, 0xeb, 0x1b, 0xad, 0xd6, 0x78, 0xf4, 0x57, 0x20, 0x3f, 0xb0, 0xf4, 0xc3,
	0x3e, 0xad, 0xb3, 0xbd, 0xa8, 0x99, 0x55, 0x72, 0x1e, 0x4c, 0x83, 0xe1, 0x0a, 0xdc, 0xb4, 0x86,
	0x86, 0xad, 0xa1, 0x99, 0xd5, 0xce, 0x4b, 0xcd, 0x34, 0x8d, 0xbe, 0xca, 0x84, 0x67, 0x72, 0x5d,
	0x1f, 0x77, 0xd7, 0x59, 0xef, 0x73, 0xba, 0x91, 0x5b, 0x90, 0xee, 0x58, 0x74, 0x17, 0x54, 0x22,
	0x34, 0xc3, 0xb4, 0x02, 0x0c, 0xa2, 0x42, 0xfd, 0xbd, 0x04, 0xa9, 0xb1, 0x38, 0x15, 0x88, 0xa1,
	0xf2, 0x79, 0xe1, 0xf4, 0x6e, 0xd0, 0x1a, 0xa2, 0x02, 0x37, 0xa6, 0x14, 0x3a, 0x96, 0xdc, 0x87,
	0x68, 0x77, 0x74, 0xc0, 0xcb, 0x85, 0x77, 0x42, 0xe5, 0x82, 0xa7, 0x9a, 0x8d, 0x29, 0x05, 0x47,
	0x92, 0x55, 0x48, 0xf4, 0xed, 0xee, 0xcb, 0xd1, 0x88, 0xd7, 0xdf, 0x21, 0xe7, 0xf4, 0xeb, 0x68,
	0x63, 0x4a, 0xe1, 0xe3, 0x6b, 0x33, 0x00, 0x9e, 0x5a, 0x68, 0xdd, 0x39, 0xff, 0x0f, 0x51, 0x80,
	0xf6, 0xf1, 0xd8, 0xff, 0x3f, 0x82, 0x69, 0x5d, 0x73, 0x34, 0x4f, 0xfd, 0xe9, 0x4a, 0xe1, 0x3c,
	0xa7, 0x15, 0x0e, 0x70, 0x4a, 0x77, 0x35, 0x70, 0x91, 0xbe, 0xd0, 0x6f, 0xba, 0xb4, 0xa0, 0x36,
	0x3b, 0x27, 0x34, 0x06, 0xc5, 0x14, 0x0f, 0xc0, 0x58, 0x6d, 0x98, 0xda, 0x5e, 0xdf, 0x50, 0x3b,
	0x76, 0x87, 0x97, 0x17, 0xd3, 0x0c, 0xa9, 0xdb, 0x1d, 0x9c, 0x3c, 0xbe, 0x15, 0xd1, 0xe8, 0x90,
	0x55, 0x3c, 0x80, 0x2c, 0x40, 0x0c, 0x1b, 0xfc, 0xe4, 0x17, 0x43, 0x55, 0x63, 0xdb, 0x1d, 0xa9,
	0xd0, 0x71, 0xe4, 0x23, 0x48, 0xe9, 0xd6, 0x6b, 0xb3, 0xdf, 0x33, 0x0f, 0x0a, 0x29, 0x3a, 0xe7,
	0x4e, 0x70, 0xaf, 0x9e, 0x6a, 0x16, 0xd6, 0xf8, 0x50, 0x65, 0x3c, 0xa9, 0xf8, 0xbb, 0x90, 0x72,
	0x51, 0x72, 0x07, 0xb2, 0x9a, 0xe9, 0x18, 0xa6, 0xa9, 0xa9, 0x3d, 0x3c, 0xcd, 0xdc, 0x0f, 0x33,
	0x1c, 0xa4, 0x27, 0x1c, 0x9d, 0xdb, 0x39, 0x56, 0x87, 0xd6, 0x6b, 0x83, 0x1d, 0x87, 0x88, 0x92,
	0x74, 0x8e, 0x77, 0xb1, 0x49, 0xee, 0xc3, 0x6c, 0xcf, 0x3c, 0x32, 0x6c, 0x47, 0x1d, 0x5a, 0x7d,
	0xcd, 0xee, 0x7d, 0x8f, 0x1a, 0x89, 0x9f, 0x7b, 0xc2, 0xba, 0x76, 0x85, 0x9e, 0xc7, 0xb1, 0x54,
	0x44, 0x8e, 0xce, 0xff, 0x91, 0x04, 0x73, 0x9f, 0x68, 0x8e, 0xf1, 0x5a, 0x3b, 0xa9, 0xf2, 0x95,
	0xbc, 0x3b, 0x21, 0xd9, 0x82, 0xf4, 0x3e, 0xeb, 0x54, 0x7b, 0xfa, 0x88, 0x1b, 0x34, 0x74, 0xcf,
	0xe2, 0xf3, 0x85, 0x89, 0x62, 0x6c, 0xde, 0x77, 0x7b, 0x47, 0xe1, 0x3d, 0x46, 0xc2, 0x7b, 0x9c,
	0xff, 0x71, 0x04, 0xd2, 0x4f, 0x87, 0xa8, 0x93, 0xb6, 0x75, 0x60, 0x98, 0xa4, 0x01, 0x51, 0x6f,
	0xed, 0xaf, 0x9e, 0xb3, 0x76, 0x58, 0x76, 0x41, 0x04, 0x9c, 0xef, 0x37, 0x7d, 0x24, 0x68, 0xfa,
	0xdf, 0x82, 0xf4, 0xc8, 0xb0, 0x8f, 0x0c, 0x5b, 0xa5, 0x1e, 0x10, 0xbd, 0xd0, 0x03, 0x80, 0x0d,
	0x47, 0x80, 0x7c, 0x00, 0x33, 0x1d, 0x4c, 0xba, 0xa6, 0x63, 0x6b, 0x8e, 0xc5, 0x29, 0xd0, 0x35,
	0xa3, 0x8a, 0x2c, 0x76, 0xd0, 0xc1, 0x1f, 0x42, 0xc6, 0x55, 0x29, 0x1d, 0x17, 0xbf, 0x70, 0x29,
	0xd7, 0x04, 0x88, 0xcc, 0xff, 0xbe, 0x04, 0x19, 0xd7, 0x67, 0x76, 0x35, 0xe7, 0x25, 0xb9, 0x03,
	0x99, 0x43, 0xaa, 0x2d, 0xd5, 0x41, 0x75, 0xb1, 0x5a, 0x63, 0x63, 0x4a, 0x49, 0x1f, 0x0a, 0x3a,
	0xac, 0x42, 0xbc, 0xdb, 0x3b, 0x36, 0x74, 0x1e, 0x25, 0x2e, 0xaf, 0xc5, 0x8d, 0x29, 0x85, 0xcd,
	0xac, 0xa5, 0x21, 0x36, 0xc4, 0xf5, 0xe8, 0xa9, 0xff, 0x41, 0x1c, 0xa6, 0xdb, 0xc7, 0xbc, 0x84,
	0x24, 0x1f, 0x40, 0x9c, 0x56, 0xf0, 0xe7, 0x5d, 0x36, 0xeb, 0xd8, 0xa9, 0xb0, 0x31, 0xa4, 0x0e,
	0x39, 0xd7, 0xff, 0x55, 0x24, 0x1c, 0xd1, 0x04, 0x32, 0x21, 0xd8, 0x89, 0xbb, 0x54, 0xb2, 0xba,
	0xd0, 0x1a, 0x91, 0x6f, 0xc0, 0x34, 0x4d, 0xb3, 0x34, 0xcb, 0x47, 0x2f, 0x9b, 0xe5, 0x53, 0x98,
	0x5b, 0x69, 0x9a, 0xff, 0x3a, 0x4f, 0xd3, 0xe3, 0x50, 0x95, 0x79, 0x73, 0xa8, 0x62, 0x69, 0xd9,
	0x8d, 0x51, 0x77, 0xd8, 0x6c, 0x2f, 0x0c, 0xc5, 0x69, 0x18, 0xca, 0xd8, 0xc7, 0xe5, 0xf5, 0x71,
	0x24, 0xa2, 0x4b, 0x54, 0x84, 0x25, 0xb2, 0x17, 0x2f, 0x51, 0xf1, 0x2f, 0x51, 0x11, 0x96, 0x48,
	0xba, 0x4b, 0x54, 0xbc, 0x25, 0x36, 0x20, 0x35, 0xb4, 0x7b, 0x96, 0xdd, 0x73, 0x4e, 0x68, 0xfc,
	0xc9, 0x85, 0x8f, 0x66, 0xfb, 0xb8, 0xd5, 0x79, 0x69, 0xe8, 0x87, 0x7d, 0x63, 0x97, 0x8f, 0x14,
	0xf5, 0xe1, 0xce, 0x26, 0x1f, 0x41, 0x56, 0xdb, 0x1b, 0x59, 0xfd, 0x43, 0xc7, 0x60, 0x5e, 0x39,
	0x7d, 0xa1, 0x57, 0x66, 0xdc, 0x09, 0xd4, 0xab, 0x97, 0x60, 0x66, 0x2c, 0xab, 0x3a, 0xec, 0x6b,
	0x26, 0x56, 0x9e, 0x80, 0xc1, 0x9b, 0xde, 0x34, 0xed, 0x48, 0xe1, 0x63, 0x25, 0x3f, 0x1e, 0xb1,
	0xdb, 0xd7, 0xcc, 0xa6, 0x4e, 0x96, 0x20, 0xa5, 0xe9, 0x47, 0x9a, 0xd9, 0x31, 0xf4, 0x42, 0xe7,
	0xcd, 0x37, 0xf5, 0xf1, 0xc0, 0xc7, 0xb1, 0x54, 0x4c, 0x8e, 0x3f, 0x8e, 0xa5, 0x12, 0x72, 0xf2,
	0x71, 0x2c, 0x95, 0x96, 0x33, 0xf3, 0xff, 0xbc, 0x44, 0x5f, 0x1f, 0xea, 0xd6, 0x60, 0xa0, 0x99,
	0x3a, 0xa9, 0x41, 0xb4, 0xd3, 0xd3, 0xb9, 0x2f, 0xbe, 0x3f, 0xe1, 0x6d, 0x89, 0x0f, 0xf4, 0xbc,
	0xbc, 0x06, 0x9f, 0xd7, 0x92, 0xdf, 0x97, 0x62, 0xb2, 0x74, 0x7b, 0x4a, 0xc1, 0xc9, 0xe4, 0xcb,
	0x90, 0xb6, 0xb5, 0xd7, 0xe3, 0x67, 0x84, 0x08, 0x3f, 0x53, 0x60, 0x6b, 0xaf, 0xdd, 0x02, 0xbf,
	0x06, 0xd3, 0xb6, 0x31, 0xc2, 0x12, 0xdb, 0x74, 0x1f, 0xb2, 0xee, 0x9c, 0xbf, 0xd8, 0x82, 0x82,
	0x63, 0x9b, 0xa6, 0xbe, 0x31, 0xa5, 0xa4, 0x6c, 0xfe, 0x99, 0x34, 0xf0, 0x66, 0x81, 0x1c, 0x1d,
	0xcb, 0xec, 0xf2, 0xc7, 0x8a, 0xf7, 0x2f, 0x22, 0xa9, 0x5b, 0x66, 0x77, 0x63, 0x4a, 0x61, 0xab,
	0x63, 0x83, 0xec, 0x40, 0x8e, 0x1e, 0xa7, 0xce, 0x4b, 0xa3, 0x73, 0xa0, 0x6a, 0xa6, 0x5b, 0x3c,
	0x7f, 0xe5, 0x0d, 0x54, 0x9b, 0x3d, 0xf3, 0xa0, 0x8e, 0xe3, 0xab, 0x26, 0x1e, 0xf2, 0x4c, 0x5f,
	0x68, 0x93, 0x26, 0xd0, 0xb6, 0x8a, 0xb7, 0x7e, 0x2c, 0xf1, 0xd8, 0x83, 0xd5, 0x6f, 0x5c, 0x40,
	0x57, 0x5d, 0x53, 0x14, 0xe3, 0x33, 0x54, 0x13, 0x4e, 0xae, 0xea, 0xb6, 0x62, 0x7c, 0xe6, 0xa3,
	0x42, 0xc9, 0x92, 0x97, 0xa5, 0x62, 0x72, 0xb9, 0x54, 0x28, 0xd5, 0x0e, 0xe4, 0xf4, 0x43, 0xe7,
	0x44, 0xed, 0x9c, 0x74, 0xfa, 0x06, 0x95, 0x2b, 0x75, 0xe1, 0x36, 0xd7, 0x0e, 0x9d, 0x93, 0x3a,
	0x8e, 0x67, 0x92, 0x65, 0x74, 0xa1, 0x4d, 0x5e, 0x00, 0xb1, 0x8f, 0xd5, 0xa1, 0x66, 0x6b, 0x03,
	0xbc, 0x77, 0x1c, 0x0e, 0x29, 0x29, 0x73, 0xfd, 0xd2, 0x9b, 0xcc, 0x70, 0xbc, 0x8b, 0x73, 0x5a,
	0x38, 0x85, 0xf1, 0xe6, 0x6d, 0x3f, 0x34, 0x81, 0x1a, 0x37, 0x0f, 0x57, 0xa2, 0x66, 0x1a, 0xf0,
	0x51, 0xbb, 0x6a, 0x30, 0x8e, 0xd4, 0x91, 0xa3, 0x39, 0x87, 0x23, 0x4a, 0x9b, 0xbe, 0x58, 0x0d,
	0xc6, 0x51, 0x8b, 0x8e, 0xe7, 0xd6, 0xd6, 0x85, 0x36, 0x51, 0x20, 0x6f, 0x1a, 0xaf, 0xc7, 0x45,
	0x2d, 0xea, 0x80, 0x85, 0xc3, 0xbb, 0x6f, 0x60, 0xdc, 0x36, 0x5e, 0xf3, 0x3a, 0x97, 0x69, 0x20,
	0x6b, 0x8a, 0x40, 0x90, 0x13, 0xa5, 0xcc, 0x5e, 0x81, 0x93, 0x89, 0x29, 0x70, 0xba, 0x1b, 0xef,
	0xfb, 0xc4, 0xcc, 0x5d, 0xbc, 0xf1, 0x4d, 0x9f, 0x94, 0x19, 0xbd, 0x2f, 0x08, 0xe9, 0x27, 0x44,
	0x19, 0xf3, 0x97, 0x27, 0x74, 0x35, 0xd9, 0x17, 0x24, 0xfc, 0x0e, 0xcc, 0xda, 0xc7, 0x18, 0x40,
	0xb1, 0x7e, 0xf5, 0x3c, 0x4a, 0xa6, 0xac, 0x1f, 0xbc, 0xd1, 0xec, 0x6d, 0x3a, 0x49, 0x70, 0x29,
	0xd9, 0x0e, 0x60, 0xe8, 0x53, 0x4e, 0xd8, 0x5d, 0x67, 0x2e, 0xf4, 0xa9, 0x76, 0xd8, 0x5d, 0x9d,
	0x80, 0xbb, 0xd2, 0x60, 0x76, 0x60, 0x9c, 0xd0, 0x60, 0x46, 0x2e, 0x11, 0xcc, 0x0e, 0x8c, 0x93,
	0x71, 0x30, 0x63, 0x9f, 0x59, 0x30, 0x43, 0x0e, 0x1a, 0xcc, 0x66, 0x2f, 0x11, 0xcc, 0x0e, 0x8c,
	0x13, 0x2f, 0x98, 0xf1, 0x06, 0xea, 0x10, 0x63, 0x45, 0x70, 0x9b, 0xd7, 0x2e, 0xd4, 0x61, 0x75,
	0x4d, 0x09, 0xee, 0x53, 0xd6, 0x74, 0xdb, 0xbf, 0x51, 0x05, 0xf2, 0xba, 0x71, 0xd4, 0xeb, 0xb0,
	0x34, 0x47, 0x6d, 0x7e, 0xfd, 0x42, 0xbf, 0x5c, 0xa3, 0x33, 0x30, 0xcf, 0x71, 0xbf, 0xd4, 0x45,
	0x80, 0x3c, 0x05, 0xb9, 0x6b, 0xd9, 0x1d, 0x0c, 0x49, 0xee, 0x73, 0x7f, 0xe1, 0xc6, 0xe4, 0x3a,
	0x4b, 0x20, 0x5d, 0xc7, 0x29, 0xe3, 0xa7, 0xb8, 0x8d, 0x29, 0x25, 0xd7, 0xf5, 0x21, 0xc4, 0x18,
	0x7f, 0x7f, 0x10, 0xd4, 0xc5, 0x4d, 0x4a, 0xbe, 0xf0, 0x46, 0xdd, 0xe2, 0xc4, 0xa0, 0x3a, 0x66,
	0xed, 0x30, 0x7c, 0xce, 0x32, 0xa8, 0x98, 0xc2, 0x95, 0x97, 0x61, 0xea, 0x09, 0x2d, 0x83, 0x4a,
	0x7a, 0x01, 0x64, 0x48, 0x4f, 0x45, 0xdf, 0xc2, 0x94, 0xd9, 0xb5, 0xe8, 0x4e, 0xe6, 0x2e, 0x74,
	0xde, 0x5d, 0x3c, 0x01, 0x7d, 0xcb, 0x69, 0x9a, 0x5d, 0x8b, 0x3b, 0xef, 0xd0, 0x0f, 0x91, 0x3d,
	0xb8, 0xee, 0x51, 0x8b, 0xe1, 0xa1, 0x48, 0xd9, 0xef, 0x5d, 0x82, 0xdd, 0x17, 0x24, 0xc8, 0x30,
	0x84, 0x4e, 0x5e, 0x03, 0x95, 0xf4, 0xce, 0x55, 0xd7, 0x60, 0x3a, 0x0a, 0xae, 0x81, 0x2a, 0xfa,
	0x14, 0x66, 0xf6, 0x0c, 0xad, 0x63, 0x99, 0x6e, 0x04, 0x41, 0xfe, 0x77, 0x2f, 0xd4, 0x50, 0x8d,
	0xce, 0x61, 0xb1, 0x82, 0xa7, 0x8c, 0x3d, 0x3f, 0x84, 0x5e, 0xcf, 0x99, 0xb1, 0x04, 0xa3, 0xba,
	0xf9, 0xd2, 0x85, 0x5e, 0xcf, 0x78, 0xb1, 0xda, 0xe4, 0x11, 0x7e, 0x4f, 0x04, 0x82, 0x9c, 0x28,
	0xeb, 0x7b, 0x57, 0xe0, 0xe4, 0x27, 0x69, 0x4f, 0x04, 0x84, 0xd3, 0x39, 0xb0, 0x74, 0x83, 0x06,
	0xa3, 0x5b, 0x97, 0x3c, 0x9d, 0x5b, 0x96, 0x6e, 0xb0, 0x88, 0xc4, 0x4f, 0x27, 0x07, 0xf0, 0x74,
	0x8a, 0x9c, 0x34, 0x38, 0xdd, 0xbe, 0xf0, 0x74, 0x7a, 0xa4, 0x3c, 0x42, 0xe5, 0x74, 0x1f, 0x52,
	0x54, 0x20, 0xe5, 0x96, 0x74, 0x64, 0x1d, 0xb2, 0x83, 0x9e, 0x69, 0xd9, 0xea, 0x91, 0x61, 0x8f,
	0xf0, 0xd2, 0x7d, 0xde, 0x97, 0x6e, 0x38, 0xc8, 0x2b, 0x36, 0x0b, 0x92, 0x92, 0xa1, 0xf3, 0x9e,
	0xb1, 0x69, 0xc5, 0x16, 0x4c, 0x8f, 0x2b, 0xbc, 0xb7, 0x46, 0xaa, 0x42, 0x46, 0xac, 0xf5, 0xc8,
	0x6d, 0x48, 0x0c, 0x34, 0x7b, 0xbf, 0xc7, 0x08, 0xc7, 0xdf, 0xb3, 0xfd, 0xaf, 0xa4, 0x70, 0x9c,
	0xdc, 0x83, 0xac, 0x7b, 0x43, 0xed, 0x58, 0x87, 0x66, 0xf8, 0x0b, 0x39, 0xf7, 0x02, 0x5b, 0xc7,
	0xde, 0xe2, 0x9f, 0x44, 0x00, 0xbc, 0xf2, 0x8f, 0xec, 0x40, 0x7e, 0x7c, 0xe7, 0x11, 0x5e, 0x32,
	0xae, 0xf0, 0x78, 0x99, 0xd5, 0xc5, 0x0e, 0x72, 0x0f, 0x72, 0xee, 0x9b, 0x87, 0xf8, 0x6a, 0x40,
	0xef, 0x15, 0xa5, 0x48, 0x21, 0xaf, 0x64, 0xf8, 0x13, 0x08, 0x1b, 0xfe, 0x01, 0x64, 0xdc, 0xf3,
	0x39, 0xd0, 0x46, 0x07, 0xec, 0x19, 0x92, 0xb2, 0xff, 0x50, 0x8a, 0xc8, 0xb2, 0x92, 0xe6, 0xbd,
	0x5b, 0xda, 0xe8, 0x80, 0x3c, 0x82, 0x6b, 0xe2, 0x60, 0xf4, 0x0e, 0xc7, 0xb6, 0xfa, 0xec, 0x91,
	0xdf, 0x5d, 0x21, 0xa9, 0x10, 0x61, 0x4e, 0x9d, 0x0d, 0x21, 0xf3, 0x90, 0x32, 0xf7, 0x54, 0xc7,
	0x46, 0xc7, 0x4f, 0xf8, 0x05, 0x4a, 0x9a, 0x7b, 0x6d, 0xc4, 0xd9, 0x5d, 0xa5, 0xf8, 0x43, 0x69,
	0xac, 0x20, 0x34, 0xc0, 0x5d, 0x90, 0x7d, 0x6b, 0x6a, 0x9d, 0x03, 0xfe, 0x65, 0x5b, 0x4e, 0x58,
	0xa6, 0xda, 0x39, 0x20, 0xf7, 0x60, 0x36, 0xa0, 0x4a, 0x3a, 0x98, 0x7d, 0xff, 0x26, 0xfb, 0xb4,
	0x84, 0xc3, 0x3f, 0x60, 0xf5, 0x81, 0xa7, 0x28, 0xd5, 0xfb, 0x56, 0x2e, 0x2f, 0xea, 0xa8, 0xda,
	0x39, 0x28, 0x76, 0x20, 0x23, 0xd6, 0xc6, 0xa4, 0x05, 0xb9, 0x81, 0x76, 0xac, 0x7a, 0x05, 0x36,
	0xb7, 0x5a, 0xa8, 0x0c, 0xa8, 0xee, 0xef, 0xdb, 0x06, 0x3a, 0x80, 0x3e, 0x9e, 0x2f, 0xd8, 0x2e,
	0x33, 0xd0, 0x8e, 0xc7, 0x78, 0xf1, 0xbf, 0x24, 0xc8, 0x07, 0x8a, 0x65, 0xf2, 0x0c, 0x6b, 0x24,
	0xe1, 0x5e, 0xfc, 0xab, 0xf9, 0x88, 0x2c, 0x5c, 0x96, 0x99, 0xdd, 0x5f, 0xc0, 0x35, 0xdf, 0x95,
	0xde, 0x7d, 0x80, 0x8f, 0x5c, 0xf1, 0x01, 0x7e, 0x46, 0xb8, 0xe9, 0xf3, 0x67, 0xf8, 0x85, 0xe0,
	0x65, 0x1c, 0x75, 0x1a, 0xa3, 0xdf, 0xb1, 0x56, 0x62, 0x77, 0xff, 0xf4, 0x0f, 0x13, 0xfe, 0x7b,
	0x79, 0xf1, 0xaf, 0x02, 0xdb, 0x46, 0xab, 0x2f, 0xc3, 0xcd, 0x09, 0xdb, 0x16, 0x8c, 0x3f, 0x1b,
	0xdc, 0x11, 0x9a, 0x74, 0x05, 0x0a, 0x93, 0x36, 0x25, 0xb8, 0xc1, 0xb5, 0x90, 0xb8, 0x38, 0xaf,
	0x04, 0x33, 0x3e, 0x89, 0x45, 0x4f, 0x10, 0x45, 0x45, 0x4f, 0xf8, 0x6d, 0xc8, 0x88, 0xd7, 0x03,
	0x32, 0x0f, 0xc9, 0x3d, 0xcd, 0x71, 0x0c, 0xfb, 0xc4, 0x1f, 0x21, 0xbe, 0x90, 0x14, 0xb7, 0x83,
	0x94, 0xc6, 0x41, 0x04, 0xa5, 0x88, 0xd7, 0xc8, 0xe7, 0xb5, 0x7c, 0x31, 0x5b, 0xb8, 0x75, 0xf7,
	0xe7, 0x5f, 0xf0, 0x7f, 0xe3, 0x70, 0x52, 0xfc, 0x51, 0x04, 0xb2, 0xbe, 0xdb, 0x02, 0x06, 0x18,
	0xf7, 0x04, 0x08, 0x4f, 0x9d, 0x62, 0x80, 0xe1, 0xdd, 0xcc, 0xb2, 0x5f, 0x15, 0x5f, 0x7c, 0x23,
	0x54, 0xf5, 0xe9, 0xcf, 0x6b, 0xa9, 0x4a, 0xa2, 0x30, 0x45, 0x95, 0x2f, 0x3c, 0xff, 0x3e, 0x83,
	0xd9, 0x41, 0xcf, 0x0c, 0x39, 0x57, 0xf4, 0x8a, 0xce, 0x35, 0xe8, 0x99, 0x7e, 0xe7, 0x42, 0x5e,
	0x3c, 0x1d, 0x01, 0xde, 0xd8, 0x55, 0x79, 0xb5, 0x63, 0x5f, 0x5f, 0xf1, 0x53, 0x51, 0x35, 0xa8,
	0xfc, 0x3b, 0x90, 0xf5, 0x1b, 0x8d, 0x39, 0x47, 0xa6, 0x2b, 0x58, 0x8c, 0xcc, 0x43, 0xd6, 0x93,
	0xc4, 0x73, 0x85, 0xb4, 0x1b, 0x11, 0xd0, 0xaa, 0x5d, 0xc8, 0x88, 0x77, 0x9f, 0xab, 0xea, 0xfc,
	0x2b, 0x61, 0x9d, 0x0b, 0xee, 0xee, 0xf5, 0x61, 0x7a, 0x11, 0xaf, 0x44, 0xe8, 0x79, 0xbe, 0x75,
	0x84, 0x4d, 0xe4, 0xc5, 0x15, 0x70, 0x1f, 0xa1, 0xcd, 0x46, 0xc2, 0x9b, 0x2d, 0x3e, 0x01, 0x39,
	0x78, 0x3b, 0x22, 0x0f, 0x21, 0xce, 0x9e, 0xfe, 0xa4, 0xcb, 0x3e, 0xfd, 0xb1, 0xf1, 0xc5, 0xbf,
	0x95, 0x20, 0x1f, 0xb8, 0x0e, 0x91, 0xc7, 0x2c, 0xf2, 0x19, 0x3d, 0x7b, 0xe8, 0x8b, 0x45, 0xe1,
	0xaf, 0x1e, 0x69, 0x05, 0xd0, 0x68, 0x2a, 0xbb, 0x81, 0x80, 0xd7, 0xe8, 0xd9, 0x43, 0xa6, 0xb6,
	0x12, 0xcc, 0xf0, 0xc7, 0x58, 0xfd, 0xb5, 0xd1, 0xef, 0xb3, 0xb7, 0x34, 0xb6, 0xab, 0x3c, 0xeb,
	0x58, 0x43, 0x9c, 0x3e, 0x99, 0x2d, 0xc0, 0xec, 0xf8, 0x21, 0x54, 0x18, 0xcd, 0x4e, 0xe9, 0x8c,
	0xdb, 0x35, 0x1e, 0x5f, 0xdc, 0xc5, 0x8a, 0x83, 0xdf, 0xb5, 0xd6, 0xae, 0x54, 0x1c, 0x88, 0xd2,
	0x8a, 0xa5, 0xc1, 0x37, 0xb1, 0xde, 0x70, 0xef, 0x5d, 0x6f, 0x87, 0xf2, 0xa7, 0x12, 0xc8, 0xc1,
	0x8b, 0x18, 0xd9, 0x83, 0x1b, 0xee, 0xef, 0x47, 0xfa, 0xbd, 0x41, 0xcf, 0x51, 0x8d, 0xe3, 0xa1,
	0x65, 0x1a, 0xa6, 0x73, 0x6e, 0x8e, 0x59, 0x53, 0xaa, 0x9d, 0x83, 0x4d, 0x1c, 0xdb, 0xe0, 0x43,
	0x85, 0x15, 0x67, 0xd9, 0x2f, 0x4f, 0x7c, 0xdd, 0xe2, 0x1a, 0xd4, 0xd4, 0xde, 0x1a, 0x91, 0x37,
	0xad, 0x41, 0xfd, 0xe4, 0xfc, 0x35, 0x7c, 0xdd, 0xc5, 0x26, 0x64, 0x7d, 0x57, 0x41, 0xfa, 0xe5,
	0xe9, 0xa5, 0xbe, 0x30, 0xa2, 0xcc, 0x3f, 0x91, 0x22, 0x29, 0x89, 0x7d, 0x75, 0x54, 0xfc, 0x49,
	0x04, 0x72, 0xfe, 0x1b, 0xe0, 0x5b, 0xfe, 0xf1, 0xc6, 0x84, 0x32, 0x2c, 0xf2, 0x6b, 0x95, 0x61,
	0x77, 0x21, 0x8d, 0xc7, 0xc4, 0x36, 0xe8, 0x0f, 0x16, 0xf9, 0xcf, 0x8c, 0xc6, 0x15, 0x12, 0x0c,
	0xb4, 0x63, 0x85, 0x75, 0x91, 0xe7, 0x90, 0x1f, 0x1a, 0x76, 0xcf, 0xd2, 0x3d, 0x1b, 0xc4, 0x26,
	0x3f, 0xc6, 0xf2, 0xfb, 0x23, 0x1d, 0x3c, 0xc1, 0x08, 0xb9, 0xa1, 0xaf, 0xa7, 0xf8, 0xaf, 0x12,
	0xcc, 0x4e, 0xb8, 0xd9, 0x92, 0x6f, 0x03, 0x41, 0xd1, 0x68, 0xb1, 0x7a, 0xa1, 0x6f, 0x31, 0x02,
	0x5a, 0xba, 0x4e, 0x58, 0x12, 0x43, 0xb4, 0xaf, 0x0f, 0x6f, 0x65, 0x48, 0x4e, 0x9f, 0x0b, 0x02,
	0x3e, 0x35, 0x3f, 0x99, 0x1b, 0xad, 0x3e, 0x81, 0x3a, 0x3f, 0xd0, 0x8e, 0xc5, 0xae, 0xe2, 0x46,
	0x78, 0x37, 0xe8, 0x54, 0x65, 0xb8, 0x1e, 0x5a, 0x50, 0x88, 0xa2, 0x24, 0x40, 0x83, 0x31, 0xb2,
	0x05, 0xf9, 0xc0, 0x3d, 0x99, 0x7c, 0x0c, 0x09, 0xa6, 0xbd, 0xf3, 0x7e, 0x81, 0xe0, 0x4e, 0x60,
	0xda, 0x17, 0xe4, 0xe4, 0xf3, 0x8a, 0x7f, 0x2c, 0x01, 0x09, 0xdf, 0x8f, 0xfd, 0xd9, 0x58, 0x7a,
	0x63, 0x36, 0x7e, 0xdb, 0x3e, 0x58, 0x7c, 0x19, 0x92, 0xe8, 0xd2, 0x39, 0xf3, 0x6a, 0xb5, 0x74,
	0x51, 0x83, 0x7c, 0xe0, 0x5e, 0x4d, 0x6e, 0x89, 0x49, 0xc7, 0xf7, 0x0b, 0x3b, 0x86, 0x87, 0x53,
	0x6c, 0xe4, 0x4d, 0x29, 0xb6, 0xf8, 0x35, 0xc8, 0xfa, 0xae, 0xd8, 0x57, 0xd0, 0x6c, 0x71, 0x59,
	0x9c, 0x7b, 0x59, 0x1d, 0x14, 0xd7, 0xdd, 0xf8, 0xe5, 0xde, 0x8d, 0x1f, 0x5c, 0xe6, 0x8b, 0x3b,
	0x31, 0x8b, 0xd2, 0xd1, 0xc5, 0x4f, 0x20, 0xe7, 0xbf, 0x1f, 0xff, 0x8a, 0x44, 0xb5, 0x69, 0x48,
	0xf2, 0xaf, 0x58, 0xe6, 0x1f, 0x41, 0x6e, 0x5c, 0x95, 0x3e, 0xd3, 0xfa, 0x87, 0x06, 0xea, 0xfb,
	0x08, 0x3f, 0x70, 0x55, 0x08, 0xe5, 0x07, 0xc3, 0xbf, 0x96, 0x38, 0x3b, 0x9d, 0x8b, 0x14, 0xa4,
	0xf9, 0xef, 0xc2, 0xac, 0xbf, 0x02, 0x66, 0xf3, 0xbf, 0x21, 0xce, 0xbf, 0xca, 0x0d, 0x20, 0x40,
	0xff, 0x6d, 0x20, 0x3e, 0xf7, 0x64, 0xec, 0x1f, 0xfa, 0xd9, 0x2f, 0xff, 0xcb, 0x9c, 0x90, 0xec,
	0xfe, 0x83, 0x78, 0x39, 0xd9, 0xcf, 0x3d, 0xbc, 0x01, 0xfa, 0x7d, 0x28, 0x4c, 0xb8, 0xaf, 0xb1,
	0x35, 0xea, 0xfe, 0x35, 0xae, 0x78, 0xd1, 0x0b, 0x2c, 0xb4, 0x03, 0x19, 0x5e, 0x74, 0x31, 0xf2,
	0x87, 0x7e, 0xf2, 0xcb, 0x54, 0x68, 0x61, 0xc9, 0xc3, 0x55, 0xc0, 0x25, 0x25, 0x7f, 0x63, 0xf9,
	0x70, 0xde, 0x42, 0xbe, 0x5c, 0x7f, 0x95, 0x85, 0xce, 0xab, 0x21, 0x02, 0x0b, 0x3d, 0x85, 0xbc,
	0x57, 0x41, 0x32, 0xfe, 0xaf, 0xf9, 0xf9, 0x2f, 0x57, 0x71, 0xfa, 0x69, 0x4b, 0x7f, 0x21, 0x41,
	0x9c, 0xfe, 0x9a, 0x9b, 0xc8, 0x90, 0x79, 0xbc, 0xd3, 0xdc, 0x56, 0x95, 0xc6, 0x37, 0x9f, 0x36,
	0x5a, 0x6d, 0x79, 0x8a, 0xe4, 0x21, 0x4d, 0x91, 0x6a, 0xbd, 0xde, 0xd8, 0x6d, 0xcb, 0x12, 0x21,
	0x90, 0x7b, 0xba, 0x5d, 0xdf, 0xd9, 0x5e, 0x6f, 0x2a, 0x5b, 0x8d, 0x35, 0xf5, 0xe9, 0xae, 0x1c,
	0x21, 0xd7, 0x40, 0x16, 0xb1, 0xb5, 0x9d, 0xe7, 0xdb, 0x72, 0x14, 0xc9, 0x7c, 0xe3, 0x62, 0x38,
	0x37, 0x30, 0x2a, 0x8e, 0x98, 0xd2, 0xf0, 0x2d, 0x9a, 0xc0, 0x45, 0x77, 0x95, 0x9d, 0x5d, 0xa5,
	0xd9, 0x68, 0x57, 0x95, 0x17, 0x72, 0xb2, 0xe8, 0x4a, 0x7a, 0x17, 0xe2, 0xf4, 0xf7, 0xe3, 0x24,
	0x07, 0xb0, 0xb9, 0xa3, 0x54, 0x9f, 0x57, 0xb7, 0x55, 0xa5, 0x2c, 0x4f, 0x15, 0xf3, 0x67, 0xa7,
	0x73, 0xe9, 0x82, 0x54, 0x4a, 0x72, 0xb4, 0xf4, 0x4b, 0xf6, 0x7b, 0x72, 0x5e, 0x54, 0x92, 0xf7,
	0x20, 0xbd, 0x55, 0xad, 0xab, 0x4f, 0xb7, 0x9f, 0x6c, 0xe3, 0xb2, 0x53, 0xc5, 0xec, 0xd9, 0xe9,
	0xdc, 0x34, 0x49, 0x1e, 0x9a, 0x07, 0xa6, 0xf5, 0x1a, 0xfb, 0x53, 0xd8, 0xff, 0xac, 0xac, 0x2e,
	0xca, 0x52, 0x51, 0x3e, 0x3b, 0x9d, 0xcb, 0x90, 0x68, 0x79, 0x61, 0x91, 0xc4, 0xcb, 0x0b, 0x8b,
	0x0b, 0x8b, 0xe4, 0x1d, 0xca, 0x46, 0xfb, 0xd5, 0xb2, 0x1c, 0x29, 0xa6, 0xcf, 0x4e, 0xe7, 0x92,
	0xac, 0xb3, 0xec, 0xeb, 0xac, 0xc8, 0x51, 0xb1, 0xb3, 0x22, 0x30, 0x97, 0xe5, 0x98, 0xc7, 0x5c,
	0xc6, 0xfe, 0x72, 0x80, 0x79, 0x49, 0x8e, 0x8b, 0x93, 0x97, 0x7c, 0x9d, 0xcb, 0x72, 0x42, 0xec,
	0x5c, 0x66, 0x8d, 0x82, 0x54, 0x8a, 0x6e, 0x55, 0xeb, 0xa5, 0x5f, 0xc6, 0x00, 0x76, 0x37, 0x5e,
	0x08, 0xfb, 0xdd, 0xdd, 0x78, 0x71, 0xfe, 0x7e, 0xdf, 0x87, 0x14, 0xf6, 0xf3, 0xfd, 0xde, 0x38,
	0x3b, 0x9d, 0x23, 0xbe, 0xfd, 0xc6, 0xb0, 0x07, 0xb5, 0xdc, 0x6e, 0x2d, 0x2e, 0x96, 0xf9, 0x38,
	0x72, 0x87, 0xae, 0xe1, 0x69, 0x61, 0xf6, 0xec, 0x74, 0x2e, 0xef, 0x6a, 0x21, 0xc1, 0x60, 0x34,
	0xbb, 0x37, 0x09, 0x87, 0x91, 0x8f, 0x41, 0x1e, 0x4f, 0xab, 0xa8, 0x4a, 0xe3, 0x99, 0x5a, 0x95,
	0xa3, 0xc5, 0xd2, 0xd9, 0xe9, 0xdc, 0x6f, 0xba, 0x5a, 0x4a, 0xd2, 0xff, 0xee, 0x69, 0x9c, 0xa5,
	0x42, 0x32, 0xe2, 0x68, 0xe4, 0x54, 0x76, 0xc7, 0x9c, 0x15, 0x39, 0x4a, 0xca, 0x21, 0xce, 0x9a,
	0x1c, 0x2b, 0xbe, 0x73, 0x76, 0x3a, 0x77, 0xd3, 0x25, 0xdb, 0xf3, 0x91, 0xd4, 0xc8, 0x0d, 0x20,
	0x22, 0x89, 0x3b, 0x89, 0x2c, 0x43, 0x8e, 0x53, 0x95, 0xb9, 0x70, 0xf1, 0xe2, 0xed, 0xb3, 0xd3,
	0xb9, 0x77, 0xa9, 0x89, 0xee, 0x69, 0xc8, 0x57, 0x5e, 0x58, 0xbc, 0xa7, 0x11, 0xf0, 0xc6, 0xa0,
	0xcf, 0x8f, 0xd9, 0xc6, 0xf3, 0x42, 0x5c, 0x35, 0x39, 0x21, 0x72, 0xed, 0xb9, 0x5c, 0x7b, 0x02,
	0x57, 0x6d, 0x02, 0x57, 0x4d, 0x4e, 0xf8, 0xb6, 0xb8, 0xc4, 0x57, 0x48, 0x8a, 0x5b, 0x5c, 0xba,
	0xa7, 0xf1, 0x2d, 0xf2, 0xee, 0xc0, 0x16, 0xc7, 0x93, 0x5c, 0xfd, 0x55, 0x18, 0xbe, 0x28, 0xa7,
	0x02, 0x48, 0x59, 0x9e, 0x0e, 0x20, 0x15, 0x19, 0x02, 0xc8, 0x92, 0x9c, 0x2e, 0xa6, 0xd8, 0x39,
	0x94, 0xa5, 0xd2, 0xdf, 0x44, 0x20, 0xeb, 0x7f, 0xe0, 0xc8, 0x43, 0x7a, 0xad, 0xda, 0xae, 0xaa,
	0x4a, 0xb5, 0xdd, 0x50, 0x17, 0x59, 0xe8, 0xf0, 0x80, 0xb2, 0x2c, 0xf9, 0x81, 0x8a, 0x1c, 0xf1,
	0x03, 0x4b, 0x72, 0xd4, 0x0f, 0x2c, 0xcb, 0x31, 0x3f, 0xf0, 0x40, 0x8e, 0xfb, 0x81, 0x15, 0x16,
	0x2b, 0x3c, 0xe0, 0xa1, 0x9c, 0xf4, 0x03, 0xab, 0x72, 0xca, 0x0f, 0x3c, 0x62, 0x3b, 0x15, 0x04,
	0x5b, 0x64, 0x3b, 0x15, 0x90, 0xb2, 0x9c, 0x0e, 0x20, 0x15, 0x39, 0x13, 0x40, 0x96, 0xe4, 0x6c,
	0x00, 0x59, 0x96, 0x73, 0x01, 0xe4, 0x81, 0x9c, 0x2f, 0xce, 0x9c, 0x9d, 0xce, 0x65, 0x65, 0xa9,
	0x34, 0x3d, 0xc6, 0x4b, 0x67, 0x12, 0xe4, 0x02, 0xcf, 0x83, 0x37, 0x80, 0x78, 0xf3, 0x76, 0xd6,
	0xd7, 0x5b, 0x8d, 0x36, 0x55, 0xe1, 0x24, 0x1c, 0x35, 0x39, 0x09, 0x47, 0x85, 0x4e, 0xc2, 0x51,
	0xaf, 0x93, 0x70, 0x54, 0xef, 0x24, 0x1c, 0xb5, 0x3c, 0x09, 0x47, 0x65, 0x4f, 0xc2, 0x1f, 0xca,
	0xc9, 0x62, 0xe1, 0xec, 0x74, 0xee, 0x9a, 0x2c, 0x95, 0xe4, 0x60, 0x6f, 0xe9, 0xbb, 0x90, 0x7f,
	0xec, 0xbf, 0x6d, 0x0a, 0x11, 0xbf, 0xbe, 0xb3, 0xdd, 0x6e, 0x7c, 0x8a, 0x69, 0xc6, 0xc3, 0x5a,
	0x8d, 0x56, 0xab, 0xb9, 0xb3, 0xcd, 0xdc, 0x85, 0x63, 0x4f, 0x1a, 0x2f, 0x5a, 0x72, 0x84, 0x4c,
	0x43, 0x0c, 0x9b, 0xf2, 0x17, 0xd2, 0x38, 0x21, 0x7c, 0x04, 0x33, 0xa1, 0xeb, 0x2c, 0x49, 0x43,
	0xd2, 0x63, 0x4e, 0x43, 0xd2, 0xa3, 0x4c, 0x41, 0x8c, 0x71, 0x8d, 0x09, 0x56, 0x01, 0xbc, 0x1f,
	0x28, 0xe3, 0x92, 0xeb, 0x34, 0x0d, 0x6d, 0xd7, 0x9b, 0x8d, 0x96, 0x3c, 0x45, 0x66, 0x20, 0x5b,
	0xdf, 0xa8, 0x6e, 0x6f, 0x37, 0x36, 0xd5, 0xad, 0x6a, 0xeb, 0x49, 0x4b, 0xf6, 0x96, 0xfe, 0x10,
	0xe2, 0xb4, 0x26, 0xa5, 0xcb, 0x6d, 0x56, 0x5b, 0x2d, 0xb5, 0xca, 0x96, 0x63, 0x8d, 0x9a, 0x2c,
	0x79, 0x8d, 0xba, 0x1c, 0x61, 0x11, 0xb8, 0x20, 0x95, 0xe2, 0x14, 0x2a, 0x1d, 0x03, 0x09, 0xff,
	0xb2, 0x8a, 0x00, 0x24, 0x36, 0x77, 0x9e, 0xb3, 0xd4, 0x9b, 0x84, 0xe8, 0xe6, 0xce, 0x73, 0x59,
	0x42, 0xaf, 0xaa, 0x35, 0x36, 0x77, 0x9e, 0xab, 0xdb, 0x3b, 0xca, 0x56, 0x75, 0x53, 0x8e, 0xe0,
	0x30, 0xfe, 0x99, 0xa6, 0xd9, 0x6a, 0x6d, 0xe7, 0x59, 0xc3, 0xed, 0x8d, 0xe1, 0x2e, 0x37, 0x9a,
	0x9f, 0x6c, 0xc8, 0x71, 0x14, 0x00, 0x3f, 0xd1, 0xac, 0x3a, 0x16, 0xfc, 0x3f, 0xa2, 0x70, 0x6d,
	0xd2, 0x6f, 0x98, 0x48, 0x16, 0xa6, 0xeb, 0xcd, 0x35, 0x55, 0x59, 0x7f, 0x4a, 0x9d, 0xcf, 0x6d,
	0x36, 0x5a, 0x0d, 0x9e, 0xf8, 0xb1, 0xb9, 0xd9, 0xdc, 0x7e, 0xa2, 0xd6, 0x37, 0x1a, 0xf5, 0x27,
	0x72, 0x84, 0xa6, 0x78, 0x17, 0xab, 0xae, 0x29, 0x72, 0xd4, 0x1d, 0xb5, 0xf6, 0xb4, 0xfd, 0x42,
	0xad, 0xbf, 0xa8, 0x6f, 0x36, 0x98, 0x97, 0x51, 0xa2, 0x4f, 0xd5, 0xdd, 0xaa, 0x52, 0xdd, 0x52,
	0x5b, 0x8d, 0xf6, 0xd3, 0x5d, 0x96, 0xfa, 0xe9, 0xd8, 0xc6, 0x33, 0xb5, 0xd5, 0xae, 0xb6, 0x9f,
	0xb6, 0xe4, 0x04, 0x99, 0x85, 0x3c, 0x62, 0xdb, 0x8d, 0xe7, 0x2a, 0x57, 0xbc, 0x9c, 0x24, 0x37,
	0x61, 0x96, 0x13, 0xb4, 0x9b, 0x5b, 0xcd, 0xed, 0x4f, 0x38, 0x43, 0xca, 0x65, 0x6e, 0xfb, 0x99,
	0xa7, 0xc7, 0xcc, 0x9b, 0x63, 0x12, 0xf0, 0xb6, 0xf3, 0xa4, 0xf1, 0x42, 0x4e, 0xbb, 0x9c, 0xd5,
	0x35, 0xc5, 0x37, 0x37, 0xe3, 0x4a, 0xb0, 0xd6, 0x78, 0xd6, 0xac, 0x37, 0x70, 0xc1, 0x86, 0x9c,
	0xc5, 0x08, 0x8d, 0xe0, 0xfa, 0x8e, 0x52, 0x6f, 0xa8, 0xcc, 0x2b, 0xe5, 0x1c, 0x29, 0xc2, 0x0d,
	0x46, 0x49, 0xbd, 0x54, 0xa4, 0xc9, 0xbb, 0xa2, 0xed, 0x52, 0x71, 0x37, 0x77, 0xda, 0x6a, 0x73,
	0x7b, 0x7d, 0x47, 0x96, 0xc9, 0x1c, 0x5c, 0xf7, 0xe3, 0xae, 0x84, 0x33, 0xe4, 0x3a, 0xcc, 0x60,
	0x57, 0xad, 0x51, 0xad, 0xef, 0x6c, 0xf3, 0xad, 0xca, 0xc4, 0x15, 0x88, 0xc3, 0xe8, 0x9f, 0xf2,
	0x6c, 0x40, 0xca, 0xad, 0x9d, 0xb5, 0x86, 0x7c, 0xdb, 0xab, 0x08, 0xea, 0xcd, 0xb5, 0xd2, 0x7f,
	0x46, 0x60, 0x76, 0x42, 0x01, 0x4e, 0x63, 0xd4, 0xd8, 0x3a, 0x6a, 0x59, 0x9e, 0x0a, 0x20, 0x15,
	0xe6, 0x71, 0x02, 0xb2, 0xcc, 0x2c, 0x2d, 0x20, 0xab, 0x72, 0x14, 0x8f, 0x86, 0xc8, 0xb3, 0x22,
	0xc7, 0x02, 0xd0, 0x52, 0x45, 0x8e, 0x07, 0xa0, 0x95, 0x65, 0x39, 0x81, 0xc6, 0x11, 0x27, 0x56,
	0x56, 0xe5, 0x64, 0x00, 0xab, 0x3c, 0x58, 0x91, 0x53, 0x01, 0xec, 0x41, 0xb9, 0x22, 0x4f, 0xe3,
	0xb6, 0xc5, 0xb9, 0x8b, 0x95, 0x65, 0x19, 0x02, 0x60, 0x65, 0x71, 0x79, 0x55, 0x4e, 0x07, 0xc0,
	0xe5, 0xc5, 0x47, 0x2b, 0xcc, 0xb6, 0xe2, 0x2e, 0xca, 0x8f, 0x2a, 0xcc, 0xb6, 0xbe, 0x8d, 0x2c,
	0xad, 0x62, 0x28, 0xf7, 0xa3, 0x4b, 0x95, 0x87, 0x2b, 0xab, 0x72, 0xbe, 0x48, 0xce, 0x4e, 0xe7,
	0x72, 0x05, 0xa9, 0x04, 0x5e, 0x5f, 0xe9, 0x9f, 0x24, 0xc8, 0xf9, 0x6f, 0x53, 0xb8, 0x6b, 0x6a,
	0xe0, 0xc6, 0xb3, 0x86, 0xf2, 0x42, 0x2d, 0xf3, 0x48, 0x22, 0x40, 0x95, 0x96, 0x2c, 0x05, 0xa0,
	0x65, 0x0c, 0x71, 0x7e, 0x68, 0xb5, 0xc5, 0x4e, 0x94, 0xc8, 0xb5, 0xd2, 0x62, 0x85, 0xb4, 0x80,
	0x2d, 0x55, 0x5a, 0xec, 0x34, 0x09, 0xd8, 0xca, 0x32, 0x3f, 0x4d, 0xe2, 0xdc, 0xca, 0x6a, 0x4b,
	0x4e, 0x7a, 0x7b, 0xf0, 0xba, 0x4a, 0x3f, 0x8e, 0xba, 0x2f, 0x49, 0xfe, 0xa7, 0xab, 0x59, 0xc8,
	0x8f, 0x63, 0xf5, 0xd3, 0xed, 0x36, 0x9a, 0x79, 0x2a, 0x04, 0x2e, 0xa1, 0xcb, 0x04, 0xc1, 0x95,
	0x65, 0x76, 0x31, 0xf0, 0x4f, 0xaf, 0xa0, 0xe7, 0x04, 0x51, 0x34, 0x77, 0x2c, 0x84, 0xa2, 0xc1,
	0xe3, 0x78, 0x26, 0xfc, 0x0c, 0x68, 0xf2, 0x44, 0x08, 0xa6, 0x46, 0x4f, 0x86, 0x60, 0x6a, 0xf6,
	0x54, 0x08, 0xa6, 0x86, 0x9f, 0xa6, 0xd5, 0x92, 0x7f, 0x73, 0x68, 0x7a, 0x08, 0xe1, 0xcc, 0xf8,
	0xe9, 0x10, 0xbe, 0xf2, 0xe0, 0xc1, 0x12, 0x7a, 0xd5, 0x4d, 0x98, 0xf5, 0xf3, 0x2c, 0x95, 0x17,
	0x1f, 0xa2, 0x67, 0x05, 0x3b, 0x2a, 0x2b, 0x95, 0xf2, 0x32, 0x3a, 0x57, 0xb0, 0xe3, 0x41, 0x65,
	0xb9, 0xb2, 0x8a, 0xfe, 0x75, 0xed, 0xec, 0x74, 0x4e, 0x2e, 0x48, 0xa5, 0x8c, 0xd8, 0x5d, 0xfa,
	0xf7, 0x08, 0x90, 0xf0, 0xc3, 0x20, 0x3a, 0x0b, 0x1f, 0x86, 0x51, 0x8a, 0xc6, 0xec, 0x00, 0x54,
	0x66, 0x5e, 0x26, 0x42, 0x15, 0xe6, 0x65, 0x22, 0xb4, 0xc4, 0x4e, 0xb3, 0x08, 0x2d, 0xb3, 0xd3,
	0x2c, 0x42, 0x0f, 0xd8, 0x69, 0x16, 0x21, 0x2c, 0x09, 0x02, 0x10, 0x56, 0x60, 0x01, 0x08, 0x6b,
	0xb0, 0x00, 0xf4, 0x88, 0xc5, 0x68, 0x9f, 0xa8, 0x58, 0x87, 0x05, 0x31, 0xac, 0xc4, 0x82, 0x18,
	0xd6, 0x62, 0x41, 0x0c, 0xab, 0xb1, 0x20, 0x86, 0x7a, 0x0e, 0x62, 0x58, 0x91, 0xd1, 0x4b, 0x4b,
	0x41, 0x2a, 0xa5, 0x85, 0x9e, 0xd2, 0xbf, 0x49, 0xee, 0xdf, 0x43, 0xfa, 0x9f, 0x92, 0x05, 0xb7,
	0xde, 0x6d, 0x28, 0xcd, 0x9d, 0x35, 0xaa, 0xe5, 0x10, 0x58, 0xf6, 0x1d, 0x00, 0x0e, 0xa2, 0xa6,
	0x43, 0x20, 0xea, 0x3a, 0x04, 0xa2, 0xb6, 0x43, 0x20, 0xea, 0x3b, 0x04, 0xae, 0xb0, 0x43, 0xed,
	0x07, 0xb1, 0x02, 0xbb, 0x7e, 0x76, 0x3a, 0x37, 0x53, 0x90, 0x4a, 0x59, 0x5f, 0x57, 0xe9, 0xe7,
	0x11, 0x00, 0xef, 0x09, 0x80, 0x46, 0x63, 0x96, 0x31, 0xb0, 0xa9, 0xae, 0xb2, 0xca, 0x4b, 0x84,
	0xca, 0x8b, 0x2c, 0xd5, 0xfb, 0x30, 0xdc, 0x49, 0x10, 0x5b, 0x62, 0xa1, 0xc9, 0x87, 0x2d, 0xb3,
	0xd0, 0xe4, 0xc3, 0x56, 0x58, 0x68, 0xf2, 0x61, 0xab, 0x3c, 0x0b, 0x08, 0x58, 0x65, 0x91, 0x67,
	0x01, 0x11, 0x2b, 0xf3, 0x2c, 0x20, 0x62, 0xcb, 0xcc, 0x75, 0x7c, 0xd8, 0x0a, 0x73, 0x1d, 0x1f,
	0xf6, 0x90, 0xb9, 0x8e, 0x0f, 0x7b, 0xc4, 0x5c, 0x47, 0xc4, 0x96, 0x16, 0x99, 0xeb, 0xf8, 0xb0,
	0x25, 0xe6, 0x3a, 0x3e, 0x6c, 0x45, 0x74, 0x1d, 0xa1, 0xa7, 0xf4, 0xa3, 0x28, 0xcc, 0x4e, 0x78,
	0x2e, 0x42, 0x33, 0x61, 0x71, 0x51, 0xad, 0x3f, 0x51, 0x37, 0x9b, 0x5b, 0xcd, 0x36, 0x4d, 0xb5,
	0x21, 0x90, 0x87, 0x4e, 0x3f, 0xb8, 0xcc, 0x3c, 0xc7, 0x0f, 0xf2, 0xc8, 0x19, 0xe0, 0xe4, 0x91,
	0xd3, 0x8f, 0xd2, 0xcc, 0x1b, 0x42, 0x57, 0x78, 0xe0, 0x0c, 0x30, 0x54, 0x78, 0xe0, 0x0c, 0xc8,
	0xf5, 0x80, 0x07, 0x4e, 0x3f, 0xcc, 0xb2, 0xf0, 0x0d, 0x20, 0x01, 0x12, 0x96, 0x88, 0x43, 0x38,
	0xcf, 0xc5, 0x21, 0x9c, 0xa7, 0xe3, 0x10, 0xce, 0x33, 0xf2, 0x4d, 0xaa, 0x51, 0xdf, 0x36, 0x59,
	0x52, 0x0e, 0x75, 0xb8, 0x79, 0x79, 0xec, 0xfe, 0xbe, 0x6e, 0xc1, 0x36, 0xbe, 0x17, 0x36, 0x51,
	0xb9, 0x6b, 0x8d, 0xcd, 0xea, 0x8b, 0xa0, 0x6d, 0x18, 0x18, 0xb0, 0x0d, 0x03, 0x03, 0xb6, 0x61,
	0x60, 0xc0, 0x36, 0x9c, 0x33, 0x60, 0x1b, 0x86, 0x06, 0x6d, 0xc3, 0xd0, 0xa0, 0x6d, 0x38, 0x43,
	0xd0, 0x36, 0x5c, 0xae, 0xa0, 0x6d, 0x18, 0x1c, 0xb2, 0x0d, 0x27, 0x09, 0xd9, 0x86, 0xb3, 0x84,
	0x6c, 0xc3, 0x37, 0x18, 0xb2, 0x0d, 0xdf, 0x63, 0xc8, 0x36, 0xee, 0x36, 0x43, 0xb6, 0x71, 0x77,
	0x7a, 0x8e, 0x6d, 0x68, 0x77, 0xe9, 0xcf, 0x22, 0x90, 0xe4, 0x6f, 0xb8, 0x24, 0x07, 0xa0, 0x7c,
	0xca, 0xa7, 0x61, 0x80, 0x15, 0xdb, 0x18, 0x5b, 0xc5, 0x36, 0x06, 0x23, 0xb1, 0x8d, 0x81, 0x48,
	0x6c, 0x63, 0x10, 0x12, 0xdb, 0x18, 0x47, 0xc5, 0x36, 0x86, 0x50, 0xb1, 0x8d, 0x19, 0x4b, 0x6c,
	0x63, 0xba, 0x12, 0xdb, 0x98, 0xab, 0xf0, 0x2a, 0x3a, 0x96, 0x07, 0x13, 0x95, 0x0f, 0xc0, 0x2c,
	0xe5, 0x03, 0x30, 0x45, 0xf9, 0x00, 0xcc, 0x4f, 0x3e, 0x00, 0x15, 0xe6, 0x03, 0x30, 0x33, 0xd1,
	0xc7, 0x41, 0x59, 0x2a, 0xa5, 0x5c, 0xb8, 0xf4, 0x97, 0x11, 0x88, 0xd3, 0x6f, 0xcb, 0x71, 0xf0,
	0x56, 0x73, 0x7b, 0x47, 0x19, 0xdf, 0xce, 0xd2, 0x90, 0x64, 0x00, 0x7f, 0x59, 0xf1, 0x7a, 0xf9,
	0xcb, 0x8a, 0x07, 0xf0, 0x97, 0x15, 0x0f, 0xe0, 0x2f, 0x2b, 0x1e, 0xc0, 0x5f, 0x56, 0x3c, 0x80,
	0xbf, 0xac, 0x78, 0x00, 0x7f, 0x59, 0xf1, 0x00, 0xfe, 0xb2, 0xe2, 0x01, 0xfc, 0x65, 0xc5, 0x03,
	0xdc, 0x97, 0x15, 0x01, 0xe1, 0x2f, 0x2b, 0x02, 0xc2, 0x5f, 0x56, 0x04, 0x84, 0xbf, 0xac, 0x08,
	0x08, 0x7f, 0x59, 0x11, 0x10, 0xd4, 0xd6, 0xf8, 0x3e, 0x4d, 0xf1, 0xda, 0x83, 0x7f, 0xfc, 0xc5,
	0x7b, 0xd2, 0xb7, 0xee, 0x5f, 0xe1, 0x6f, 0xc8, 0x1d, 0x73, 0xb8, 0xb7, 0x97, 0xa0, 0xdf, 0xb4,
	0x2f, 0xfd, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x3a, 0x87, 0xb1, 0x01, 0x48, 0x00, 0x00,
}
