// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/enums.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/TheThingsIndustries/protoc-gen-go-json/annotations"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DownlinkPathConstraint int32

const (
	// Indicates that the gateway can be selected for downlink without constraints by the Network Server.
	DownlinkPathConstraint_DOWNLINK_PATH_CONSTRAINT_NONE DownlinkPathConstraint = 0
	// Indicates that the gateway can be selected for downlink only if no other or better gateway can be selected.
	DownlinkPathConstraint_DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER DownlinkPathConstraint = 1
	// Indicates that this gateway will never be selected for downlink, even if that results in no available downlink path.
	DownlinkPathConstraint_DOWNLINK_PATH_CONSTRAINT_NEVER DownlinkPathConstraint = 2
)

var DownlinkPathConstraint_name = map[int32]string{
	0: "DOWNLINK_PATH_CONSTRAINT_NONE",
	1: "DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER",
	2: "DOWNLINK_PATH_CONSTRAINT_NEVER",
}

var DownlinkPathConstraint_value = map[string]int32{
	"DOWNLINK_PATH_CONSTRAINT_NONE":         0,
	"DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER": 1,
	"DOWNLINK_PATH_CONSTRAINT_NEVER":        2,
}

func (x DownlinkPathConstraint) String() string {
	return proto.EnumName(DownlinkPathConstraint_name, int32(x))
}

func (DownlinkPathConstraint) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e36318a1e2f407cb, []int{0}
}

// State enum defines states that an entity can be in.
type State int32

const (
	// Denotes that the entity has been requested and is pending review by an admin.
	STATE_REQUESTED State = 0
	// Denotes that the entity has been reviewed and approved by an admin.
	STATE_APPROVED State = 1
	// Denotes that the entity has been reviewed and rejected by an admin.
	STATE_REJECTED State = 2
	// Denotes that the entity has been flagged and is pending review by an admin.
	STATE_FLAGGED State = 3
	// Denotes that the entity has been reviewed and suspended by an admin.
	STATE_SUSPENDED State = 4
)

var State_name = map[int32]string{
	0: "STATE_REQUESTED",
	1: "STATE_APPROVED",
	2: "STATE_REJECTED",
	3: "STATE_FLAGGED",
	4: "STATE_SUSPENDED",
}

var State_value = map[string]int32{
	"STATE_REQUESTED": 0,
	"STATE_APPROVED":  1,
	"STATE_REJECTED":  2,
	"STATE_FLAGGED":   3,
	"STATE_SUSPENDED": 4,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e36318a1e2f407cb, []int{1}
}

type ClusterRole int32

const (
	ClusterRole_NONE                         ClusterRole = 0
	ClusterRole_ENTITY_REGISTRY              ClusterRole = 1
	ClusterRole_ACCESS                       ClusterRole = 2
	ClusterRole_GATEWAY_SERVER               ClusterRole = 3
	ClusterRole_NETWORK_SERVER               ClusterRole = 4
	ClusterRole_APPLICATION_SERVER           ClusterRole = 5
	ClusterRole_JOIN_SERVER                  ClusterRole = 6
	ClusterRole_CRYPTO_SERVER                ClusterRole = 7
	ClusterRole_DEVICE_TEMPLATE_CONVERTER    ClusterRole = 8
	ClusterRole_DEVICE_CLAIMING_SERVER       ClusterRole = 9
	ClusterRole_GATEWAY_CONFIGURATION_SERVER ClusterRole = 10
	ClusterRole_QR_CODE_GENERATOR            ClusterRole = 11
	ClusterRole_PACKET_BROKER_AGENT          ClusterRole = 12
	ClusterRole_DEVICE_REPOSITORY            ClusterRole = 13
)

var ClusterRole_name = map[int32]string{
	0:  "NONE",
	1:  "ENTITY_REGISTRY",
	2:  "ACCESS",
	3:  "GATEWAY_SERVER",
	4:  "NETWORK_SERVER",
	5:  "APPLICATION_SERVER",
	6:  "JOIN_SERVER",
	7:  "CRYPTO_SERVER",
	8:  "DEVICE_TEMPLATE_CONVERTER",
	9:  "DEVICE_CLAIMING_SERVER",
	10: "GATEWAY_CONFIGURATION_SERVER",
	11: "QR_CODE_GENERATOR",
	12: "PACKET_BROKER_AGENT",
	13: "DEVICE_REPOSITORY",
}

var ClusterRole_value = map[string]int32{
	"NONE":                         0,
	"ENTITY_REGISTRY":              1,
	"ACCESS":                       2,
	"GATEWAY_SERVER":               3,
	"NETWORK_SERVER":               4,
	"APPLICATION_SERVER":           5,
	"JOIN_SERVER":                  6,
	"CRYPTO_SERVER":                7,
	"DEVICE_TEMPLATE_CONVERTER":    8,
	"DEVICE_CLAIMING_SERVER":       9,
	"GATEWAY_CONFIGURATION_SERVER": 10,
	"QR_CODE_GENERATOR":            11,
	"PACKET_BROKER_AGENT":          12,
	"DEVICE_REPOSITORY":            13,
}

func (x ClusterRole) String() string {
	return proto.EnumName(ClusterRole_name, int32(x))
}

func (ClusterRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e36318a1e2f407cb, []int{2}
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.DownlinkPathConstraint", DownlinkPathConstraint_name, DownlinkPathConstraint_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.DownlinkPathConstraint", DownlinkPathConstraint_name, DownlinkPathConstraint_value)
	proto.RegisterEnum("ttn.lorawan.v3.State", State_name, State_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.State", State_name, State_value)
	proto.RegisterEnum("ttn.lorawan.v3.ClusterRole", ClusterRole_name, ClusterRole_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.ClusterRole", ClusterRole_name, ClusterRole_value)
}

func init() { proto.RegisterFile("lorawan-stack/api/enums.proto", fileDescriptor_e36318a1e2f407cb) }
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/enums.proto", fileDescriptor_e36318a1e2f407cb)
}

var fileDescriptor_e36318a1e2f407cb = []byte{
	// 585 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x52, 0xdb, 0x3e,
	0x10, 0xc7, 0x71, 0xf8, 0xf3, 0x03, 0xf1, 0x03, 0x8c, 0x98, 0x52, 0xc8, 0x00, 0x43, 0x3b, 0xd3,
	0x43, 0x33, 0x93, 0xf8, 0xc0, 0xf4, 0x01, 0x84, 0xbc, 0x18, 0x93, 0x20, 0x19, 0x59, 0x84, 0x49,
	0x2f, 0x1e, 0x87, 0xba, 0x8e, 0x9b, 0x20, 0x65, 0x62, 0x05, 0x8e, 0xbd, 0xf6, 0x3d, 0x7a, 0x63,
	0xfa, 0x10, 0xbc, 0x4b, 0x6f, 0x3c, 0x45, 0xc7, 0x4e, 0x52, 0xca, 0x21, 0x37, 0xed, 0x67, 0xbf,
	0xbb, 0xfa, 0xae, 0x66, 0x85, 0x0e, 0x07, 0x7a, 0x14, 0x3f, 0xc4, 0xaa, 0x9e, 0x9b, 0xf8, 0xb6,
	0xef, 0xc4, 0xc3, 0xcc, 0x49, 0xd4, 0xf8, 0x2e, 0x6f, 0x0c, 0x47, 0xda, 0x68, 0xbc, 0x69, 0x8c,
	0x6a, 0x4c, 0x25, 0x8d, 0xfb, 0x93, 0x6a, 0x3d, 0xcd, 0x4c, 0x6f, 0xdc, 0x6d, 0xdc, 0xea, 0x3b,
	0x27, 0xd5, 0xa9, 0x76, 0x4a, 0x59, 0x77, 0xfc, 0xb5, 0x8c, 0xca, 0xa0, 0x3c, 0x4d, 0xca, 0xab,
	0xf4, 0x1f, 0xb9, 0xec, 0x25, 0xb2, 0x97, 0xa9, 0x34, 0xf7, 0xd5, 0x97, 0x71, 0x6e, 0x46, 0x59,
	0x92, 0x4f, 0xaa, 0x6f, 0xeb, 0x69, 0xa2, 0xea, 0xa9, 0xae, 0x7f, 0xcb, 0xb5, 0x72, 0x62, 0xa5,
	0xb4, 0x89, 0x4d, 0xa6, 0xd5, 0xd4, 0x43, 0xed, 0x97, 0x85, 0x76, 0x5d, 0xfd, 0xa0, 0x06, 0x99,
	0xea, 0x07, 0xb1, 0xe9, 0x51, 0xad, 0x72, 0x33, 0x8a, 0x33, 0x65, 0xf0, 0x3b, 0x74, 0xe8, 0xf2,
	0x1b, 0xd6, 0xf2, 0x59, 0x33, 0x0a, 0x88, 0x3c, 0x8f, 0x28, 0x67, 0xa1, 0x14, 0xc4, 0x67, 0x32,
	0x62, 0x9c, 0x81, 0xbd, 0x80, 0x3f, 0xa2, 0x0f, 0x73, 0x25, 0x81, 0x80, 0x33, 0x10, 0x11, 0x97,
	0xe7, 0x20, 0x6c, 0x0b, 0xbf, 0x47, 0x47, 0xf3, 0xbb, 0x41, 0x1b, 0x84, 0x5d, 0xa9, 0x1e, 0x3f,
	0x3f, 0xee, 0x1f, 0xec, 0x59, 0xb5, 0xbd, 0x79, 0xca, 0xda, 0x77, 0xb4, 0x1c, 0x9a, 0xd8, 0x24,
	0x78, 0x07, 0x6d, 0x85, 0x92, 0x48, 0x88, 0x04, 0x5c, 0x5d, 0x43, 0x28, 0xc1, 0xb5, 0x17, 0x30,
	0x46, 0x9b, 0x13, 0x48, 0x82, 0x40, 0xf0, 0x36, 0xb8, 0xb6, 0xf5, 0xc2, 0x04, 0x5c, 0x00, 0x2d,
	0x74, 0x15, 0xbc, 0x8d, 0x36, 0x26, 0xec, 0xac, 0x45, 0x3c, 0x0f, 0x5c, 0x7b, 0xf1, 0xa5, 0x5f,
	0x78, 0x1d, 0x06, 0xc0, 0x5c, 0x70, 0xed, 0xa5, 0xea, 0xf6, 0xf3, 0xe3, 0xfe, 0xda, 0x9e, 0x55,
	0x5b, 0x2e, 0x53, 0x3f, 0x7e, 0x1e, 0x2d, 0xd4, 0x9e, 0x2a, 0x68, 0x9d, 0x0e, 0xc6, 0xb9, 0x49,
	0x46, 0x42, 0x0f, 0x12, 0xbc, 0x8a, 0x96, 0xa6, 0x6f, 0xb1, 0x83, 0xb6, 0x80, 0x49, 0x5f, 0x76,
	0x22, 0x01, 0x9e, 0x1f, 0x4a, 0xd1, 0xb1, 0x2d, 0x8c, 0xd0, 0x0a, 0xa1, 0x14, 0xc2, 0xd0, 0xae,
	0x14, 0x4e, 0x3c, 0x22, 0xe1, 0x86, 0x74, 0xa2, 0x10, 0x44, 0x31, 0xf1, 0x62, 0xc1, 0x18, 0xc8,
	0x1b, 0x2e, 0x9a, 0x33, 0xb6, 0x84, 0x77, 0x11, 0x26, 0x41, 0xd0, 0xf2, 0x29, 0x91, 0x3e, 0x67,
	0x33, 0xbe, 0x8c, 0xb7, 0xd0, 0xfa, 0x05, 0xf7, 0xff, 0x82, 0x95, 0x62, 0x0c, 0x2a, 0x3a, 0x81,
	0xe4, 0x33, 0xf4, 0x1f, 0x3e, 0x44, 0xfb, 0x2e, 0xb4, 0x7d, 0x0a, 0x91, 0x84, 0xcb, 0xa0, 0x55,
	0x0c, 0x44, 0x39, 0x6b, 0x83, 0x90, 0x20, 0xec, 0x55, 0x5c, 0x45, 0xbb, 0xd3, 0x34, 0x6d, 0x11,
	0xff, 0xd2, 0x67, 0xde, 0xac, 0x74, 0x0d, 0x1f, 0xa3, 0x83, 0x99, 0x3d, 0xca, 0xd9, 0x99, 0xef,
	0x5d, 0x8b, 0x57, 0x06, 0x10, 0x7e, 0x83, 0xb6, 0xaf, 0x44, 0x44, 0xb9, 0x0b, 0x91, 0x07, 0x0c,
	0x04, 0x91, 0x5c, 0xd8, 0xeb, 0xf8, 0x2d, 0xda, 0x09, 0x08, 0x6d, 0x82, 0x8c, 0x4e, 0x05, 0x6f,
	0x82, 0x88, 0x88, 0x07, 0x4c, 0xda, 0xff, 0x17, 0xfa, 0xe9, 0x6d, 0x02, 0x02, 0x1e, 0xfa, 0x92,
	0x8b, 0x8e, 0xbd, 0x71, 0xfa, 0xe9, 0xe9, 0xf7, 0x91, 0xf5, 0xd9, 0x49, 0x75, 0xc3, 0xf4, 0x12,
	0x53, 0x6e, 0x6d, 0x43, 0x25, 0xe6, 0x41, 0x8f, 0xfa, 0xce, 0xeb, 0x0f, 0x73, 0x7f, 0xe2, 0x0c,
	0xfb, 0xa9, 0x63, 0x8c, 0x1a, 0x76, 0xbb, 0x2b, 0xe5, 0xc2, 0x9e, 0xfc, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x33, 0x66, 0x7d, 0xbd, 0x55, 0x03, 0x00, 0x00,
}
